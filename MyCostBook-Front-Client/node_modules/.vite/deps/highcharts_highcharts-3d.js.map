{
  "version": 3,
  "sources": ["../../highcharts/highcharts-3d.src.js"],
  "sourcesContent": ["/**\n * @license Highcharts JS v10.3.3 (2023-01-20)\n *\n * 3D features for Highcharts JS\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/highcharts-3d', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(\n                    new CustomEvent(\n                        'HighchartsModuleLoaded',\n                        { detail: { path: path, module: obj[path] }\n                    })\n                );\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Math3D.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var deg2rad = H.deg2rad;\n        var pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable max-len */\n        /**\n         * Apply 3-D rotation\n         * Euler Angles (XYZ):\n         *     cosA = cos(Alfa|Roll)\n         *     cosB = cos(Beta|Pitch)\n         *     cosG = cos(Gamma|Yaw)\n         *\n         * Composite rotation:\n         * |          cosB * cosG             |           cosB * sinG            |    -sinB    |\n         * | sinA * sinB * cosG - cosA * sinG | sinA * sinB * sinG + cosA * cosG | sinA * cosB |\n         * | cosA * sinB * cosG + sinA * sinG | cosA * sinB * sinG - sinA * cosG | cosA * cosB |\n         *\n         * Now, Gamma/Yaw is not used (angle=0), so we assume cosG = 1 and sinG = 0, so\n         * we get:\n         * |     cosB    |   0    |   - sinB    |\n         * | sinA * sinB |  cosA  | sinA * cosB |\n         * | cosA * sinB | - sinA | cosA * cosB |\n         *\n         * But in browsers, y is reversed, so we get sinA => -sinA. The general result\n         * is:\n         * |      cosB     |   0    |    - sinB     |     | x |     | px |\n         * | - sinA * sinB |  cosA  | - sinA * cosB |  x  | y |  =  | py |\n         * |  cosA * sinB  |  sinA  |  cosA * cosB  |     | z |     | pz |\n         *\n         * @private\n         * @function rotate3D\n         */\n        /* eslint-enable max-len */\n        /**\n         * Rotates the position as defined in angles.\n         * @private\n         * @param {number} x\n         *        X coordinate\n         * @param {number} y\n         *        Y coordinate\n         * @param {number} z\n         *        Z coordinate\n         * @param {Highcharts.Rotation3DObject} angles\n         *        Rotation angles\n         * @return {Highcharts.Position3DObject}\n         *         Rotated position\n         */\n        function rotate3D(x, y, z, angles) {\n            return {\n                x: angles.cosB * x - angles.sinB * z,\n                y: -angles.sinA * angles.sinB * x + angles.cosA * y -\n                    angles.cosB * angles.sinA * z,\n                z: angles.cosA * angles.sinB * x + angles.sinA * y +\n                    angles.cosA * angles.cosB * z\n            };\n        }\n        /**\n         * Transforms a given array of points according to the angles in chart.options.\n         *\n         * @private\n         * @function Highcharts.perspective\n         *\n         * @param {Array<Highcharts.Position3DObject>} points\n         * The array of points\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @param {boolean} [useInvertedPersp]\n         * Whether to use inverted perspective in calculations\n         *\n         * @return {Array<Highcharts.Position3DObject>}\n         * An array of transformed points\n         *\n         * @requires highcharts-3d\n         */\n        function perspective(points, chart, insidePlotArea, useInvertedPersp) {\n            var options3d = chart.options.chart.options3d, \n                /* The useInvertedPersp argument is used for inverted charts with\n                 * already inverted elements,\n                such as dataLabels or tooltip positions.\n                 */\n                inverted = pick(useInvertedPersp,\n                insidePlotArea ? chart.inverted : false),\n                origin = {\n                    x: chart.plotWidth / 2,\n                    y: chart.plotHeight / 2,\n                    z: options3d.depth / 2,\n                    vd: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0)\n                },\n                scale = chart.scale3d || 1,\n                beta = deg2rad * options3d.beta * (inverted ? -1 : 1),\n                alpha = deg2rad * options3d.alpha * (inverted ? -1 : 1),\n                angles = {\n                    cosA: Math.cos(alpha),\n                    cosB: Math.cos(-beta),\n                    sinA: Math.sin(alpha),\n                    sinB: Math.sin(-beta)\n                };\n            if (!insidePlotArea) {\n                origin.x += chart.plotLeft;\n                origin.y += chart.plotTop;\n            }\n            // Transform each point\n            return points.map(function (point) {\n                var rotated = rotate3D((inverted ? point.y : point.x) - origin.x, (inverted ? point.x : point.y) - origin.y, (point.z || 0) - origin.z,\n                    angles), \n                    // Apply perspective\n                    coordinate = perspective3D(rotated,\n                    origin,\n                    origin.vd);\n                // Apply translation\n                coordinate.x = coordinate.x * scale + origin.x;\n                coordinate.y = coordinate.y * scale + origin.y;\n                coordinate.z = rotated.z * scale + origin.z;\n                return {\n                    x: (inverted ? coordinate.y : coordinate.x),\n                    y: (inverted ? coordinate.x : coordinate.y),\n                    z: coordinate.z\n                };\n            });\n        }\n        /**\n         * Perspective3D function is available in global Highcharts scope because is\n         * needed also outside of perspective() function (#8042).\n         * @private\n         * @function Highcharts.perspective3D\n         *\n         * @param {Highcharts.Position3DObject} coordinate\n         * 3D position\n         *\n         * @param {Highcharts.Position3DObject} origin\n         * 3D root position\n         *\n         * @param {number} distance\n         * Perspective distance\n         *\n         * @return {Highcharts.PositionObject}\n         * Perspective 3D Position\n         *\n         * @requires highcharts-3d\n         */\n        function perspective3D(coordinate, origin, distance) {\n            var projection = ((distance > 0) &&\n                    (distance < Number.POSITIVE_INFINITY)) ?\n                    distance / (coordinate.z + origin.z + distance) :\n                    1;\n            return {\n                x: coordinate.x * projection,\n                y: coordinate.y * projection\n            };\n        }\n        /**\n         * Calculate a distance from camera to points - made for calculating zIndex of\n         * scatter points.\n         *\n         * @private\n         * @function Highcharts.pointCameraDistance\n         *\n         * @param {Highcharts.Dictionary<number>} coordinates\n         * Coordinates of the specific point\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @return {number}\n         * Distance from camera to point\n         *\n         * @requires highcharts-3d\n         */\n        function pointCameraDistance(coordinates, chart) {\n            var options3d = chart.options.chart.options3d,\n                cameraPosition = {\n                    x: chart.plotWidth / 2,\n                    y: chart.plotHeight / 2,\n                    z: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0) +\n                        options3d.depth\n                }, \n                // Added support for objects with plotX or x coordinates.\n                distance = Math.sqrt(Math.pow(cameraPosition.x - pick(coordinates.plotX,\n                coordinates.x), 2) +\n                    Math.pow(cameraPosition.y - pick(coordinates.plotY,\n                coordinates.y), 2) +\n                    Math.pow(cameraPosition.z - pick(coordinates.plotZ,\n                coordinates.z), 2));\n            return distance;\n        }\n        /**\n         * Calculate area of a 2D polygon using Shoelace algorithm\n         * https://en.wikipedia.org/wiki/Shoelace_formula\n         *\n         * @private\n         * @function Highcharts.shapeArea\n         *\n         * @param {Array<Highcharts.PositionObject>} vertexes\n         * 2D Polygon\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea(vertexes) {\n            var area = 0,\n                i,\n                j;\n            for (i = 0; i < vertexes.length; i++) {\n                j = (i + 1) % vertexes.length;\n                area += vertexes[i].x * vertexes[j].y - vertexes[j].x * vertexes[i].y;\n            }\n            return area / 2;\n        }\n        /**\n         * Calculate area of a 3D polygon after perspective projection\n         *\n         * @private\n         * @function Highcharts.shapeArea3d\n         *\n         * @param {Array<Highcharts.Position3DObject>} vertexes\n         * 3D Polygon\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea3D(vertexes, chart, insidePlotArea) {\n            return shapeArea(perspective(vertexes, chart, insidePlotArea));\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Math3D = {\n                perspective: perspective,\n                perspective3D: perspective3D,\n                pointCameraDistance: pointCameraDistance,\n                shapeArea: shapeArea,\n                shapeArea3D: shapeArea3D\n            };\n\n        return Math3D;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGElement3D.js', [_modules['Core/Color/Color.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Color, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var defined = U.defined,\n            merge = U.merge,\n            objectEach = U.objectEach,\n            pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var SVGElement3D = {};\n        SVGElement3D.base = {\n            /* eslint-disable valid-jsdoc */\n            /**\n             * The init is used by base - renderer.Element\n             * @private\n             */\n            initArgs: function (args) {\n                var elem3d = this,\n                    renderer = elem3d.renderer,\n                    paths = renderer[elem3d.pathType + 'Path'](args),\n                    zIndexes = paths.zIndexes;\n                // build parts\n                elem3d.parts.forEach(function (part) {\n                    var attribs = {\n                            'class': 'highcharts-3d-' + part,\n                            zIndex: zIndexes[part] || 0\n                        };\n                    if (renderer.styledMode) {\n                        if (part === 'top') {\n                            attribs.filter = 'url(#highcharts-brighter)';\n                        }\n                        else if (part === 'side') {\n                            attribs.filter = 'url(#highcharts-darker)';\n                        }\n                    }\n                    elem3d[part] = renderer.path(paths[part])\n                        .attr(attribs)\n                        .add(elem3d);\n                });\n                elem3d.attr({\n                    'stroke-linejoin': 'round',\n                    zIndex: zIndexes.group\n                });\n                // store original destroy\n                elem3d.originalDestroy = elem3d.destroy;\n                elem3d.destroy = elem3d.destroyParts;\n                // Store information if any side of element was rendered by force.\n                elem3d.forcedSides = paths.forcedSides;\n            },\n            /**\n             * Single property setter that applies options to each part\n             * @private\n             */\n            singleSetterForParts: function (prop, val, values, verb, duration, complete) {\n                var elem3d = this,\n                    newAttr = {},\n                    optionsToApply = [null,\n                    null, (verb || 'attr'),\n                    duration,\n                    complete],\n                    hasZIndexes = values && values.zIndexes;\n                if (!values) {\n                    newAttr[prop] = val;\n                    optionsToApply[0] = newAttr;\n                }\n                else {\n                    // It is needed to deal with the whole group zIndexing\n                    // in case of graph rotation\n                    if (hasZIndexes && hasZIndexes.group) {\n                        this.attr({\n                            zIndex: hasZIndexes.group\n                        });\n                    }\n                    objectEach(values, function (partVal, part) {\n                        newAttr[part] = {};\n                        newAttr[part][prop] = partVal;\n                        // include zIndexes if provided\n                        if (hasZIndexes) {\n                            newAttr[part].zIndex = values.zIndexes[part] || 0;\n                        }\n                    });\n                    optionsToApply[1] = newAttr;\n                }\n                return elem3d.processParts.apply(elem3d, optionsToApply);\n            },\n            /**\n             * Calls function for each part. Used for attr, animate and destroy.\n             * @private\n             */\n            processParts: function (props, partsProps, verb, duration, complete) {\n                var elem3d = this;\n                elem3d.parts.forEach(function (part) {\n                    // if different props for different parts\n                    if (partsProps) {\n                        props = pick(partsProps[part], false);\n                    }\n                    // only if something to set, but allow undefined\n                    if (props !== false) {\n                        elem3d[part][verb](props, duration, complete);\n                    }\n                });\n                return elem3d;\n            },\n            /**\n             * Destroy all parts\n             * @private\n             */\n            destroyParts: function () {\n                this.processParts(null, null, 'destroy');\n                return this.originalDestroy();\n            }\n            /* eslint-enable valid-jsdoc */\n        };\n        SVGElement3D.cuboid = merge(SVGElement3D.base, {\n            parts: ['front', 'top', 'side'],\n            pathType: 'cuboid',\n            attr: function (args, val, complete, continueAnimation) {\n                // Resolve setting attributes by string name\n                if (typeof args === 'string' && typeof val !== 'undefined') {\n                    var key = args;\n                    args = {};\n                    args[key] = val;\n                }\n                if (args.shapeArgs || defined(args.x)) {\n                    return this.singleSetterForParts('d', null, this.renderer[this.pathType + 'Path'](args.shapeArgs || args));\n                }\n                return SVGElement.prototype.attr.call(this, args, void 0, complete, continueAnimation);\n            },\n            animate: function (args, duration, complete) {\n                if (defined(args.x) && defined(args.y)) {\n                    var paths = this.renderer[this.pathType + 'Path'](args),\n                        forcedSides = paths.forcedSides;\n                    this.singleSetterForParts('d', null, paths, 'animate', duration, complete);\n                    this.attr({\n                        zIndex: paths.zIndexes.group\n                    });\n                    // If sides that are forced to render changed, recalculate colors.\n                    if (forcedSides !== this.forcedSides) {\n                        this.forcedSides = forcedSides;\n                        if (!this.renderer.styledMode) {\n                            SVGElement3D.cuboid.fillSetter.call(this, this.fill);\n                        }\n                    }\n                }\n                else {\n                    SVGElement.prototype.animate.call(this, args, duration, complete);\n                }\n                return this;\n            },\n            fillSetter: function (fill) {\n                var elem3d = this;\n                elem3d.forcedSides = elem3d.forcedSides || [];\n                elem3d.singleSetterForParts('fill', null, {\n                    front: fill,\n                    // Do not change color if side was forced to render.\n                    top: color(fill).brighten(elem3d.forcedSides.indexOf('top') >= 0 ? 0 : 0.1).get(),\n                    side: color(fill).brighten(elem3d.forcedSides.indexOf('side') >= 0 ? 0 : -0.1).get()\n                });\n                // fill for animation getter (#6776)\n                elem3d.color = elem3d.fill = fill;\n                return elem3d;\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGElement3D;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGRenderer3D.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Color/Color.js'], _modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Renderer/SVG/SVGElement3D.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (A, Color, H, Math3D, SVGElement, SVGElement3D, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var animObject = A.animObject;\n        var color = Color.parse;\n        var charts = H.charts,\n            deg2rad = H.deg2rad;\n        var perspective = Math3D.perspective,\n            shapeArea = Math3D.shapeArea;\n        var defined = U.defined,\n            extend = U.extend,\n            merge = U.merge,\n            pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var cos = Math.cos,\n            sin = Math.sin,\n            PI = Math.PI,\n            dFactor = (4 * (Math.sqrt(2) - 1) / 3) / (PI / 2);\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var SVGRenderer3D = /** @class */ (function (_super) {\n                __extends(SVGRenderer3D, _super);\n            function SVGRenderer3D() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /** @private */\n            SVGRenderer3D.compose = function (SVGRendererClass) {\n                var svgRendererProto = SVGRendererClass.prototype,\n                    svgRenderer3dProto = SVGRenderer3D.prototype;\n                svgRendererProto.elements3d = SVGElement3D;\n                svgRendererProto.arc3d = svgRenderer3dProto.arc3d;\n                svgRendererProto.arc3dPath = svgRenderer3dProto.arc3dPath;\n                svgRendererProto.cuboid = svgRenderer3dProto.cuboid;\n                svgRendererProto.cuboidPath = svgRenderer3dProto.cuboidPath;\n                svgRendererProto.element3d = svgRenderer3dProto.element3d;\n                svgRendererProto.face3d = svgRenderer3dProto.face3d;\n                svgRendererProto.polyhedron = svgRenderer3dProto.polyhedron;\n                svgRendererProto.toLinePath = svgRenderer3dProto.toLinePath;\n                svgRendererProto.toLineSegments = svgRenderer3dProto.toLineSegments;\n            };\n            /**\n             * Method to construct a curved path. Can 'wrap' around more then 180\n             * degrees.\n             * @private\n             */\n            SVGRenderer3D.curveTo = function (cx, cy, rx, ry, start, end, dx, dy) {\n                var result = [],\n                    arcAngle = end - start;\n                if ((end > start) && (end - start > Math.PI / 2 + 0.0001)) {\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start, start + (Math.PI / 2), dx, dy));\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start + (Math.PI / 2), end, dx, dy));\n                    return result;\n                }\n                if ((end < start) && (start - end > Math.PI / 2 + 0.0001)) {\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start, start - (Math.PI / 2), dx, dy));\n                    result = result.concat(this.curveTo(cx, cy, rx, ry, start - (Math.PI / 2), end, dx, dy));\n                    return result;\n                }\n                return [[\n                        'C',\n                        cx + (rx * Math.cos(start)) -\n                            ((rx * dFactor * arcAngle) * Math.sin(start)) + dx,\n                        cy + (ry * Math.sin(start)) +\n                            ((ry * dFactor * arcAngle) * Math.cos(start)) + dy,\n                        cx + (rx * Math.cos(end)) +\n                            ((rx * dFactor * arcAngle) * Math.sin(end)) + dx,\n                        cy + (ry * Math.sin(end)) -\n                            ((ry * dFactor * arcAngle) * Math.cos(end)) + dy,\n                        cx + (rx * Math.cos(end)) + dx,\n                        cy + (ry * Math.sin(end)) + dy\n                    ]];\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            SVGRenderer3D.prototype.toLinePath = function (points, closed) {\n                var result = [];\n                // Put \"L x y\" for each point\n                points.forEach(function (point) {\n                    result.push(['L', point.x, point.y]);\n                });\n                if (points.length) {\n                    // Set the first element to M\n                    result[0][0] = 'M';\n                    // If it is a closed line, add Z\n                    if (closed) {\n                        result.push(['Z']);\n                    }\n                }\n                return result;\n            };\n            /** @private */\n            SVGRenderer3D.prototype.toLineSegments = function (points) {\n                var result = [],\n                    m = true;\n                points.forEach(function (point) {\n                    result.push(m ? ['M', point.x, point.y] : ['L', point.x, point.y]);\n                    m = !m;\n                });\n                return result;\n            };\n            /**\n             * A 3-D Face is defined by it's 3D vertexes, and is only visible if it's\n             * vertexes are counter-clockwise (Back-face culling). It is used as a\n             * polyhedron Element.\n             * @private\n             */\n            SVGRenderer3D.prototype.face3d = function (args) {\n                var renderer = this,\n                    ret = this.createElement('path');\n                ret.vertexes = [];\n                ret.insidePlotArea = false;\n                ret.enabled = true;\n                /* eslint-disable no-invalid-this */\n                ret.attr = function (hash) {\n                    if (typeof hash === 'object' &&\n                        (defined(hash.enabled) ||\n                            defined(hash.vertexes) ||\n                            defined(hash.insidePlotArea))) {\n                        this.enabled = pick(hash.enabled, this.enabled);\n                        this.vertexes = pick(hash.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(hash.insidePlotArea, this.insidePlotArea);\n                        delete hash.enabled;\n                        delete hash.vertexes;\n                        delete hash.insidePlotArea;\n                        var chart = charts[renderer.chartIndex],\n                            vertexes2d = perspective(this.vertexes,\n                            chart,\n                            this.insidePlotArea),\n                            path = renderer.toLinePath(vertexes2d,\n                            true),\n                            area = shapeArea(vertexes2d);\n                        hash.d = path;\n                        hash.visibility = (this.enabled && area > 0) ?\n                            'inherit' : 'hidden';\n                    }\n                    return SVGElement.prototype.attr.apply(this, arguments);\n                };\n                ret.animate = function (params) {\n                    if (typeof params === 'object' &&\n                        (defined(params.enabled) ||\n                            defined(params.vertexes) ||\n                            defined(params.insidePlotArea))) {\n                        this.enabled = pick(params.enabled, this.enabled);\n                        this.vertexes = pick(params.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(params.insidePlotArea, this.insidePlotArea);\n                        delete params.enabled;\n                        delete params.vertexes;\n                        delete params.insidePlotArea;\n                        var chart = charts[renderer.chartIndex],\n                            vertexes2d = perspective(this.vertexes,\n                            chart,\n                            this.insidePlotArea),\n                            path = renderer.toLinePath(vertexes2d,\n                            true),\n                            area = shapeArea(vertexes2d),\n                            visibility = (this.enabled && area > 0) ?\n                                'visible' : 'hidden';\n                        params.d = path;\n                        this.attr('visibility', visibility);\n                    }\n                    return SVGElement.prototype.animate.apply(this, arguments);\n                };\n                /* eslint-enable no-invalid-this */\n                return ret.attr(args);\n            };\n            /**\n             * A Polyhedron is a handy way of defining a group of 3-D faces. It's only\n             * attribute is `faces`, an array of attributes of each one of it's Face3D\n             * instances.\n             * @private\n             */\n            SVGRenderer3D.prototype.polyhedron = function (args) {\n                var renderer = this,\n                    result = this.g(),\n                    destroy = result.destroy;\n                if (!this.styledMode) {\n                    result.attr({\n                        'stroke-linejoin': 'round'\n                    });\n                }\n                result.faces = [];\n                /* eslint-disable no-invalid-this */\n                // destroy all children\n                result.destroy = function () {\n                    for (var i = 0; i < result.faces.length; i++) {\n                        result.faces[i].destroy();\n                    }\n                    return destroy.call(this);\n                };\n                result.attr = function (hash, val, complete, continueAnimation) {\n                    if (typeof hash === 'object' && defined(hash.faces)) {\n                        while (result.faces.length > hash.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < hash.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (var i = 0; i < hash.faces.length; i++) {\n                            if (renderer.styledMode) {\n                                delete hash.faces[i].fill;\n                            }\n                            result.faces[i].attr(hash.faces[i], null, complete, continueAnimation);\n                        }\n                        delete hash.faces;\n                    }\n                    return SVGElement.prototype.attr.apply(this, arguments);\n                };\n                result.animate = function (params, duration, complete) {\n                    if (params && params.faces) {\n                        while (result.faces.length > params.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < params.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (var i = 0; i < params.faces.length; i++) {\n                            result.faces[i].animate(params.faces[i], duration, complete);\n                        }\n                        delete params.faces;\n                    }\n                    return SVGElement.prototype.animate.apply(this, arguments);\n                };\n                /* eslint-enable no-invalid-this */\n                return result.attr(args);\n            };\n            /**\n             * return result, generalization\n             * @private\n             * @requires highcharts-3d\n             */\n            SVGRenderer3D.prototype.element3d = function (type, shapeArgs) {\n                // base\n                var ret = this.g();\n                // extend\n                extend(ret, this.elements3d[type]);\n                // init\n                ret.initArgs(shapeArgs);\n                // return\n                return ret;\n            };\n            /**\n             * generelized, so now use simply\n             * @private\n             */\n            SVGRenderer3D.prototype.cuboid = function (shapeArgs) {\n                return this.element3d('cuboid', shapeArgs);\n            };\n            /**\n             * Generates a cuboid path and zIndexes\n             * @private\n             */\n            SVGRenderer3D.prototype.cuboidPath = function (shapeArgs) {\n                var x = shapeArgs.x || 0,\n                    y = shapeArgs.y || 0,\n                    z = shapeArgs.z || 0, \n                    // For side calculation (right/left)\n                    // there is a need for height (and other shapeArgs arguments)\n                    // to be at least 1px\n                    h = shapeArgs.height || 0,\n                    w = shapeArgs.width || 0,\n                    d = shapeArgs.depth || 0,\n                    chart = charts[this.chartIndex],\n                    front,\n                    back,\n                    top,\n                    bottom,\n                    left,\n                    right,\n                    shape,\n                    path1,\n                    path2,\n                    path3,\n                    isFront,\n                    isTop,\n                    isRight,\n                    options3d = chart.options.chart.options3d,\n                    alpha = options3d.alpha, \n                    // Priority for x axis is the biggest,\n                    // because of x direction has biggest influence on zIndex\n                    incrementX = 1000000, \n                    // y axis has the smallest priority in case of our charts\n                    // (needs to be set because of stacking)\n                    incrementY = 10,\n                    incrementZ = 100,\n                    zIndex = 0, \n                    // The 8 corners of the cube\n                    pArr = [{\n                            x: x,\n                            y: y,\n                            z: z\n                        }, {\n                            x: x + w,\n                            y: y,\n                            z: z\n                        }, {\n                            x: x + w,\n                            y: y + h,\n                            z: z\n                        }, {\n                            x: x,\n                            y: y + h,\n                            z: z\n                        }, {\n                            x: x,\n                            y: y + h,\n                            z: z + d\n                        }, {\n                            x: x + w,\n                            y: y + h,\n                            z: z + d\n                        }, {\n                            x: x + w,\n                            y: y,\n                            z: z + d\n                        }, {\n                            x: x,\n                            y: y,\n                            z: z + d\n                        }],\n                    forcedSides = [],\n                    pickShape;\n                // apply perspective\n                pArr = perspective(pArr, chart, shapeArgs.insidePlotArea);\n                /**\n                 * helper method to decide which side is visible\n                 * @private\n                 */\n                function mapSidePath(i) {\n                    // Added support for 0 value in columns, where height is 0\n                    // but the shape is rendered.\n                    // Height is used from 1st to 6th element of pArr\n                    if (h === 0 && i > 1 && i < 6) { // [2, 3, 4, 5]\n                        return {\n                            x: pArr[i].x,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y + 10,\n                            z: pArr[i].z\n                        };\n                    }\n                    // It is needed to calculate dummy sides (front/back) for breaking\n                    // points in case of x and depth values. If column has side,\n                    // it means that x values of front and back side are different.\n                    if (pArr[0].x === pArr[7].x && i >= 4) { // [4, 5, 6, 7]\n                        return {\n                            x: pArr[i].x + 10,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z\n                        };\n                    }\n                    // Added dummy depth\n                    if (d === 0 && i < 2 || i > 5) { // [0, 1, 6, 7]\n                        return {\n                            x: pArr[i].x,\n                            // when height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate cuboid\n                            // for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z + 10\n                        };\n                    }\n                    return pArr[i];\n                }\n                /**\n                 * method creating the final side\n                 * @private\n                 */\n                function mapPath(i) {\n                    return pArr[i];\n                }\n                /**\n                 * First value - path with specific face\n                 * Second  value - added information about side for later calculations.\n                 * Possible second values are 0 for path1, 1 for path2 and -1 for no\n                 * path chosen.\n                 * Third value - string containing information about current side\n                 * of cuboid for forcing side rendering.\n                 * @private\n                 */\n                pickShape = function (verticesIndex1, verticesIndex2, side) {\n                    var ret = [[], -1], \n                        // An array of vertices for cuboid face\n                        face1 = verticesIndex1.map(mapPath),\n                        face2 = verticesIndex2.map(mapPath), \n                        // dummy face is calculated the same way as standard face, but\n                        // if cuboid height is 0 additional height is added so it is\n                        // possible to use this vertices array for visible face\n                        // calculation\n                        dummyFace1 = verticesIndex1.map(mapSidePath),\n                        dummyFace2 = verticesIndex2.map(mapSidePath);\n                    if (shapeArea(face1) < 0) {\n                        ret = [face1, 0];\n                    }\n                    else if (shapeArea(face2) < 0) {\n                        ret = [face2, 1];\n                    }\n                    else if (side) {\n                        forcedSides.push(side);\n                        if (shapeArea(dummyFace1) < 0) {\n                            ret = [face1, 0];\n                        }\n                        else if (shapeArea(dummyFace2) < 0) {\n                            ret = [face2, 1];\n                        }\n                        else {\n                            ret = [face1, 0]; // force side calculation.\n                        }\n                    }\n                    return ret;\n                };\n                // front or back\n                front = [3, 2, 1, 0];\n                back = [7, 6, 5, 4];\n                shape = pickShape(front, back, 'front');\n                path1 = shape[0];\n                isFront = shape[1];\n                // top or bottom\n                top = [1, 6, 7, 0];\n                bottom = [4, 5, 2, 3];\n                shape = pickShape(top, bottom, 'top');\n                path2 = shape[0];\n                isTop = shape[1];\n                // side\n                right = [1, 2, 5, 6];\n                left = [0, 7, 4, 3];\n                shape = pickShape(right, left, 'side');\n                path3 = shape[0];\n                isRight = shape[1];\n                /* New block used for calculating zIndex. It is basing on X, Y and Z\n                position of specific columns. All zIndexes (for X, Y and Z values) are\n                added to the final zIndex, where every value has different priority. The\n                biggest priority is in X and Z directions, the lowest index is for\n                stacked columns (Y direction and the same X and Z positions). Big\n                differences between priorities is made because we need to ensure that\n                even for big changes in Y and Z parameters all columns will be drawn\n                correctly. */\n                if (isRight === 1) {\n                    // It is needed to connect value with current chart width\n                    // for big chart size.\n                    zIndex += incrementX * (chart.plotWidth - x);\n                }\n                else if (!isRight) {\n                    zIndex += incrementX * x;\n                }\n                zIndex += incrementY * (!isTop ||\n                    // Numbers checked empirically\n                    (alpha >= 0 && alpha <= 180 || alpha < 360 && alpha > 357.5) ?\n                    chart.plotHeight - y : 10 + y);\n                if (isFront === 1) {\n                    zIndex += incrementZ * (z);\n                }\n                else if (!isFront) {\n                    zIndex += incrementZ * (1000 - z);\n                }\n                return {\n                    front: this.toLinePath(path1, true),\n                    top: this.toLinePath(path2, true),\n                    side: this.toLinePath(path3, true),\n                    zIndexes: {\n                        group: Math.round(zIndex)\n                    },\n                    forcedSides: forcedSides,\n                    // additional info about zIndexes\n                    isFront: isFront,\n                    isTop: isTop\n                }; // #4774\n            };\n            /** @private */\n            SVGRenderer3D.prototype.arc3d = function (attribs) {\n                var wrapper = this.g(), renderer = wrapper.renderer, customAttribs = ['x', 'y', 'r', 'innerR', 'start', 'end', 'depth'];\n                /**\n                 * Get custom attributes. Don't mutate the original object and return an\n                 * object with only custom attr.\n                 * @private\n                 */\n                function suckOutCustom(params) {\n                    var hasCA = false,\n                        ca = {},\n                        key;\n                    params = merge(params); // Don't mutate the original object\n                    for (key in params) {\n                        if (customAttribs.indexOf(key) !== -1) {\n                            ca[key] = params[key];\n                            delete params[key];\n                            hasCA = true;\n                        }\n                    }\n                    return hasCA ? [ca, params] : false;\n                }\n                attribs = merge(attribs);\n                attribs.alpha = (attribs.alpha || 0) * deg2rad;\n                attribs.beta = (attribs.beta || 0) * deg2rad;\n                // Create the different sub sections of the shape\n                wrapper.top = renderer.path();\n                wrapper.side1 = renderer.path();\n                wrapper.side2 = renderer.path();\n                wrapper.inn = renderer.path();\n                wrapper.out = renderer.path();\n                /* eslint-disable no-invalid-this */\n                // Add all faces\n                wrapper.onAdd = function () {\n                    var parent = wrapper.parentGroup,\n                        className = wrapper.attr('class');\n                    wrapper.top.add(wrapper);\n                    // These faces are added outside the wrapper group because the\n                    // z-index relates to neighbour elements as well\n                    ['out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                        wrapper[face]\n                            .attr({\n                            'class': className + ' highcharts-3d-side'\n                        })\n                            .add(parent);\n                    });\n                };\n                // Cascade to faces\n                ['addClass', 'removeClass'].forEach(function (fn) {\n                    wrapper[fn] = function () {\n                        var args = arguments;\n                        ['top', 'out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                            wrapper[face][fn].apply(wrapper[face], args);\n                        });\n                    };\n                });\n                /**\n                 * Compute the transformed paths and set them to the composite shapes\n                 * @private\n                 */\n                wrapper.setPaths = function (attribs) {\n                    var paths = wrapper.renderer.arc3dPath(attribs),\n                        zIndex = paths.zTop * 100;\n                    wrapper.attribs = attribs;\n                    wrapper.top.attr({ d: paths.top, zIndex: paths.zTop });\n                    wrapper.inn.attr({ d: paths.inn, zIndex: paths.zInn });\n                    wrapper.out.attr({ d: paths.out, zIndex: paths.zOut });\n                    wrapper.side1.attr({ d: paths.side1, zIndex: paths.zSide1 });\n                    wrapper.side2.attr({ d: paths.side2, zIndex: paths.zSide2 });\n                    // show all children\n                    wrapper.zIndex = zIndex;\n                    wrapper.attr({ zIndex: zIndex });\n                    // Set the radial gradient center the first time\n                    if (attribs.center) {\n                        wrapper.top.setRadialReference(attribs.center);\n                        delete attribs.center;\n                    }\n                };\n                wrapper.setPaths(attribs);\n                /**\n                 * Apply the fill to the top and a darker shade to the sides\n                 * @private\n                 */\n                wrapper.fillSetter = function (value) {\n                    var darker = color(value).brighten(-0.1).get();\n                    this.fill = value;\n                    this.side1.attr({ fill: darker });\n                    this.side2.attr({ fill: darker });\n                    this.inn.attr({ fill: darker });\n                    this.out.attr({ fill: darker });\n                    this.top.attr({ fill: value });\n                    return this;\n                };\n                // Apply the same value to all. These properties cascade down to the\n                // children when set to the composite arc3d.\n                ['opacity', 'translateX', 'translateY', 'visibility'].forEach(function (setter) {\n                    wrapper[setter + 'Setter'] = function (value, key) {\n                        wrapper[key] = value;\n                        ['out', 'inn', 'side1', 'side2', 'top'].forEach(function (el) {\n                            wrapper[el].attr(key, value);\n                        });\n                    };\n                });\n                // Override attr to remove shape attributes and use those to set child\n                // paths\n                wrapper.attr = function (params) {\n                    var ca,\n                        paramArr;\n                    if (typeof params === 'object') {\n                        paramArr = suckOutCustom(params);\n                        if (paramArr) {\n                            ca = paramArr[0];\n                            arguments[0] = paramArr[1];\n                            extend(wrapper.attribs, ca);\n                            wrapper.setPaths(wrapper.attribs);\n                        }\n                    }\n                    return SVGElement.prototype.attr.apply(wrapper, arguments);\n                };\n                // Override the animate function by sucking out custom parameters\n                // related to the shapes directly, and update the shapes from the\n                // animation step.\n                wrapper.animate = function (params, animation, complete) {\n                    var paramArr,\n                        from = this.attribs,\n                        to,\n                        anim,\n                        randomProp = ('data-' + Math.random().toString(26).substring(2, 9));\n                    // Attribute-line properties connected to 3D. These shouldn't have\n                    // been in the attribs collection in the first place.\n                    delete params.center;\n                    delete params.z;\n                    delete params.alpha;\n                    delete params.beta;\n                    anim = animObject(pick(animation, this.renderer.globalAnimation));\n                    if (anim.duration) {\n                        paramArr = suckOutCustom(params);\n                        // Params need to have a property in order for the step to run\n                        // (#5765, #7097, #7437)\n                        wrapper[randomProp] = 0;\n                        params[randomProp] = 1;\n                        wrapper[randomProp + 'Setter'] = H.noop;\n                        if (paramArr) {\n                            to = paramArr[0]; // custom attr\n                            anim.step = function (a, fx) {\n                                /**\n                                 * @private\n                                 */\n                                function interpolate(key) {\n                                    return from[key] + (pick(to[key], from[key]) -\n                                        from[key]) * fx.pos;\n                                }\n                                if (fx.prop === randomProp) {\n                                    fx.elem.setPaths(merge(from, {\n                                        x: interpolate('x'),\n                                        y: interpolate('y'),\n                                        r: interpolate('r'),\n                                        innerR: interpolate('innerR'),\n                                        start: interpolate('start'),\n                                        end: interpolate('end'),\n                                        depth: interpolate('depth')\n                                    }));\n                                }\n                            };\n                        }\n                        animation = anim; // Only when duration (#5572)\n                    }\n                    return SVGElement.prototype.animate.call(this, params, animation, complete);\n                };\n                // destroy all children\n                wrapper.destroy = function () {\n                    this.top.destroy();\n                    this.out.destroy();\n                    this.inn.destroy();\n                    this.side1.destroy();\n                    this.side2.destroy();\n                    return SVGElement.prototype.destroy.call(this);\n                };\n                // hide all children\n                wrapper.hide = function () {\n                    this.top.hide();\n                    this.out.hide();\n                    this.inn.hide();\n                    this.side1.hide();\n                    this.side2.hide();\n                };\n                wrapper.show = function (inherit) {\n                    this.top.show(inherit);\n                    this.out.show(inherit);\n                    this.inn.show(inherit);\n                    this.side1.show(inherit);\n                    this.side2.show(inherit);\n                };\n                /* eslint-enable no-invalid-this */\n                return wrapper;\n            };\n            /**\n             * Generate the paths required to draw a 3D arc.\n             * @private\n             */\n            SVGRenderer3D.prototype.arc3dPath = function (shapeArgs) {\n                var cx = shapeArgs.x || 0, // x coordinate of the center\n                    cy = shapeArgs.y || 0, // y coordinate of the center\n                    start = shapeArgs.start || 0, // start angle\n                    end = (shapeArgs.end || 0) - 0.00001, // end angle\n                    r = shapeArgs.r || 0, // radius\n                    ir = shapeArgs.innerR || 0, // inner radius\n                    d = shapeArgs.depth || 0, // depth\n                    alpha = shapeArgs.alpha || 0, // alpha rotation of the chart\n                    beta = shapeArgs.beta || 0; // beta rotation of the chart\n                    // Derived Variables\n                    var cs = Math.cos(start), // cosinus of the start angle\n                    ss = Math.sin(start), // sinus of the start angle\n                    ce = Math.cos(end), // cosinus of the end angle\n                    se = Math.sin(end), // sinus of the end angle\n                    rx = r * Math.cos(beta), // x-radius\n                    ry = r * Math.cos(alpha), // y-radius\n                    irx = ir * Math.cos(beta), // x-radius (inner)\n                    iry = ir * Math.cos(alpha), // y-radius (inner)\n                    dx = d * Math.sin(beta), // distance between top and bottom in x\n                    dy = d * Math.sin(alpha); // distance between top and bottom in y\n                    // TOP\n                    var top = [\n                        ['M',\n                    cx + (rx * cs),\n                    cy + (ry * ss)]\n                    ];\n                top = top.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, start, end, 0, 0));\n                top.push([\n                    'L', cx + (irx * ce), cy + (iry * se)\n                ]);\n                top = top.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, end, start, 0, 0));\n                top.push(['Z']);\n                // OUTSIDE\n                var b = (beta > 0 ? Math.PI / 2 : 0),\n                    a = (alpha > 0 ? 0 : Math.PI / 2);\n                var start2 = start > -b ? start : (end > -b ? -b : start),\n                    end2 = end < PI - a ? end : (start < PI - a ? PI - a : end),\n                    midEnd = 2 * PI - a;\n                // When slice goes over bottom middle, need to add both, left and right\n                // outer side. Additionally, when we cross right hand edge, create sharp\n                // edge. Outer shape/wall:\n                //\n                //            -------\n                //          /    ^    \\\n                //    4)   /   /   \\   \\  1)\n                //        /   /     \\   \\\n                //       /   /       \\   \\\n                // (c)=> ====         ==== <=(d)\n                //       \\   \\       /   /\n                //        \\   \\<=(a)/   /\n                //         \\   \\   /   / <=(b)\n                //    3)    \\    v    /  2)\n                //            -------\n                //\n                // (a) - inner side\n                // (b) - outer side\n                // (c) - left edge (sharp)\n                // (d) - right edge (sharp)\n                // 1..n - rendering order for startAngle = 0, when set to e.g 90, order\n                // changes clockwise (1->2, 2->3, n->1) and counterclockwise for\n                // negative startAngle\n                var out = [\n                        ['M',\n                    cx + (rx * cos(start2)),\n                    cy + (ry * sin(start2))]\n                    ];\n                out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, start2, end2, 0, 0));\n                // When shape is wide, it can cross both, (c) and (d) edges, when using\n                // startAngle\n                if (end > midEnd && start < midEnd) {\n                    // Go to outer side\n                    out.push([\n                        'L', cx + (rx * cos(end2)) + dx, cy + (ry * sin(end2)) + dy\n                    ]);\n                    // Curve to the right edge of the slice (d)\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, midEnd, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, midEnd, end, 0, 0));\n                    // Go to the outer side\n                    out.push([\n                        'L', cx + (rx * cos(end)) + dx, cy + (ry * sin(end)) + dy\n                    ]);\n                    // Go back to middle (d)\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end, midEnd, dx, dy));\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Go back to the left edge\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, midEnd, end2, 0, 0));\n                    // But shape can cross also only (c) edge:\n                }\n                else if (end > PI - a && start < PI - a) {\n                    // Go to outer side\n                    out.push([\n                        'L',\n                        cx + (rx * Math.cos(end2)) + dx,\n                        cy + (ry * Math.sin(end2)) + dy\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, end, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * Math.cos(end)), cy + (ry * Math.sin(end))\n                    ]);\n                    // Go back to the artifical end2\n                    out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end, end2, 0, 0));\n                }\n                out.push([\n                    'L',\n                    cx + (rx * Math.cos(end2)) + dx,\n                    cy + (ry * Math.sin(end2)) + dy\n                ]);\n                out = out.concat(SVGRenderer3D.curveTo(cx, cy, rx, ry, end2, start2, dx, dy));\n                out.push(['Z']);\n                // INSIDE\n                var inn = [\n                        ['M',\n                    cx + (irx * cs),\n                    cy + (iry * ss)]\n                    ];\n                inn = inn.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, start, end, 0, 0));\n                inn.push([\n                    'L',\n                    cx + (irx * Math.cos(end)) + dx,\n                    cy + (iry * Math.sin(end)) + dy\n                ]);\n                inn = inn.concat(SVGRenderer3D.curveTo(cx, cy, irx, iry, end, start, dx, dy));\n                inn.push(['Z']);\n                // SIDES\n                var side1 = [\n                        ['M',\n                    cx + (rx * cs),\n                    cy + (ry * ss)],\n                        ['L',\n                    cx + (rx * cs) + dx,\n                    cy + (ry * ss) + dy],\n                        ['L',\n                    cx + (irx * cs) + dx,\n                    cy + (iry * ss) + dy],\n                        ['L',\n                    cx + (irx * cs),\n                    cy + (iry * ss)],\n                        ['Z']\n                    ];\n                var side2 = [\n                        ['M',\n                    cx + (rx * ce),\n                    cy + (ry * se)],\n                        ['L',\n                    cx + (rx * ce) + dx,\n                    cy + (ry * se) + dy],\n                        ['L',\n                    cx + (irx * ce) + dx,\n                    cy + (iry * se) + dy],\n                        ['L',\n                    cx + (irx * ce),\n                    cy + (iry * se)],\n                        ['Z']\n                    ];\n                // correction for changed position of vanishing point caused by alpha\n                // and beta rotations\n                var angleCorr = Math.atan2(dy, -dx),\n                    angleEnd = Math.abs(end + angleCorr),\n                    angleStart = Math.abs(start + angleCorr),\n                    angleMid = Math.abs((start + end) / 2 + angleCorr);\n                /**\n                 * set to 0-PI range\n                 * @private\n                 */\n                function toZeroPIRange(angle) {\n                    angle = angle % (2 * Math.PI);\n                    if (angle > Math.PI) {\n                        angle = 2 * Math.PI - angle;\n                    }\n                    return angle;\n                }\n                angleEnd = toZeroPIRange(angleEnd);\n                angleStart = toZeroPIRange(angleStart);\n                angleMid = toZeroPIRange(angleMid);\n                // *1e5 is to compensate pInt in zIndexSetter\n                var incPrecision = 1e5,\n                    a1 = angleMid * incPrecision,\n                    a2 = angleStart * incPrecision,\n                    a3 = angleEnd * incPrecision;\n                return {\n                    top: top,\n                    // max angle is PI, so this is always higher\n                    zTop: Math.PI * incPrecision + 1,\n                    out: out,\n                    zOut: Math.max(a1, a2, a3),\n                    inn: inn,\n                    zInn: Math.max(a1, a2, a3),\n                    side1: side1,\n                    // to keep below zOut and zInn in case of same values\n                    zSide1: a3 * 0.99,\n                    side2: side2,\n                    zSide2: a2 * 0.99\n                };\n            };\n            return SVGRenderer3D;\n        }(SVGRenderer));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGRenderer3D;\n    });\n    _registerModule(_modules, 'Core/Chart/Chart3D.js', [_modules['Core/Color/Color.js'], _modules['Core/Defaults.js'], _modules['Core/Math3D.js'], _modules['Core/Utilities.js']], function (Color, D, Math3D, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extension for 3D charts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var genericDefaultOptions = D.defaultOptions;\n        var perspective = Math3D.perspective,\n            shapeArea3D = Math3D.shapeArea3D;\n        var addEvent = U.addEvent,\n            isArray = U.isArray,\n            merge = U.merge,\n            pick = U.pick,\n            wrap = U.wrap;\n        var Chart3D;\n        (function (Chart3D) {\n            /* *\n             *\n             *  Interfaces\n             *\n             * */\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            var Composition = /** @class */ (function () {\n                    /* *\n                     *\n                     *  Constructors\n                     *\n                     * */\n                    function Composition(chart) {\n                        this.frame3d = void 0;\n                    this.chart = chart;\n                }\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                Composition.prototype.get3dFrame = function () {\n                    var chart = this.chart,\n                        options3d = chart.options.chart.options3d,\n                        frameOptions = options3d.frame,\n                        xm = chart.plotLeft,\n                        xp = chart.plotLeft + chart.plotWidth,\n                        ym = chart.plotTop,\n                        yp = chart.plotTop + chart.plotHeight,\n                        zm = 0,\n                        zp = options3d.depth,\n                        faceOrientation = function (vertexes) {\n                            var area = shapeArea3D(vertexes,\n                        chart);\n                        // Give it 0.5 squared-pixel as a margin for rounding errors\n                        if (area > 0.5) {\n                            return 1;\n                        }\n                        if (area < -0.5) {\n                            return -1;\n                        }\n                        return 0;\n                    }, bottomOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xp, y: yp, z: zm },\n                        { x: xm, y: yp, z: zm }\n                    ]), topOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: ym, z: zp },\n                        { x: xm, y: ym, z: zp }\n                    ]), leftOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xm, y: ym, z: zp },\n                        { x: xm, y: yp, z: zp },\n                        { x: xm, y: yp, z: zm }\n                    ]), rightOrientation = faceOrientation([\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: yp, z: zp }\n                    ]), frontOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xm, y: ym, z: zm }\n                    ]), backOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zp },\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xm, y: yp, z: zp }\n                    ]), defaultShowFront = false, defaultShowBack = true;\n                    var defaultShowBottom = false,\n                        defaultShowTop = false,\n                        defaultShowLeft = false,\n                        defaultShowRight = false;\n                    // The 'default' criteria to visible faces of the frame is looking\n                    // up every axis to decide whenever the left/right//top/bottom sides\n                    // of the frame will be shown\n                    []\n                        .concat(chart.xAxis, chart.yAxis, chart.zAxis)\n                        .forEach(function (axis) {\n                        if (axis) {\n                            if (axis.horiz) {\n                                if (axis.opposite) {\n                                    defaultShowTop = true;\n                                }\n                                else {\n                                    defaultShowBottom = true;\n                                }\n                            }\n                            else {\n                                if (axis.opposite) {\n                                    defaultShowRight = true;\n                                }\n                                else {\n                                    defaultShowLeft = true;\n                                }\n                            }\n                        }\n                    });\n                    var getFaceOptions = function (sources, faceOrientation, defaultVisible) {\n                            var faceAttrs = ['size', 'color', 'visible'], options = {};\n                        for (var i = 0; i < faceAttrs.length; i++) {\n                            var attr = faceAttrs[i];\n                            for (var j = 0; j < sources.length; j++) {\n                                if (typeof sources[j] === 'object') {\n                                    var val = sources[j][attr];\n                                    if (typeof val !== 'undefined' && val !== null) {\n                                        options[attr] = val;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        var isVisible = defaultVisible;\n                        if (options.visible === true || options.visible === false) {\n                            isVisible = options.visible;\n                        }\n                        else if (options.visible === 'auto') {\n                            isVisible = faceOrientation > 0;\n                        }\n                        return {\n                            size: pick(options.size, 1),\n                            color: pick(options.color, 'none'),\n                            frontFacing: faceOrientation > 0,\n                            visible: isVisible\n                        };\n                    };\n                    // docs @TODO: Add all frame options (left, right, top, bottom,\n                    // front, back) to apioptions JSDoc once the new system is up.\n                    var ret = {\n                            axes: {},\n                            // FIXME: Previously, left/right, top/bottom and front/back\n                            // pairs shared size and color.\n                            // For compatibility and consistency sake, when one face have\n                            // size/color/visibility set, the opposite face will default to\n                            // the same values. Also, left/right used to be called 'side',\n                            // so that's also added as a fallback.\n                            bottom: getFaceOptions([frameOptions.bottom,\n                        frameOptions.top,\n                        frameOptions],\n                        bottomOrientation,\n                        defaultShowBottom),\n                            top: getFaceOptions([frameOptions.top,\n                        frameOptions.bottom,\n                        frameOptions],\n                        topOrientation,\n                        defaultShowTop),\n                            left: getFaceOptions([\n                                frameOptions.left,\n                                frameOptions.right,\n                                frameOptions.side,\n                                frameOptions\n                            ],\n                        leftOrientation,\n                        defaultShowLeft),\n                            right: getFaceOptions([\n                                frameOptions.right,\n                                frameOptions.left,\n                                frameOptions.side,\n                                frameOptions\n                            ],\n                        rightOrientation,\n                        defaultShowRight),\n                            back: getFaceOptions([frameOptions.back,\n                        frameOptions.front,\n                        frameOptions],\n                        backOrientation,\n                        defaultShowBack),\n                            front: getFaceOptions([frameOptions.front,\n                        frameOptions.back,\n                        frameOptions],\n                        frontOrientation,\n                        defaultShowFront)\n                        };\n                    // Decide the bast place to put axis title/labels based on the\n                    // visible faces. Ideally, The labels can only be on the edge\n                    // between a visible face and an invisble one. Also, the Y label\n                    // should be one the left-most edge (right-most if opposite).\n                    if (options3d.axisLabelPosition === 'auto') {\n                        var isValidEdge = function (face1,\n                            face2) {\n                                return ((face1.visible !== face2.visible) ||\n                                    (face1.visible &&\n                                        face2.visible &&\n                                        (face1.frontFacing !== face2.frontFacing)));\n                        };\n                        var yEdges = [];\n                        if (isValidEdge(ret.left, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.left, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zp,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zm,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var xBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.front)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.back)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var xTopEdges = [];\n                        if (isValidEdge(ret.top, ret.front)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.back)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        var zBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.left)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.right)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        var zTopEdges = [];\n                        if (isValidEdge(ret.top, ret.left)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.right)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        var pickEdge = function (edges,\n                            axis,\n                            mult) {\n                                if (edges.length === 0) {\n                                    return null;\n                            }\n                            if (edges.length === 1) {\n                                return edges[0];\n                            }\n                            var projections = perspective(edges,\n                                chart,\n                                false);\n                            var best = 0;\n                            for (var i = 1; i < projections.length; i++) {\n                                if (mult * projections[i][axis] >\n                                    mult * projections[best][axis]) {\n                                    best = i;\n                                }\n                                else if ((mult * projections[i][axis] ===\n                                    mult * projections[best][axis]) &&\n                                    (projections[i].z < projections[best].z)) {\n                                    best = i;\n                                }\n                            }\n                            return edges[best];\n                        };\n                        ret.axes = {\n                            y: {\n                                'left': pickEdge(yEdges, 'x', -1),\n                                'right': pickEdge(yEdges, 'x', +1)\n                            },\n                            x: {\n                                'top': pickEdge(xTopEdges, 'y', -1),\n                                'bottom': pickEdge(xBottomEdges, 'y', +1)\n                            },\n                            z: {\n                                'top': pickEdge(zTopEdges, 'y', -1),\n                                'bottom': pickEdge(zBottomEdges, 'y', +1)\n                            }\n                        };\n                    }\n                    else {\n                        ret.axes = {\n                            y: {\n                                'left': {\n                                    x: xm, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'right': {\n                                    x: xp, z: zm, xDir: { x: 0, y: 0, z: 1 }\n                                }\n                            },\n                            x: {\n                                'top': {\n                                    y: ym, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'bottom': {\n                                    y: yp,\n                                    z: zm,\n                                    xDir: { x: 1, y: 0, z: 0 }\n                                }\n                            },\n                            z: {\n                                'top': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: ym,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                },\n                                'bottom': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: yp,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                }\n                            }\n                        };\n                    }\n                    return ret;\n                };\n                /**\n                 * Calculate scale of the 3D view. That is required to fit chart's 3D\n                 * projection into the actual plotting area. Reported as #4933.\n                 *\n                 * **Note:**\n                 * This function should ideally take the plot values instead of a chart\n                 * object, but since the chart object is needed for perspective it is\n                 * not practical. Possible to make both getScale and perspective more\n                 * logical and also immutable.\n                 *\n                 * @private\n                 * @function getScale\n                 *\n                 * @param {number} depth\n                 * The depth of the chart\n                 *\n                 * @return {number}\n                 * The scale to fit the 3D chart into the plotting area.\n                 *\n                 * @requires highcharts-3d\n                 */\n                Composition.prototype.getScale = function (depth) {\n                    var chart = this.chart,\n                        plotLeft = chart.plotLeft,\n                        plotRight = chart.plotWidth + plotLeft,\n                        plotTop = chart.plotTop,\n                        plotBottom = chart.plotHeight + plotTop,\n                        originX = plotLeft + chart.plotWidth / 2,\n                        originY = plotTop + chart.plotHeight / 2,\n                        bbox3d = {\n                            minX: Number.MAX_VALUE,\n                            maxX: -Number.MAX_VALUE,\n                            minY: Number.MAX_VALUE,\n                            maxY: -Number.MAX_VALUE\n                        };\n                    var corners,\n                        scale = 1;\n                    // Top left corners:\n                    corners = [{\n                            x: plotLeft,\n                            y: plotTop,\n                            z: 0\n                        }, {\n                            x: plotLeft,\n                            y: plotTop,\n                            z: depth\n                        }];\n                    // Top right corners:\n                    [0, 1].forEach(function (i) {\n                        corners.push({\n                            x: plotRight,\n                            y: corners[i].y,\n                            z: corners[i].z\n                        });\n                    });\n                    // All bottom corners:\n                    [0, 1, 2, 3].forEach(function (i) {\n                        corners.push({\n                            x: corners[i].x,\n                            y: plotBottom,\n                            z: corners[i].z\n                        });\n                    });\n                    // Calculate 3D corners:\n                    corners = perspective(corners, chart, false);\n                    // Get bounding box of 3D element:\n                    corners.forEach(function (corner) {\n                        bbox3d.minX = Math.min(bbox3d.minX, corner.x);\n                        bbox3d.maxX = Math.max(bbox3d.maxX, corner.x);\n                        bbox3d.minY = Math.min(bbox3d.minY, corner.y);\n                        bbox3d.maxY = Math.max(bbox3d.maxY, corner.y);\n                    });\n                    // Left edge:\n                    if (plotLeft > bbox3d.minX) {\n                        scale = Math.min(scale, 1 - Math.abs((plotLeft + originX) / (bbox3d.minX + originX)) % 1);\n                    }\n                    // Right edge:\n                    if (plotRight < bbox3d.maxX) {\n                        scale = Math.min(scale, (plotRight - originX) / (bbox3d.maxX - originX));\n                    }\n                    // Top edge:\n                    if (plotTop > bbox3d.minY) {\n                        if (bbox3d.minY < 0) {\n                            scale = Math.min(scale, (plotTop + originY) / (-bbox3d.minY + plotTop + originY));\n                        }\n                        else {\n                            scale = Math.min(scale, 1 - (plotTop + originY) / (bbox3d.minY + originY) % 1);\n                        }\n                    }\n                    // Bottom edge:\n                    if (plotBottom < bbox3d.maxY) {\n                        scale = Math.min(scale, Math.abs((plotBottom - originY) / (bbox3d.maxY - originY)));\n                    }\n                    return scale;\n                };\n                return Composition;\n            }());\n            Chart3D.Composition = Composition;\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            /**\n             * @optionparent\n             * @private\n             */\n            Chart3D.defaultOptions = {\n                chart: {\n                    /**\n                     * Options to render charts in 3 dimensions. This feature requires\n                     * `highcharts-3d.js`, found in the download package or online at\n                     * [code.highcharts.com/highcharts-3d.js](https://code.highcharts.com/highcharts-3d.js).\n                     *\n                     * @since    4.0\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    options3d: {\n                        /**\n                         * Whether to render the chart using the 3D functionality.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        enabled: false,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        alpha: 0,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        beta: 0,\n                        /**\n                         * The total depth of the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        depth: 100,\n                        /**\n                         * Whether the 3d box should automatically adjust to the chart\n                         * plot area.\n                         *\n                         * @since   4.2.4\n                         * @product highcharts\n                         */\n                        fitToPlot: true,\n                        /**\n                         * Defines the distance the viewer is standing in front of the\n                         * chart, this setting is important to calculate the perspective\n                         * effect in column and scatter charts. It is not used for 3D\n                         * pie charts.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        viewDistance: 25,\n                        /**\n                         * Set it to `\"auto\"` to automatically move the labels to the\n                         * best edge.\n                         *\n                         * @type    {\"auto\"|null}\n                         * @since   5.0.12\n                         * @product highcharts\n                         */\n                        axisLabelPosition: null,\n                        /**\n                         * Provides the option to draw a frame around the charts by\n                         * defining a bottom, front and back panel.\n                         *\n                         * @since    4.0\n                         * @product  highcharts\n                         * @requires highcharts-3d\n                         */\n                        frame: {\n                            /**\n                             * Whether the frames are visible.\n                             */\n                            visible: 'default',\n                            /**\n                             * General pixel thickness for the frame faces.\n                             */\n                            size: 1,\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             *\n                             * @since    4.0\n                             * @product  highcharts\n                             * @requires highcharts-3d\n                             */\n                            /**\n                             * The color of the panel.\n                             *\n                             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                             * @default   transparent\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.color\n                             */\n                            /**\n                             * The thickness of the panel.\n                             *\n                             * @type      {number}\n                             * @default   1\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.size\n                             */\n                            /**\n                             * Whether to display the frame. Possible values are `true`,\n                             * `false`, `\"auto\"` to display only the frames behind the\n                             * data, and `\"default\"` to display faces behind the data\n                             * based on the axis layout, ignoring the point of view.\n                             *\n                             * @sample {highcharts} highcharts/3d/scatter-frame/\n                             *         Auto frames\n                             *\n                             * @type      {boolean|\"default\"|\"auto\"}\n                             * @default   default\n                             * @since     5.0.12\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.visible\n                             */\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             */\n                            bottom: {},\n                            /**\n                             * The top of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            top: {},\n                            /**\n                             * The left side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            left: {},\n                            /**\n                             * The right of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            right: {},\n                            /**\n                             * The back side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            back: {},\n                            /**\n                             * The front of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            front: {}\n                        }\n                    }\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable no-invalid-this, valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(ChartClass, FxClass) {\n                var chartProto = ChartClass.prototype;\n                var fxProto = FxClass.prototype;\n                /**\n                 * Shorthand to check the is3d flag.\n                 * @private\n                 * @return {boolean}\n                 * Whether it is a 3D chart.\n                 */\n                chartProto.is3d = function () {\n                    return Boolean(this.options.chart.options3d &&\n                        this.options.chart.options3d.enabled); // #4280\n                };\n                chartProto.propsRequireDirtyBox.push('chart.options3d');\n                chartProto.propsRequireUpdateSeries.push('chart.options3d');\n                /**\n                 * Animation setter for matrix property.\n                 * @private\n                 */\n                fxProto.matrixSetter = function () {\n                    var interpolated;\n                    if (this.pos < 1 &&\n                        (isArray(this.start) || isArray(this.end))) {\n                        var start = (this.start ||\n                                [1, 0, 0, 1, 0, 0]),\n                            end = this.end || [1, 0, 0, 1, 0, 0];\n                        interpolated = [];\n                        for (var i = 0; i < 6; i++) {\n                            interpolated.push(this.pos * end[i] + (1 - this.pos) * start[i]);\n                        }\n                    }\n                    else {\n                        interpolated = this.end;\n                    }\n                    this.elem.attr(this.prop, interpolated, null, true);\n                };\n                merge(true, genericDefaultOptions, Chart3D.defaultOptions);\n                addEvent(ChartClass, 'init', onInit);\n                addEvent(ChartClass, 'addSeries', onAddSeries);\n                addEvent(ChartClass, 'afterDrawChartBox', onAfterDrawChartBox);\n                addEvent(ChartClass, 'afterGetContainer', onAfterGetContainer);\n                addEvent(ChartClass, 'afterInit', onAfterInit);\n                addEvent(ChartClass, 'afterSetChartSize', onAfterSetChartSize);\n                addEvent(ChartClass, 'beforeRedraw', onBeforeRedraw);\n                addEvent(ChartClass, 'beforeRender', onBeforeRender);\n                wrap(chartProto, 'isInsidePlot', wrapIsInsidePlot);\n                wrap(chartProto, 'renderSeries', wrapRenderSeries);\n                wrap(chartProto, 'setClassName', wrapSetClassName);\n            }\n            Chart3D.compose = compose;\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAddSeries(e) {\n                if (this.is3d()) {\n                    if (e.options.type === 'scatter') {\n                        e.options.type = 'scatter3d';\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterDrawChartBox() {\n                if (this.chart3d &&\n                    this.is3d()) {\n                    var chart = this,\n                        renderer = chart.renderer,\n                        options3d = chart.options.chart.options3d,\n                        frame = chart.chart3d.get3dFrame(),\n                        xm = chart.plotLeft,\n                        xp = chart.plotLeft + chart.plotWidth,\n                        ym = chart.plotTop,\n                        yp = chart.plotTop + chart.plotHeight,\n                        zm = 0,\n                        zp = options3d.depth,\n                        xmm = xm - (frame.left.visible ? frame.left.size : 0),\n                        xpp = xp + (frame.right.visible ? frame.right.size : 0),\n                        ymm = ym - (frame.top.visible ? frame.top.size : 0),\n                        ypp = yp + (frame.bottom.visible ? frame.bottom.size : 0),\n                        zmm = zm - (frame.front.visible ? frame.front.size : 0),\n                        zpp = zp + (frame.back.visible ? frame.back.size : 0),\n                        verb = chart.hasRendered ? 'animate' : 'attr';\n                    chart.chart3d.frame3d = frame;\n                    if (!chart.frameShapes) {\n                        chart.frameShapes = {\n                            bottom: renderer.polyhedron().add(),\n                            top: renderer.polyhedron().add(),\n                            left: renderer.polyhedron().add(),\n                            right: renderer.polyhedron().add(),\n                            back: renderer.polyhedron().add(),\n                            front: renderer.polyhedron().add()\n                        };\n                    }\n                    chart.frameShapes.bottom[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-bottom',\n                        zIndex: frame.bottom.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.top[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-top',\n                        zIndex: frame.top.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.left[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-left',\n                        zIndex: frame.left.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.left.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.left.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.right[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-right',\n                        zIndex: frame.right.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.right.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.right.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.back[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-back',\n                        zIndex: frame.back.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.front[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-front',\n                        zIndex: frame.front.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.front.visible\n                            }]\n                    });\n                }\n            }\n            /**\n             * Add the required CSS classes for column sides (#6018)\n             * @private\n             */\n            function onAfterGetContainer() {\n                if (this.styledMode) {\n                    // Add definitions used by brighter and darker faces of the cuboids.\n                    [{\n                            name: 'darker',\n                            slope: 0.6\n                        }, {\n                            name: 'brighter',\n                            slope: 1.4\n                        }].forEach(function (cfg) {\n                        this.renderer.definition({\n                            tagName: 'filter',\n                            attributes: {\n                                id: 'highcharts-' + cfg.name\n                            },\n                            children: [{\n                                    tagName: 'feComponentTransfer',\n                                    children: [{\n                                            tagName: 'feFuncR',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncG',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncB',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }]\n                                }]\n                        });\n                    }, this);\n                }\n            }\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAfterInit() {\n                var options = this.options;\n                if (this.is3d()) {\n                    (options.series || []).forEach(function (s) {\n                        var type = (s.type ||\n                                options.chart.type ||\n                                options.chart.defaultSeriesType);\n                        if (type === 'scatter') {\n                            s.type = 'scatter3d';\n                        }\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterSetChartSize() {\n                var chart = this,\n                    options3d = chart.options.chart.options3d;\n                if (chart.chart3d &&\n                    chart.is3d()) {\n                    // Add a 0-360 normalisation for alfa and beta angles in 3d graph\n                    if (options3d) {\n                        options3d.alpha = options3d.alpha % 360 +\n                            (options3d.alpha >= 0 ? 0 : 360);\n                        options3d.beta = options3d.beta % 360 +\n                            (options3d.beta >= 0 ? 0 : 360);\n                    }\n                    var inverted = chart.inverted, clipBox = chart.clipBox, margin = chart.margin, x = inverted ? 'y' : 'x', y = inverted ? 'x' : 'y', w = inverted ? 'height' : 'width', h = inverted ? 'width' : 'height';\n                    clipBox[x] = -(margin[3] || 0);\n                    clipBox[y] = -(margin[0] || 0);\n                    clipBox[w] = (chart.chartWidth + (margin[3] || 0) + (margin[1] || 0));\n                    clipBox[h] = (chart.chartHeight + (margin[0] || 0) + (margin[2] || 0));\n                    // Set scale, used later in perspective method():\n                    // getScale uses perspective, so scale3d has to be reset.\n                    chart.scale3d = 1;\n                    if (options3d.fitToPlot === true) {\n                        chart.scale3d = chart.chart3d.getScale(options3d.depth);\n                    }\n                    // Recalculate the 3d frame with every call of setChartSize,\n                    // instead of doing it after every redraw(). It avoids ticks\n                    // and axis title outside of chart.\n                    chart.chart3d.frame3d = chart.chart3d.get3dFrame(); // #7942\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRedraw() {\n                if (this.is3d()) {\n                    // Set to force a redraw of all elements\n                    this.isDirtyBox = true;\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRender() {\n                if (this.chart3d && this.is3d()) {\n                    this.chart3d.frame3d = this.chart3d.get3dFrame();\n                }\n            }\n            /**\n             * @private\n             */\n            function onInit() {\n                if (!this.chart3d) {\n                    this.chart3d = new Composition(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapIsInsidePlot(proceed) {\n                return this.is3d() || proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            /**\n             * Draw the series in the reverse order (#3803, #3917)\n             * @private\n             */\n            function wrapRenderSeries(proceed) {\n                var series,\n                    i = this.series.length;\n                if (this.is3d()) {\n                    while (i--) {\n                        series = this.series[i];\n                        series.translate();\n                        series.render();\n                    }\n                }\n                else {\n                    proceed.call(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapSetClassName(proceed) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n                if (this.is3d()) {\n                    this.container.className += ' highcharts-3d-chart';\n                }\n            }\n        })(Chart3D || (Chart3D = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Note: As of v5.0.12, `frame.left` or `frame.right` should be used instead.\n         *\n         * The side for the frame around a 3D chart.\n         *\n         * @deprecated\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption chart.options3d.frame.side\n         */\n        /**\n         * The color of the panel.\n         *\n         * @deprecated\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   transparent\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.color\n         */\n        /**\n         * The thickness of the panel.\n         *\n         * @deprecated\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.size\n         */\n        ''; // keeps doclets above in JS file\n\n        return Chart3D;\n    });\n    _registerModule(_modules, 'Core/Axis/ZAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Utilities.js']], function (Axis, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var addEvent = U.addEvent,\n            merge = U.merge,\n            pick = U.pick,\n            splat = U.splat;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function chartAddZAxis(options) {\n            return new ZAxis(this, options);\n        }\n        /**\n         * Get the Z axis in addition to the default X and Y.\n         * @private\n         */\n        function onChartAfterGetAxes() {\n            var _this = this;\n            var zAxisOptions = this.options.zAxis = splat(this.options.zAxis || {});\n            if (!this.is3d()) {\n                return;\n            }\n            this.zAxis = [];\n            zAxisOptions.forEach(function (axisOptions, i) {\n                axisOptions.index = i;\n                // Z-Axis is shown horizontally, so it's kind of a X-Axis\n                axisOptions.isX = true;\n                _this.addZAxis(axisOptions).setScale();\n            });\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * 3D axis for z coordinates.\n         */\n        var ZAxis = /** @class */ (function (_super) {\n                __extends(ZAxis, _super);\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function ZAxis(chart, userOptions) {\n                var _this = _super.call(this,\n                    chart,\n                    userOptions) || this;\n                _this.isZAxis = true;\n                return _this;\n            }\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            ZAxis.compose = function (ChartClass) {\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    addEvent(ChartClass, 'afterGetAxes', onChartAfterGetAxes);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.addZAxis = chartAddZAxis;\n                    chartProto.collectionsWithInit.zAxis = [chartProto.addZAxis];\n                    chartProto.collectionsWithUpdate.push('zAxis');\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            ZAxis.prototype.getSeriesExtremes = function () {\n                var _this = this;\n                var chart = this.chart;\n                this.hasVisibleSeries = false;\n                // Reset properties in case we're redrawing (#3353)\n                this.dataMin = this.dataMax = this.ignoreMinPadding = (this.ignoreMaxPadding = void 0);\n                if (this.stacking) {\n                    this.stacking.buildStacks();\n                }\n                // loop through this axis' series\n                this.series.forEach(function (series) {\n                    if (series.visible ||\n                        !chart.options.chart.ignoreHiddenSeries) {\n                        var threshold = series.options.threshold;\n                        _this.hasVisibleSeries = true;\n                        // Validate threshold in logarithmic axes\n                        if (_this.positiveValuesOnly && threshold <= 0) {\n                            threshold = void 0;\n                        }\n                        var zData = series.zData;\n                        if (zData.length) {\n                            _this.dataMin = Math.min(pick(_this.dataMin, zData[0]), Math.min.apply(null, zData));\n                            _this.dataMax = Math.max(pick(_this.dataMax, zData[0]), Math.max.apply(null, zData));\n                        }\n                    }\n                });\n            };\n            /**\n             * @private\n             */\n            ZAxis.prototype.setAxisSize = function () {\n                var chart = this.chart;\n                _super.prototype.setAxisSize.call(this);\n                this.width = this.len = (chart.options.chart.options3d &&\n                    chart.options.chart.options3d.depth) || 0;\n                this.right = chart.chartWidth - this.width - this.left;\n            };\n            /**\n             * @private\n             */\n            ZAxis.prototype.setOptions = function (userOptions) {\n                userOptions = merge({\n                    offset: 0,\n                    lineWidth: 0\n                }, userOptions);\n                // #14793, this used to be set on the prototype\n                this.isZAxis = true;\n                _super.prototype.setOptions.call(this, userOptions);\n                this.coll = 'zAxis';\n            };\n            return ZAxis;\n        }(Axis));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ZAxis;\n    });\n    _registerModule(_modules, 'Core/Axis/Axis3DDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @optionparent xAxis\n         */\n        var Axis3DDefaults = {\n                labels: {\n                    /**\n                     * Defines how the labels are be repositioned according to the 3D\n                     * chart orientation.\n                     *\n                     * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                     *   the tick marks, despite the chart orientation. This is the\n                     *   backwards compatible behavior, and causes skewing of X and Z\n                     *   axes.\n                     *\n                     * - `'chart'`: Preserve 3D position relative to the chart. This\n                     *   looks nice, but hard to read if the text isn't forward-facing.\n                     *\n                     * - `'flap'`: Rotated text along the axis to compensate for the\n                     *   chart orientation. This tries to maintain text as legible as\n                     *   possible on all orientations.\n                     *\n                     * - `'ortho'`: Rotated text along the axis direction so that the\n                     *   labels are orthogonal to the axis. This is very similar to\n                     *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                     *   still present).\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @since      5.0.15\n                     * @validvalue ['offset', 'chart', 'flap', 'ortho']\n                     * @product    highcharts\n                     * @requires   highcharts-3d\n                     */\n                    position3d: 'offset',\n                    /**\n                     * If enabled, the axis labels will skewed to follow the\n                     * perspective.\n                     *\n                     * This will fix overlapping labels and titles, but texts become\n                     * less legible due to the distortion.\n                     *\n                     * The final appearance depends heavily on `labels.position3d`.\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    skew3d: false\n                },\n                title: {\n                    /**\n                     * Defines how the title is repositioned according to the 3D chart\n                     * orientation.\n                     *\n                     * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                     *   the tick marks, despite the chart orientation. This is the\n                     *   backwards compatible behavior, and causes skewing of X and Z\n                     *   axes.\n                     *\n                     * - `'chart'`: Preserve 3D position relative to the chart. This\n                     *   looks nice, but hard to read if the text isn't forward-facing.\n                     *\n                     * - `'flap'`: Rotated text along the axis to compensate for the\n                     *   chart orientation. This tries to maintain text as legible as\n                     *   possible on all orientations.\n                     *\n                     * - `'ortho'`: Rotated text along the axis direction so that the\n                     *   labels are orthogonal to the axis. This is very similar to\n                     *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                     *   still present).\n                     *\n                     * - `undefined`: Will use the config from `labels.position3d`\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @type     {\"offset\"|\"chart\"|\"flap\"|\"ortho\"|null}\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    position3d: null,\n                    /**\n                     * If enabled, the axis title will skewed to follow the perspective.\n                     *\n                     * This will fix overlapping labels and titles, but texts become\n                     * less legible due to the distortion.\n                     *\n                     * The final appearance depends heavily on `title.position3d`.\n                     *\n                     * A `null` value will use the config from `labels.skew3d`.\n                     *\n                     * @sample highcharts/3d/skewed-labels/\n                     *         Skewed labels\n                     *\n                     * @type     {boolean|null}\n                     * @since    5.0.15\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    skew3d: null\n                }\n            };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Axis3DDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/Tick3DComposition.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(TickClass) {\n            if (composedClasses.indexOf(TickClass) === -1) {\n                composedClasses.push(TickClass);\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                wrap(TickClass.prototype, 'getMarkPath', wrapTickGetMarkPath);\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            var axis3D = this.axis.axis3D;\n            if (axis3D) {\n                extend(e.pos, axis3D.fix3dPosition(e.pos));\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapTickGetMarkPath(proceed) {\n            var axis3D = this.axis.axis3D,\n                path = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            if (axis3D) {\n                var start = path[0];\n                var end = path[1];\n                if (start[0] === 'M' && end[0] === 'L') {\n                    var pArr = [\n                            axis3D.fix3dPosition({ x: start[1],\n                        y: start[2],\n                        z: 0 }),\n                            axis3D.fix3dPosition({ x: end[1],\n                        y: end[2],\n                        z: 0 })\n                        ];\n                    return this.axis.chart.renderer.toLineSegments(pArr);\n                }\n            }\n            return path;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Tick3DAdditions = {\n                compose: compose\n            };\n\n        return Tick3DAdditions;\n    });\n    _registerModule(_modules, 'Core/Axis/Axis3DComposition.js', [_modules['Core/Axis/Axis3DDefaults.js'], _modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Axis/Tick3DComposition.js'], _modules['Core/Utilities.js']], function (Axis3DDefaults, H, Math3D, Tick3D, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extenstion for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var deg2rad = H.deg2rad;\n        var perspective = Math3D.perspective,\n            perspective3D = Math3D.perspective3D,\n            shapeArea = Math3D.shapeArea;\n        var addEvent = U.addEvent,\n            merge = U.merge,\n            pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisAfterSetOptions() {\n            var axis = this,\n                chart = axis.chart,\n                options = axis.options;\n            if (chart.is3d && chart.is3d() && axis.coll !== 'colorAxis') {\n                options.tickWidth = pick(options.tickWidth, 0);\n                options.gridLineWidth = pick(options.gridLineWidth, 1);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisDrawCrosshair(e) {\n            var axis = this;\n            if (axis.chart.is3d() &&\n                axis.coll !== 'colorAxis') {\n                if (e.point) {\n                    e.point.crosshairPos = axis.isXAxis ?\n                        e.point.axisXpos :\n                        axis.len - e.point.axisYpos;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.axis3D) {\n                axis.axis3D = new Axis3DAdditions(axis);\n            }\n        }\n        /**\n         * Do not draw axislines in 3D.\n         * @private\n         */\n        function wrapAxisGetLinePath(proceed) {\n            var axis = this;\n            // Do not do this if the chart is not 3D\n            if (!axis.chart.is3d() || axis.coll === 'colorAxis') {\n                return proceed.apply(axis, [].slice.call(arguments, 1));\n            }\n            return [];\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetPlotBandPath(proceed) {\n            // Do not do this if the chart is not 3D\n            if (!this.chart.is3d() || this.coll === 'colorAxis') {\n                return proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            var args = arguments,\n                from = args[1],\n                to = args[2],\n                path = [],\n                fromPath = this.getPlotLinePath({ value: from }),\n                toPath = this.getPlotLinePath({ value: to });\n            if (fromPath && toPath) {\n                for (var i = 0; i < fromPath.length; i += 2) {\n                    var fromStartSeg = fromPath[i],\n                        fromEndSeg = fromPath[i + 1],\n                        toStartSeg = toPath[i],\n                        toEndSeg = toPath[i + 1];\n                    if (fromStartSeg[0] === 'M' &&\n                        fromEndSeg[0] === 'L' &&\n                        toStartSeg[0] === 'M' &&\n                        toEndSeg[0] === 'L') {\n                        path.push(fromStartSeg, fromEndSeg, toEndSeg, \n                        // lineTo instead of moveTo\n                        ['L', toStartSeg[1], toStartSeg[2]], ['Z']);\n                    }\n                }\n            }\n            return path;\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetPlotLinePath(proceed) {\n            var axis = this,\n                axis3D = axis.axis3D,\n                chart = axis.chart,\n                path = proceed.apply(axis,\n                [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (axis.coll === 'colorAxis' ||\n                !chart.chart3d ||\n                !chart.is3d()) {\n                return path;\n            }\n            if (path === null) {\n                return path;\n            }\n            var options3d = chart.options.chart.options3d,\n                d = axis.isZAxis ? chart.plotWidth : options3d.depth,\n                frame = chart.chart3d.frame3d,\n                startSegment = path[0],\n                endSegment = path[1];\n            var pArr,\n                pathSegments = [];\n            if (startSegment[0] === 'M' && endSegment[0] === 'L') {\n                pArr = [\n                    axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: 0 }),\n                    axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: d }),\n                    axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: 0 }),\n                    axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: d })\n                ];\n                if (!this.horiz) { // Y-Axis\n                    if (frame.front.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.back.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.left.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.right.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                else if (this.isZAxis) { // Z-Axis\n                    if (frame.left.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.right.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.top.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.bottom.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                else { // X-Axis\n                    if (frame.front.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.back.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.top.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.bottom.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                pathSegments = perspective(pathSegments, this.chart, false);\n            }\n            return chart.renderer.toLineSegments(pathSegments);\n        }\n        /**\n         * Wrap getSlotWidth function to calculate individual width value for each\n         * slot (#8042).\n         * @private\n         */\n        function wrapAxisGetSlotWidth(proceed, tick) {\n            var axis = this,\n                chart = axis.chart,\n                ticks = axis.ticks,\n                gridGroup = axis.gridGroup;\n            if (axis.categories &&\n                chart.frameShapes &&\n                chart.is3d() &&\n                gridGroup &&\n                tick &&\n                tick.label) {\n                var firstGridLine = (gridGroup.element.childNodes[0].getBBox()),\n                    frame3DLeft = chart.frameShapes.left.getBBox(),\n                    options3d = chart.options.chart.options3d,\n                    origin_1 = {\n                        x: chart.plotWidth / 2,\n                        y: chart.plotHeight / 2,\n                        z: options3d.depth / 2,\n                        vd: (pick(options3d.depth, 1) *\n                            pick(options3d.viewDistance, 0))\n                    },\n                    tickId = tick.pos,\n                    prevTick = ticks[tickId - 1],\n                    nextTick = ticks[tickId + 1];\n                var labelPos = void 0,\n                    prevLabelPos = void 0,\n                    nextLabelPos = void 0;\n                // Check whether the tick is not the first one and previous tick\n                // exists, then calculate position of previous label.\n                if (tickId !== 0 &&\n                    prevTick &&\n                    prevTick.label &&\n                    prevTick.label.xy) {\n                    prevLabelPos = perspective3D({\n                        x: prevTick.label.xy.x,\n                        y: prevTick.label.xy.y,\n                        z: null\n                    }, origin_1, origin_1.vd);\n                }\n                // If next label position is defined, then recalculate its position\n                // basing on the perspective.\n                if (nextTick && nextTick.label && nextTick.label.xy) {\n                    nextLabelPos = perspective3D({\n                        x: nextTick.label.xy.x,\n                        y: nextTick.label.xy.y,\n                        z: null\n                    }, origin_1, origin_1.vd);\n                }\n                labelPos = {\n                    x: tick.label.xy.x,\n                    y: tick.label.xy.y,\n                    z: null\n                };\n                labelPos = perspective3D(labelPos, origin_1, origin_1.vd);\n                // If tick is first one, check whether next label position is\n                // already calculated, then return difference between the first and\n                // the second label. If there is no next label position calculated,\n                // return the difference between the first grid line and left 3d\n                // frame.\n                return Math.abs(prevLabelPos ?\n                    labelPos.x - prevLabelPos.x : nextLabelPos ?\n                    nextLabelPos.x - labelPos.x :\n                    firstGridLine.x - frame3DLeft.x);\n            }\n            return proceed.apply(axis, [].slice.call(arguments, 1));\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetTitlePosition(proceed) {\n            var pos = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            return this.axis3D ?\n                this.axis3D.fix3dPosition(pos, true) :\n                pos;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Adds 3D support to axes.\n         * @private\n         * @class\n         */\n        var Axis3DAdditions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Axis3DAdditions(axis) {\n                    this.axis = axis;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends axis class with 3D support.\n             * @private\n             */\n            Axis3DAdditions.compose = function (AxisClass, TickClass) {\n                Tick3D.compose(TickClass);\n                if (composedClasses.indexOf(AxisClass) === -1) {\n                    composedClasses.push(AxisClass);\n                    merge(true, AxisClass.defaultOptions, Axis3DDefaults);\n                    AxisClass.keepProps.push('axis3D');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    addEvent(AxisClass, 'drawCrosshair', onAxisDrawCrosshair);\n                    var axisProto = AxisClass.prototype;\n                    wrap(axisProto, 'getLinePath', wrapAxisGetLinePath);\n                    wrap(axisProto, 'getPlotBandPath', wrapAxisGetPlotBandPath);\n                    wrap(axisProto, 'getPlotLinePath', wrapAxisGetPlotLinePath);\n                    wrap(axisProto, 'getSlotWidth', wrapAxisGetSlotWidth);\n                    wrap(axisProto, 'getTitlePosition', wrapAxisGetTitlePosition);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             * @param {Highcharts.Axis} axis\n             * Related axis.\n             * @param {Highcharts.Position3DObject} pos\n             * Position to fix.\n             * @param {boolean} [isTitle]\n             * Whether this is a title position.\n             * @return {Highcharts.Position3DObject}\n             * Fixed position.\n             */\n            Axis3DAdditions.prototype.fix3dPosition = function (pos, isTitle) {\n                var axis3D = this;\n                var axis = axis3D.axis;\n                var chart = axis.chart;\n                // Do not do this if the chart is not 3D\n                if (axis.coll === 'colorAxis' ||\n                    !chart.chart3d ||\n                    !chart.is3d()) {\n                    return pos;\n                }\n                var alpha = deg2rad * chart.options.chart.options3d.alpha,\n                    beta = deg2rad * chart.options.chart.options3d.beta,\n                    positionMode = pick(isTitle && axis.options.title.position3d,\n                    axis.options.labels.position3d),\n                    skew = pick(isTitle && axis.options.title.skew3d,\n                    axis.options.labels.skew3d),\n                    frame = chart.chart3d.frame3d,\n                    plotLeft = chart.plotLeft,\n                    plotRight = chart.plotWidth + plotLeft,\n                    plotTop = chart.plotTop,\n                    plotBottom = chart.plotHeight + plotTop;\n                var offsetX = 0,\n                    offsetY = 0,\n                    vecX,\n                    vecY = { x: 0,\n                    y: 1,\n                    z: 0 }, \n                    // Indicates that we are labelling an X or Z axis on the \"back\" of\n                    // the chart\n                    reverseFlap = false;\n                pos = axis.axis3D.swapZ({ x: pos.x, y: pos.y, z: 0 });\n                if (axis.isZAxis) { // Z Axis\n                    if (axis.opposite) {\n                        if (frame.axes.z.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.x = frame.axes.z.top.x;\n                        pos.y = frame.axes.z.top.y;\n                        vecX = frame.axes.z.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.z.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.x = frame.axes.z.bottom.x;\n                        pos.y = frame.axes.z.bottom.y;\n                        vecX = frame.axes.z.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else if (axis.horiz) { // X Axis\n                    if (axis.opposite) {\n                        if (frame.axes.x.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.y = frame.axes.x.top.y;\n                        pos.z = frame.axes.x.top.z;\n                        vecX = frame.axes.x.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.x.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.y = frame.axes.x.bottom.y;\n                        pos.z = frame.axes.x.bottom.z;\n                        vecX = frame.axes.x.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else { // Y Axis\n                    if (axis.opposite) {\n                        if (frame.axes.y.right === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotRight;\n                        pos.x = frame.axes.y.right.x;\n                        pos.z = frame.axes.y.right.z;\n                        vecX = frame.axes.y.right.xDir;\n                        // Rotate 90\u00BA on opposite edge\n                        vecX = { x: vecX.z, y: vecX.y, z: -vecX.x };\n                    }\n                    else {\n                        if (frame.axes.y.left === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotLeft;\n                        pos.x = frame.axes.y.left.x;\n                        pos.z = frame.axes.y.left.z;\n                        vecX = frame.axes.y.left.xDir;\n                    }\n                }\n                if (positionMode === 'chart') {\n                    // Labels preserve their direction relative to the chart\n                    // nothing to do\n                }\n                else if (positionMode === 'flap') {\n                    // Labels are rotated around the axis direction to face the screen\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        var sin = Math.sin(alpha);\n                        var cos = Math.cos(alpha);\n                        if (axis.opposite) {\n                            sin = -sin;\n                        }\n                        if (reverseFlap) {\n                            sin = -sin;\n                        }\n                        vecY = { x: vecX.z * sin, y: cos, z: -vecX.x * sin };\n                    }\n                }\n                else if (positionMode === 'ortho') {\n                    // Labels will be rotated to be ortogonal to the axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        var sina = Math.sin(alpha);\n                        var cosa = Math.cos(alpha);\n                        var sinb = Math.sin(beta);\n                        var cosb = Math.cos(beta);\n                        var vecZ = { x: sinb * cosa,\n                            y: -sina,\n                            z: -cosa * cosb };\n                        vecY = {\n                            x: vecX.y * vecZ.z - vecX.z * vecZ.y,\n                            y: vecX.z * vecZ.x - vecX.x * vecZ.z,\n                            z: vecX.x * vecZ.y - vecX.y * vecZ.x\n                        };\n                        var scale = 1 / Math.sqrt(vecY.x * vecY.x + vecY.y * vecY.y + vecY.z * vecY.z);\n                        if (reverseFlap) {\n                            scale = -scale;\n                        }\n                        vecY = {\n                            x: scale * vecY.x, y: scale * vecY.y, z: scale * vecY.z\n                        };\n                    }\n                }\n                else { // positionMode  == 'offset'\n                    // Labels will be skewd to maintain vertical / horizontal offsets\n                    // from axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        vecY = {\n                            x: Math.sin(beta) * Math.sin(alpha),\n                            y: Math.cos(alpha),\n                            z: -Math.cos(beta) * Math.sin(alpha)\n                        };\n                    }\n                }\n                pos.x += offsetX * vecX.x + offsetY * vecY.x;\n                pos.y += offsetX * vecX.y + offsetY * vecY.y;\n                pos.z += offsetX * vecX.z + offsetY * vecY.z;\n                var projected = perspective([pos],\n                    axis.chart)[0];\n                if (skew) {\n                    // Check if the label text would be mirrored\n                    var isMirrored = shapeArea(perspective([\n                            pos,\n                            { x: pos.x + vecX.x,\n                        y: pos.y + vecX.y,\n                        z: pos.z + vecX.z },\n                            { x: pos.x + vecY.x,\n                        y: pos.y + vecY.y,\n                        z: pos.z + vecY.z }\n                        ],\n                        axis.chart)) < 0;\n                    if (isMirrored) {\n                        vecX = { x: -vecX.x, y: -vecX.y, z: -vecX.z };\n                    }\n                    var pointsProjected = perspective([\n                            { x: pos.x,\n                        y: pos.y,\n                        z: pos.z },\n                            { x: pos.x + vecX.x,\n                        y: pos.y + vecX.y,\n                        z: pos.z + vecX.z },\n                            { x: pos.x + vecY.x,\n                        y: pos.y + vecY.y,\n                        z: pos.z + vecY.z }\n                        ],\n                        axis.chart);\n                    projected.matrix = [\n                        pointsProjected[1].x - pointsProjected[0].x,\n                        pointsProjected[1].y - pointsProjected[0].y,\n                        pointsProjected[2].x - pointsProjected[0].x,\n                        pointsProjected[2].y - pointsProjected[0].y,\n                        projected.x,\n                        projected.y\n                    ];\n                    projected.matrix[4] -= projected.x * projected.matrix[0] +\n                        projected.y * projected.matrix[2];\n                    projected.matrix[5] -= projected.x * projected.matrix[1] +\n                        projected.y * projected.matrix[3];\n                }\n                return projected;\n            };\n            /**\n             * @private\n             */\n            Axis3DAdditions.prototype.swapZ = function (p, insidePlotArea) {\n                var axis = this.axis;\n                if (axis.isZAxis) {\n                    var plotLeft = insidePlotArea ? 0 : axis.chart.plotLeft;\n                    return {\n                        x: plotLeft + p.z,\n                        y: p.y,\n                        z: p.x - plotLeft\n                    };\n                }\n                return p;\n            };\n            return Axis3DAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Axis3DAdditions;\n    });\n    _registerModule(_modules, 'Core/Series/Series3D.js', [_modules['Core/Math3D.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Math3D, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Extension to the Series object in 3D charts.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var perspective = Math3D.perspective;\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            merge = U.merge,\n            pick = U.pick,\n            isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Series3D = /** @class */ (function (_super) {\n                __extends(Series3D, _super);\n            function Series3D() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            Series3D.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                if (this.chart.is3d()) {\n                    this.translate3dPoints();\n                }\n            };\n            /**\n             * Translate the plotX, plotY properties and add plotZ.\n             * @private\n             */\n            Series3D.prototype.translate3dPoints = function () {\n                var series = this,\n                    seriesOptions = series.options,\n                    chart = series.chart,\n                    zAxis = pick(series.zAxis,\n                    chart.options.zAxis[0]),\n                    rawPoints = [],\n                    rawPoint,\n                    projectedPoints,\n                    projectedPoint,\n                    zValue,\n                    i,\n                    rawPointsX = [],\n                    stack = seriesOptions.stacking ?\n                        (isNumber(seriesOptions.stack) ? seriesOptions.stack : 0) :\n                        series.index || 0;\n                series.zPadding = stack *\n                    (seriesOptions.depth || 0 + (seriesOptions.groupZPadding || 1));\n                for (i = 0; i < series.data.length; i++) {\n                    rawPoint = series.data[i];\n                    if (zAxis && zAxis.translate) {\n                        zValue = zAxis.logarithmic && zAxis.val2lin ?\n                            zAxis.val2lin(rawPoint.z) :\n                            rawPoint.z; // #4562\n                        rawPoint.plotZ = zAxis.translate(zValue);\n                        rawPoint.isInside = rawPoint.isInside ?\n                            (zValue >= zAxis.min &&\n                                zValue <= zAxis.max) :\n                            false;\n                    }\n                    else {\n                        rawPoint.plotZ = series.zPadding;\n                    }\n                    rawPoint.axisXpos = rawPoint.plotX;\n                    rawPoint.axisYpos = rawPoint.plotY;\n                    rawPoint.axisZpos = rawPoint.plotZ;\n                    rawPoints.push({\n                        x: rawPoint.plotX,\n                        y: rawPoint.plotY,\n                        z: rawPoint.plotZ\n                    });\n                    rawPointsX.push(rawPoint.plotX || 0);\n                }\n                series.rawPointsX = rawPointsX;\n                projectedPoints = perspective(rawPoints, chart, true);\n                for (i = 0; i < series.data.length; i++) {\n                    rawPoint = series.data[i];\n                    projectedPoint = projectedPoints[i];\n                    rawPoint.plotX = projectedPoint.x;\n                    rawPoint.plotY = projectedPoint.y;\n                    rawPoint.plotZ = projectedPoint.z;\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Series3D.defaultOptions = merge(Series.defaultOptions);\n            return Series3D;\n        }(Series));\n        /* *\n         *\n         *  Compatibility\n         *\n         * */\n        /* eslint-disable no-invalid-this */\n        addEvent(Series, 'afterTranslate', function () {\n            if (this.chart.is3d()) {\n                this.translate3dPoints();\n            }\n        });\n        /* eslint-enable no-invalid-this */\n        extend(Series.prototype, {\n            translate3dPoints: Series3D.prototype.translate3dPoints\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Series3D;\n    });\n    _registerModule(_modules, 'Series/Area3D/Area3DSeries.js', [_modules['Core/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Math3D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Grzegorz Blachli\u0144ski\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var perspective = Math3D.perspective;\n        var lineProto = SeriesRegistry.seriesTypes.line.prototype;\n        var pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        function compose(AreaSeriesClass) {\n            if (composedClasses.indexOf(AreaSeriesClass) === -1) {\n                composedClasses.push(AreaSeriesClass);\n                wrap(AreaSeriesClass.prototype, 'getGraphPath', wrapAreaSeriesGetGraphPath);\n            }\n        }\n        function wrapAreaSeriesGetGraphPath(proceed) {\n            var series = this,\n                svgPath = proceed.apply(series,\n                [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (!series.chart.is3d()) {\n                return svgPath;\n            }\n            var getGraphPath = lineProto.getGraphPath,\n                options = series.options,\n                translatedThreshold = Math.round(// #10909\n                series.yAxis.getThreshold(options.threshold));\n            var bottomPoints = [];\n            if (series.rawPointsX) {\n                for (var i = 0; i < series.points.length; i++) {\n                    bottomPoints.push({\n                        x: series.rawPointsX[i],\n                        y: options.stacking ?\n                            series.points[i].yBottom : translatedThreshold,\n                        z: series.zPadding\n                    });\n                }\n            }\n            var options3d = series.chart.options.chart.options3d;\n            bottomPoints = perspective(bottomPoints, series.chart, true).map(function (point) { return ({ plotX: point.x, plotY: point.y, plotZ: point.z }); });\n            if (series.group && options3d && options3d.depth && options3d.beta) {\n                // Markers should take the global zIndex of series group.\n                if (series.markerGroup) {\n                    series.markerGroup.add(series.group);\n                    series.markerGroup.attr({\n                        translateX: 0,\n                        translateY: 0\n                    });\n                }\n                series.group.attr({\n                    zIndex: Math.max(1, (options3d.beta > 270 || options3d.beta < 90) ?\n                        options3d.depth - Math.round(series.zPadding || 0) :\n                        Math.round(series.zPadding || 0))\n                });\n            }\n            bottomPoints.reversed = true;\n            var bottomPath = getGraphPath.call(series,\n                bottomPoints,\n                true,\n                true);\n            if (bottomPath[0] && bottomPath[0][0] === 'M') {\n                bottomPath[0] = ['L', bottomPath[0][1], bottomPath[0][2]];\n            }\n            if (series.areaPath) {\n                // Remove previously used bottomPath and add the new one.\n                var areaPath = series.areaPath.splice(0,\n                    series.areaPath.length / 2).concat(bottomPath);\n                // Use old xMap in the new areaPath\n                areaPath.xMap = series.areaPath.xMap;\n                series.areaPath = areaPath;\n            }\n            return svgPath;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Area3DSeries = {\n                compose: compose\n            };\n\n        return Area3DSeries;\n    });\n    _registerModule(_modules, 'Series/Column3D/Column3DComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (ColumnSeries, H, Series, Math3D, SeriesRegistry, StackItem, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var columnProto = ColumnSeries.prototype;\n        var svg = H.svg;\n        var perspective = Math3D.perspective;\n        var addEvent = U.addEvent,\n            pick = U.pick,\n            wrap = U.wrap;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable no-invalid-this */\n        /**\n         * @private\n         * @param {Highcharts.Chart} chart\n         * Chart with stacks\n         * @param {string} stacking\n         * Stacking option\n         */\n        function retrieveStacks(chart, stacking) {\n            var series = chart.series,\n                stacks = { totalStacks: 0 };\n            var stackNumber,\n                i = 1;\n            series.forEach(function (s) {\n                stackNumber = pick(s.options.stack, (stacking ? 0 : series.length - 1 - s.index)); // #3841, #4532\n                if (!stacks[stackNumber]) {\n                    stacks[stackNumber] = { series: [s], position: i };\n                    i++;\n                }\n                else {\n                    stacks[stackNumber].series.push(s);\n                }\n            });\n            stacks.totalStacks = i + 1;\n            return stacks;\n        }\n        wrap(columnProto, 'translate', function (proceed) {\n            proceed.apply(this, [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (this.chart.is3d()) {\n                this.translate3dShapes();\n            }\n        });\n        // Don't use justifyDataLabel when point is outsidePlot\n        wrap(Series.prototype, 'justifyDataLabel', function (proceed) {\n            return !(arguments[2].outside3dPlot) ?\n                proceed.apply(this, [].slice.call(arguments, 1)) :\n                false;\n        });\n        columnProto.translate3dPoints = function () { };\n        columnProto.translate3dShapes = function () {\n            var series = this,\n                chart = series.chart,\n                seriesOptions = series.options,\n                depth = seriesOptions.depth,\n                stack = seriesOptions.stacking ?\n                    (seriesOptions.stack || 0) :\n                    series.index, // #4743\n                z = stack * (depth + (seriesOptions.groupZPadding || 1)),\n                borderCrisp = series.borderWidth % 2 ? 0.5 : 0,\n                point2dPos; // Position of point in 2D, used for 3D position calculation\n                if (chart.inverted && !series.yAxis.reversed) {\n                    borderCrisp *= -1;\n            }\n            if (seriesOptions.grouping !== false) {\n                z = 0;\n            }\n            z += (seriesOptions.groupZPadding || 1);\n            series.data.forEach(function (point) {\n                // #7103 Reset outside3dPlot flag\n                point.outside3dPlot = null;\n                if (point.y !== null) {\n                    var shapeArgs_1 = point.shapeArgs, tooltipPos = point.tooltipPos, \n                        // Array for final shapeArgs calculation.\n                        // We are checking two dimensions (x and y).\n                        dimensions = [['x', 'width'], ['y', 'height']], borderlessBase_1; // Crisped rects can have +/- 0.5 pixels offset.\n                        // #3131 We need to check if column is inside plotArea.\n                        dimensions.forEach(function (d) {\n                            borderlessBase_1 = shapeArgs_1[d[0]] - borderCrisp;\n                        if (borderlessBase_1 < 0) {\n                            // If borderLessBase is smaller than 0, it is needed to set\n                            // its value to 0 or 0.5 depending on borderWidth\n                            // borderWidth may be even or odd.\n                            shapeArgs_1[d[1]] +=\n                                shapeArgs_1[d[0]] + borderCrisp;\n                            shapeArgs_1[d[0]] = -borderCrisp;\n                            borderlessBase_1 = 0;\n                        }\n                        if ((borderlessBase_1 + shapeArgs_1[d[1]] >\n                            series[d[0] + 'Axis'].len) &&\n                            // Do not change height/width of column if 0 (#6708)\n                            shapeArgs_1[d[1]] !== 0) {\n                            shapeArgs_1[d[1]] =\n                                series[d[0] + 'Axis'].len -\n                                    shapeArgs_1[d[0]];\n                        }\n                        if (\n                        // Do not remove columns with zero height/width.\n                        (shapeArgs_1[d[1]] !== 0) &&\n                            (shapeArgs_1[d[0]] >=\n                                series[d[0] + 'Axis'].len ||\n                                shapeArgs_1[d[0]] + shapeArgs_1[d[1]] <=\n                                    borderCrisp)) {\n                            // Set args to 0 if column is outside the chart.\n                            for (var key in shapeArgs_1) { // eslint-disable-line guard-for-in\n                                // #13840\n                                shapeArgs_1[key] = key === 'y' ? -9999 : 0;\n                            }\n                            // #7103 outside3dPlot flag is set on Points which are\n                            // currently outside of plot.\n                            point.outside3dPlot = true;\n                        }\n                    });\n                    // Change from 2d to 3d\n                    if (point.shapeType === 'rect') {\n                        point.shapeType = 'cuboid';\n                    }\n                    shapeArgs_1.z = z;\n                    shapeArgs_1.depth = depth;\n                    shapeArgs_1.insidePlotArea = true;\n                    // Point's position in 2D\n                    point2dPos = {\n                        x: shapeArgs_1.x + shapeArgs_1.width / 2,\n                        y: shapeArgs_1.y,\n                        z: z + depth / 2 // The center of column in Z dimension\n                    };\n                    // Recalculate point positions for inverted graphs\n                    if (chart.inverted) {\n                        point2dPos.x = shapeArgs_1.height;\n                        point2dPos.y = point.clientX;\n                    }\n                    // Calculate and store point's position in 3D,\n                    // using perspective method.\n                    point.plot3d = perspective([point2dPos], chart, true, false)[0];\n                    // Translate the tooltip position in 3d space\n                    tooltipPos = perspective([{\n                            x: tooltipPos[0],\n                            y: tooltipPos[1],\n                            z: z + depth / 2 // The center of column in Z dimension\n                        }], chart, true, false)[0];\n                    point.tooltipPos = [tooltipPos.x, tooltipPos.y];\n                }\n            });\n            // store for later use #4067\n            series.z = z;\n        };\n        wrap(columnProto, 'animate', function (proceed) {\n            if (!this.chart.is3d()) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            else {\n                var args = arguments,\n                    init = args[1],\n                    yAxis_1 = this.yAxis,\n                    series_1 = this,\n                    reversed_1 = this.yAxis.reversed;\n                if (svg) { // VML is too slow anyway\n                    if (init) {\n                        series_1.data.forEach(function (point) {\n                            if (point.y !== null) {\n                                point.height = point.shapeArgs.height;\n                                point.shapey = point.shapeArgs.y; // #2968\n                                point.shapeArgs.height = 1;\n                                if (!reversed_1) {\n                                    if (point.stackY) {\n                                        point.shapeArgs.y =\n                                            point.plotY +\n                                                yAxis_1.translate(point.stackY);\n                                    }\n                                    else {\n                                        point.shapeArgs.y =\n                                            point.plotY +\n                                                (point.negative ?\n                                                    -point.height :\n                                                    point.height);\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    else { // run the animation\n                        series_1.data.forEach(function (point) {\n                            if (point.y !== null) {\n                                point.shapeArgs.height = point.height;\n                                point.shapeArgs.y = point.shapey; // #2968\n                                // null value do not have a graphic\n                                if (point.graphic) {\n                                    point.graphic[point.outside3dPlot ?\n                                        'attr' :\n                                        'animate'](point.shapeArgs, series_1.options.animation);\n                                }\n                            }\n                        });\n                        // redraw datalabels to the correct position\n                        this.drawDataLabels();\n                    }\n                }\n            }\n        });\n        // In case of 3d columns there is no sense to add this columns to a specific\n        // series group - if series is added to a group all columns will have the same\n        // zIndex in comparison with different series.\n        wrap(columnProto, 'plotGroup', function (proceed, prop, _name, _visibility, _zIndex, parent) {\n            if (prop !== 'dataLabelsGroup' && prop !== 'markerGroup') {\n                if (this.chart.is3d()) {\n                    if (this[prop]) {\n                        delete this[prop];\n                    }\n                    if (parent) {\n                        if (!this.chart.columnGroup) {\n                            this.chart.columnGroup =\n                                this.chart.renderer.g('columnGroup').add(parent);\n                        }\n                        this[prop] = this.chart.columnGroup;\n                        this.chart.columnGroup.attr(this.getPlotBox());\n                        this[prop].survive = true;\n                        if (prop === 'group') {\n                            arguments[3] = 'visible';\n                            // For 3D column group and markerGroup should be visible\n                        }\n                    }\n                }\n            }\n            return proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        });\n        // When series is not added to group it is needed to change setVisible method to\n        // allow correct Legend funcionality. This wrap is basing on pie chart series.\n        wrap(columnProto, 'setVisible', function (proceed, vis) {\n            var series = this;\n            if (series.chart.is3d()) {\n                series.data.forEach(function (point) {\n                    point.visible = point.options.visible = vis =\n                        typeof vis === 'undefined' ?\n                            !pick(series.visible, point.visible) : vis;\n                    series.options.data[series.data.indexOf(point)] =\n                        point.options;\n                    if (point.graphic) {\n                        point.graphic.attr({\n                            visibility: vis ? 'visible' : 'hidden'\n                        });\n                    }\n                });\n            }\n            proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        });\n        addEvent(ColumnSeries, 'afterInit', function () {\n            if (this.chart.is3d()) {\n                var series = this,\n                    seriesOptions = this.options,\n                    grouping = seriesOptions.grouping,\n                    stacking = seriesOptions.stacking,\n                    reversedStacks = this.yAxis.options.reversedStacks,\n                    z = 0;\n                // @todo grouping === true ?\n                if (!(typeof grouping !== 'undefined' && !grouping)) {\n                    var stacks = retrieveStacks(this.chart,\n                        stacking),\n                        stack = seriesOptions.stack || 0,\n                        i = // position within the stack\n                         void 0; // position within the stack\n                        for (i = 0; i < stacks[stack].series.length; i++) {\n                            if (stacks[stack].series[i] === this) {\n                                break;\n                        }\n                    }\n                    z = (10 * (stacks.totalStacks - stacks[stack].position)) +\n                        (reversedStacks ? i : -i); // #4369\n                    // In case when axis is reversed, columns are also reversed inside\n                    // the group (#3737)\n                    if (!this.xAxis.reversed) {\n                        z = (stacks.totalStacks * 10) - z;\n                    }\n                }\n                seriesOptions.depth = seriesOptions.depth || 25;\n                series.z = series.z || 0;\n                seriesOptions.zIndex = z;\n            }\n        });\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * @private\n         */\n        function pointAttribs(proceed) {\n            var attr = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            if (this.chart.is3d && this.chart.is3d()) {\n                // Set the fill color to the fill color to provide a smooth edge\n                attr.stroke = this.options.edgeColor || attr.fill;\n                attr['stroke-width'] = pick(this.options.edgeWidth, 1); // #4055\n            }\n            return attr;\n        }\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * In 3D mode, all column-series are rendered in one main group. Because of that\n         * we need to apply inactive state on all points.\n         * @private\n         */\n        function setState(proceed, state, inherit) {\n            var is3d = this.chart.is3d && this.chart.is3d();\n            if (is3d) {\n                this.options.inactiveOtherPoints = true;\n            }\n            proceed.call(this, state, inherit);\n            if (is3d) {\n                this.options.inactiveOtherPoints = false;\n            }\n        }\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * In 3D mode, simple checking for a new shape to animate is not enough.\n         * Additionally check if graphic is a group of elements\n         * @private\n         */\n        function hasNewShapeType(proceed) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return this.series.chart.is3d() ?\n                this.graphic && this.graphic.element.nodeName !== 'g' :\n                proceed.apply(this, args);\n        }\n        wrap(columnProto, 'pointAttribs', pointAttribs);\n        wrap(columnProto, 'setState', setState);\n        wrap(columnProto.pointClass.prototype, 'hasNewShapeType', hasNewShapeType);\n        if (SeriesRegistry.seriesTypes.columnRange) {\n            var columnRangeProto = SeriesRegistry.seriesTypes.columnrange.prototype;\n            wrap(columnRangeProto, 'pointAttribs', pointAttribs);\n            wrap(columnRangeProto, 'setState', setState);\n            wrap(columnRangeProto.pointClass.prototype, 'hasNewShapeType', hasNewShapeType);\n            columnRangeProto.plotGroup = columnProto.plotGroup;\n            columnRangeProto.setVisible = columnProto.setVisible;\n        }\n        wrap(Series.prototype, 'alignDataLabel', function (proceed, point, dataLabel, options, alignTo) {\n            var chart = this.chart;\n            // In 3D we need to pass point.outsidePlot option to the justifyDataLabel\n            // method for disabling justifying dataLabels in columns outside plot\n            options.outside3dPlot = point.outside3dPlot;\n            // Only do this for 3D columns and it's derived series\n            if (chart.is3d() &&\n                this.is('column')) {\n                var series = this,\n                    seriesOptions = series.options,\n                    inside = pick(options.inside, !!series.options.stacking),\n                    options3d = chart.options.chart.options3d,\n                    xOffset = point.pointWidth / 2 || 0;\n                var dLPosition = {\n                        x: alignTo.x + xOffset,\n                        y: alignTo.y,\n                        z: series.z + seriesOptions.depth / 2\n                    };\n                if (chart.inverted) {\n                    // Inside dataLabels are positioned according to above\n                    // logic and there is no need to position them using\n                    // non-3D algorighm (that use alignTo.width)\n                    if (inside) {\n                        alignTo.width = 0;\n                        dLPosition.x += point.shapeArgs.height / 2;\n                    }\n                    // When chart is upside down\n                    // (alpha angle between 180 and 360 degrees)\n                    // it is needed to add column width to calculated value.\n                    if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                        dLPosition.y += point.shapeArgs.width;\n                    }\n                }\n                // dLPosition is recalculated for 3D graphs\n                dLPosition = perspective([dLPosition], chart, true, false)[0];\n                alignTo.x = dLPosition.x - xOffset;\n                // #7103 If point is outside of plotArea, hide data label.\n                alignTo.y = point.outside3dPlot ? -9e9 : dLPosition.y;\n            }\n            proceed.apply(this, [].slice.call(arguments, 1));\n        });\n        // Added stackLabels position calculation for 3D charts.\n        wrap(StackItem.prototype, 'getStackBox', function (proceed, stackBoxProps) {\n            var stackBox = proceed.apply(this,\n                [].slice.call(arguments, 1));\n            // Only do this for 3D graph\n            var stackItem = this,\n                chart = this.axis.chart,\n                xWidth = stackBoxProps.width;\n            if (chart.is3d() && stackItem.base) {\n                // First element of stackItem.base is an index of base series.\n                var baseSeriesInd = +(stackItem.base).split(',')[0];\n                var columnSeries = chart.series[baseSeriesInd];\n                var options3d = chart.options.chart.options3d;\n                // Only do this if base series is a column or inherited type,\n                // use its barW, z and depth parameters\n                // for correct stackLabels position calculation\n                if (columnSeries &&\n                    columnSeries instanceof SeriesRegistry.seriesTypes.column) {\n                    var dLPosition = {\n                            x: stackBox.x + (chart.inverted ? stackBox.height : xWidth / 2),\n                            y: stackBox.y,\n                            z: columnSeries.options.depth / 2\n                        };\n                    if (chart.inverted) {\n                        // Do not use default offset calculation logic\n                        // for 3D inverted stackLabels.\n                        stackBox.width = 0;\n                        // When chart is upside down\n                        // (alpha angle between 180 and 360 degrees)\n                        // it is needed to add column width to calculated value.\n                        if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                            dLPosition.y += xWidth;\n                        }\n                    }\n                    dLPosition = perspective([dLPosition], chart, true, false)[0];\n                    stackBox.x = dLPosition.x - xWidth / 2;\n                    stackBox.y = dLPosition.y;\n                }\n            }\n            return stackBox;\n        });\n        /*\n            @merge v6.2\n            @todo\n            EXTENSION FOR 3D CYLINDRICAL COLUMNS\n            Not supported\n        */\n        /*\n        let defaultOptions = H.getOptions();\n        defaultOptions.plotOptions.cylinder =\n            merge(defaultOptions.plotOptions.column);\n        let CylinderSeries = extendClass(seriesTypes.column, {\n            type: 'cylinder'\n        });\n        seriesTypes.cylinder = CylinderSeries;\n\n        wrap(seriesTypes.cylinder.prototype, 'translate', function (proceed) {\n            proceed.apply(this, [].slice.call(arguments, 1));\n\n            // Do not do this if the chart is not 3D\n            if (!this.chart.is3d()) {\n                return;\n            }\n\n            let series = this,\n                chart = series.chart,\n                options = chart.options,\n                cylOptions = options.plotOptions.cylinder,\n                options3d = options.chart.options3d,\n                depth = cylOptions.depth || 0,\n                alpha = chart.alpha3d;\n\n            let z = cylOptions.stacking ?\n                (this.options.stack || 0) * depth :\n                series._i * depth;\n            z += depth / 2;\n\n            if (cylOptions.grouping !== false) { z = 0; }\n\n            each(series.data, function (point) {\n                let shapeArgs = point.shapeArgs,\n                    deg2rad = H.deg2rad;\n                point.shapeType = 'arc3d';\n                shapeArgs.x += depth / 2;\n                shapeArgs.z = z;\n                shapeArgs.start = 0;\n                shapeArgs.end = 2 * PI;\n                shapeArgs.r = depth * 0.95;\n                shapeArgs.innerR = 0;\n                shapeArgs.depth =\n                    shapeArgs.height * (1 / sin((90 - alpha) * deg2rad)) - z;\n                shapeArgs.alpha = 90 - alpha;\n                shapeArgs.beta = 0;\n            });\n        });\n        */\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Depth of the columns in a 3D column chart.\n         *\n         * @type      {number}\n         * @default   25\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.depth\n         */\n        /**\n         * 3D columns only. The color of the edges. Similar to `borderColor`, except it\n         * defaults to the same color as the column.\n         *\n         * @type      {Highcharts.ColorString}\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeColor\n         */\n        /**\n         * 3D columns only. The width of the colored edges.\n         *\n         * @type      {number}\n         * @default   1\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeWidth\n         */\n        /**\n         * The spacing between columns on the Z Axis in a 3D chart.\n         *\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.groupZPadding\n         */\n        ''; // keeps doclets above in transpiled file\n\n        return ColumnSeries;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var PiePoint = SeriesRegistry.seriesTypes.pie.prototype.pointClass;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var superHaloPath = PiePoint.prototype.haloPath;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Pie3DPoint = /** @class */ (function (_super) {\n                __extends(Pie3DPoint, _super);\n            function Pie3DPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.series = void 0;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            Pie3DPoint.prototype.haloPath = function () {\n                return this.series.chart.is3d() ?\n                    [] : superHaloPath.apply(this, arguments);\n            };\n            return Pie3DPoint;\n        }(PiePoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Pie3DPoint;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DSeries.js', [_modules['Core/Globals.js'], _modules['Series/Pie3D/Pie3DPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, Pie3DPoint, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var deg2rad = H.deg2rad,\n            svg = H.svg;\n        var PieSeries = SeriesRegistry.seriesTypes.pie;\n        var extend = U.extend,\n            pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Pie3DSeries = /** @class */ (function (_super) {\n                __extends(Pie3DSeries, _super);\n            function Pie3DSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.addPoint = function () {\n                _super.prototype.addPoint.apply(this, arguments);\n                if (this.chart.is3d()) {\n                    // destroy (and rebuild) everything!!!\n                    this.update(this.userOptions, true); // #3845 pass the old options\n                }\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.animate = function (init) {\n                if (!this.chart.is3d()) {\n                    _super.prototype.animate.apply(this, arguments);\n                }\n                else {\n                    var animation = this.options.animation,\n                        attribs = void 0,\n                        center = this.center,\n                        group = this.group,\n                        markerGroup = this.markerGroup;\n                    if (svg) { // VML is too slow anyway\n                        if (animation === true) {\n                            animation = {};\n                        }\n                        // Initialize the animation\n                        if (init) {\n                            // Scale down the group and place it in the center\n                            group.oldtranslateX = pick(group.oldtranslateX, group.translateX);\n                            group.oldtranslateY = pick(group.oldtranslateY, group.translateY);\n                            attribs = {\n                                translateX: center[0],\n                                translateY: center[1],\n                                scaleX: 0.001,\n                                scaleY: 0.001\n                            };\n                            group.attr(attribs);\n                            if (markerGroup) {\n                                markerGroup.attrSetters = group.attrSetters;\n                                markerGroup.attr(attribs);\n                            }\n                            // Run the animation\n                        }\n                        else {\n                            attribs = {\n                                translateX: group.oldtranslateX,\n                                translateY: group.oldtranslateY,\n                                scaleX: 1,\n                                scaleY: 1\n                            };\n                            group.animate(attribs, animation);\n                            if (markerGroup) {\n                                markerGroup.animate(attribs, animation);\n                            }\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.drawDataLabels = function () {\n                if (this.chart.is3d()) {\n                    var series = this,\n                        chart = series.chart,\n                        options3d_1 = chart.options.chart.options3d;\n                    series.data.forEach(function (point) {\n                        var shapeArgs = point.shapeArgs,\n                            r = shapeArgs.r, \n                            // #3240 issue with datalabels for 0 and null values\n                            a1 = ((shapeArgs.alpha || options3d_1.alpha) * deg2rad),\n                            b1 = ((shapeArgs.beta || options3d_1.beta) * deg2rad),\n                            a2 = ((shapeArgs.start + shapeArgs.end) / 2),\n                            labelPosition = point.labelPosition,\n                            connectorPosition = (labelPosition.connectorPosition),\n                            yOffset = (-r * (1 - Math.cos(a1)) * Math.sin(a2)),\n                            xOffset = r * (Math.cos(b1) - 1) * Math.cos(a2);\n                        // Apply perspective on label positions\n                        [\n                            labelPosition.natural,\n                            connectorPosition.breakAt,\n                            connectorPosition.touchingSliceAt\n                        ].forEach(function (coordinates) {\n                            coordinates.x += xOffset;\n                            coordinates.y += yOffset;\n                        });\n                    });\n                }\n                _super.prototype.drawDataLabels.apply(this, arguments);\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.pointAttribs = function (point) {\n                var attr = _super.prototype.pointAttribs.apply(this,\n                    arguments),\n                    options = this.options;\n                if (this.chart.is3d() && !this.chart.styledMode) {\n                    attr.stroke = options.edgeColor || point.color || this.color;\n                    attr['stroke-width'] = pick(options.edgeWidth, 1);\n                }\n                return attr;\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                var series = this,\n                    seriesOptions = series.options,\n                    depth = seriesOptions.depth || 0,\n                    options3d = series.chart.options.chart.options3d,\n                    alpha = options3d.alpha,\n                    beta = options3d.beta,\n                    z = seriesOptions.stacking ?\n                        (seriesOptions.stack || 0) * depth :\n                        series._i * depth;\n                z += depth / 2;\n                if (seriesOptions.grouping !== false) {\n                    z = 0;\n                }\n                series.data.forEach(function (point) {\n                    var shapeArgs = point.shapeArgs,\n                        angle;\n                    point.shapeType = 'arc3d';\n                    shapeArgs.z = z;\n                    shapeArgs.depth = depth * 0.75;\n                    shapeArgs.alpha = alpha;\n                    shapeArgs.beta = beta;\n                    shapeArgs.center = series.center;\n                    angle = (shapeArgs.end + shapeArgs.start) / 2;\n                    point.slicedTranslation = {\n                        translateX: Math.round(Math.cos(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad)),\n                        translateY: Math.round(Math.sin(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad))\n                    };\n                });\n            };\n            /**\n             * @private\n             */\n            Pie3DSeries.prototype.drawTracker = function () {\n                _super.prototype.drawTracker.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                this.points.forEach(function (point) {\n                    if (point.graphic) {\n                        ['out', 'inn', 'side1', 'side2'].forEach(function (face) {\n                            if (point.graphic) {\n                                point.graphic[face].element.point = point;\n                            }\n                        });\n                    }\n                });\n            };\n            return Pie3DSeries;\n        }(PieSeries));\n        extend(Pie3DSeries.prototype, {\n            pointClass: Pie3DPoint\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The thickness of a 3D pie.\n         *\n         * @type      {number}\n         * @default   0\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.pie.depth\n         */\n        ''; // keeps doclets above after transpilation\n\n        return Pie3DSeries;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DComposition.js', [_modules['Series/Pie3D/Pie3DPoint.js'], _modules['Series/Pie3D/Pie3DSeries.js'], _modules['Core/Series/SeriesRegistry.js']], function (Pie3DPoint, Pie3DSeries, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        SeriesRegistry.seriesTypes.pie.prototype.pointClass.prototype\n            .haloPath = Pie3DPoint.prototype.haloPath;\n        SeriesRegistry.seriesTypes.pie = Pie3DSeries;\n\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DPoint.js', [_modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Utilities.js']], function (ScatterSeries, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defined = U.defined;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Scatter3DPoint = /** @class */ (function (_super) {\n                __extends(Scatter3DPoint, _super);\n            function Scatter3DPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.options = void 0;\n                _this.series = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            Scatter3DPoint.prototype.applyOptions = function () {\n                _super.prototype.applyOptions.apply(this, arguments);\n                if (!defined(this.z)) {\n                    this.z = 0;\n                }\n                return this;\n            };\n            return Scatter3DPoint;\n        }(ScatterSeries.prototype.pointClass));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scatter3DPoint;\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DSeries.js', [_modules['Core/Math3D.js'], _modules['Series/Scatter3D/Scatter3DPoint.js'], _modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Math3D, Scatter3DPoint, ScatterSeries, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var pointCameraDistance = Math3D.pointCameraDistance;\n        var extend = U.extend,\n            merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.scatter3d\n         *\n         * @augments Highcharts.Series\n         */\n        var Scatter3DSeries = /** @class */ (function (_super) {\n                __extends(Scatter3DSeries, _super);\n            function Scatter3DSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            Scatter3DSeries.prototype.pointAttribs = function (point) {\n                var attribs = _super.prototype.pointAttribs.apply(this,\n                    arguments);\n                if (this.chart.is3d() && point) {\n                    attribs.zIndex =\n                        pointCameraDistance(point, this.chart);\n                }\n                return attribs;\n            };\n            /**\n             * A 3D scatter plot uses x, y and z coordinates to display values for three\n             * variables for a set of data.\n             *\n             * @sample {highcharts} highcharts/3d/scatter/\n             *         Simple 3D scatter\n             * @sample {highcharts} highcharts/demo/3d-scatter-draggable\n             *         Draggable 3d scatter\n             *\n             * @extends      plotOptions.scatter\n             * @excluding    dragDrop, cluster, boostThreshold, boostBlending\n             * @product      highcharts\n             * @requires     highcharts-3d\n             * @optionparent plotOptions.scatter3d\n             */\n            Scatter3DSeries.defaultOptions = merge(ScatterSeries.defaultOptions, {\n                tooltip: {\n                    pointFormat: 'x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>'\n                }\n            });\n            return Scatter3DSeries;\n        }(ScatterSeries));\n        extend(Scatter3DSeries.prototype, {\n            axisTypes: ['xAxis', 'yAxis', 'zAxis'],\n            // Require direct touch rather than using the k-d-tree, because the\n            // k-d-tree currently doesn't take the xyz coordinate system into\n            // account (#4552)\n            directTouch: true,\n            parallelArrays: ['x', 'y', 'z'],\n            pointArrayMap: ['x', 'y', 'z'],\n            pointClass: Scatter3DPoint\n        });\n        SeriesRegistry.registerSeriesType('scatter3d', Scatter3DSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `scatter3d` series. If the [type](#series.scatter3d.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * scatter3d](#plotOptions.scatter3d).\n         *\n         * @extends   series,plotOptions.scatter3d\n         * @excluding boostThreshold, boostBlending\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption series.scatter3d\n         */\n        /**\n         * An array of data points for the series. For the `scatter3d` series\n         * type, points can be given in the following ways:\n         *\n         * 1.  An array of arrays with 3 values. In this case, the values correspond\n         * to `x,y,z`. If the first value is a string, it is applied as the name\n         * of the point, and the `x` value is inferred.\n         *\n         *  ```js\n         *     data: [\n         *         [0, 0, 1],\n         *         [1, 8, 7],\n         *         [2, 9, 2]\n         *     ]\n         *  ```\n         *\n         * 3.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series'\n         * [turboThreshold](#series.scatter3d.turboThreshold), this option is not\n         * available.\n         *\n         *  ```js\n         *     data: [{\n         *         x: 1,\n         *         y: 2,\n         *         z: 24,\n         *         name: \"Point2\",\n         *         color: \"#00FF00\"\n         *     }, {\n         *         x: 1,\n         *         y: 4,\n         *         z: 12,\n         *         name: \"Point1\",\n         *         color: \"#FF00FF\"\n         *     }]\n         *  ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<number>|*>}\n         * @extends   series.scatter.data\n         * @product   highcharts\n         * @apioption series.scatter3d.data\n         */\n        /**\n         * The z value for each data point.\n         *\n         * @type      {number}\n         * @product   highcharts\n         * @apioption series.scatter3d.data.z\n         */\n        ''; // adds doclets above to transpiled file\n\n        return Scatter3DSeries;\n    });\n    _registerModule(_modules, 'masters/highcharts-3d.src.js', [_modules['Core/Globals.js'], _modules['Core/Renderer/SVG/SVGRenderer3D.js'], _modules['Core/Chart/Chart3D.js'], _modules['Core/Axis/ZAxis.js'], _modules['Core/Axis/Axis3DComposition.js'], _modules['Series/Area3D/Area3DSeries.js']], function (Highcharts, SVGRenderer3D, Chart3D, ZAxis, Axis3DComposition, Area3DSeries) {\n\n        var G = Highcharts;\n        // Compositions\n        SVGRenderer3D.compose(G.SVGRenderer);\n        Chart3D.compose(G.Chart, G.Fx);\n        ZAxis.compose(G.Chart);\n        Axis3DComposition.compose(G.Axis, G.Tick);\n        Area3DSeries.compose(G.seriesTypes.area);\n\n    });\n}));"],
  "mappings": ";;;;;;;AAOC,KAAA,SAAUA,GAAS;AACM,mBAAlB,OAAOC,UAAuBA,OAAAC,WAC9BF,EAAQ,aAAaA,GACrBC,OAAAC,UAAiBF,KACQ,eAAlB,OAAOG,UAAyBA,OAAAC,MACvCD,OAAO,4BAA4B,CAAC,YAAD,GAAgB,SAAUE,GAAY;AACrEL,UAAQK,CAAR;AACAL,UAAAK,aAAqBA;AACrB,eAAOL;MAH8D,CAAzE,IAMAA,EAA8B,gBAAtB,OAAOK,aAA6BA,aAAaC,MAAzD;IAXY,GAalB,SAAUD,GAAY;AAGpBE,eAASA,EAAgBC,IAAKC,GAAMC,GAAMC,GAAI;AACrCH,QAAAA,GAAAI,eAAmBH,CAAnB,MACDD,GAAIC,KAAQE,EAAAE,MAAS,MAAMH,CAAf,GAEe,eAAvB,OAAOI,eACPC,OAAAC,cACI,IAAIF,YACA,0BACA,EAAEG,QAAQ,EAAER,MAAMA,GAAMR,QAAQO,GAAIC,GAA1B,EAAV,CAFJ,CADJ;MALkC;AAD1CS,UAAWb,IAAaA,EAAAa,WAAsB,CAAA;AAelDX;QAAgBW;QAAU;QAAkB,CAACA,EAAS,oBAAoBA,EAAS,oBAAvC;QAA8D,SAAUC,IAAGC,GAAG;AA4FtHC,mBAASA,EAAYC,IAAQC,GAAOC,GAAgBC,GAAkB;AAAA,gBAC9DC,IAAYH,EAAAI,QAAAJ,MAAAG,WAKZE,KAAWC,EAAKJ,GAChBD,IAAiBD,EAAAK,WAAiB,KADvB,GAEXE,IAAS,EACLC,GAAGR,EAAAS,YAAkB,GACrBC,GAAGV,EAAAW,aAAmB,GACtBC,GAAGT,EAAAU,QAAkB,GACrBC,IAAIR,EAAKH,EAAAU,OAAiB,CAAtB,IAA2BP,EAAKH,EAAAY,cAAwB,CAA7B,EAJ1B,GAMTC,IAAQhB,EAAAiB,WAAiB;AACzBC,gBAAOC,IAAUhB,EAAAe,QAAkBb,KAAW,KAAK;AACnDe,gBAAQD,IAAUhB,EAAAiB,SAAmBf,KAAW,KAAK;AAE3C,gBAAA,IAAAgB,KAAAC,IAASF,CAAT,GACA,IAAAC,KAAAC,IAAS,CAACJ,CAAV,GACA,IAAAG,KAAAE,IAASH,CAAT,GACA,IAAAC,KAAAE,IAAS,CAACL,CAAV;AAETjB,kBACDM,EAAAC,KAAYR,EAAAwB,UACZjB,EAAAG,KAAYV,EAAAyB;AAGhB,mBAAO1B,GAAA2B,IAAW,SAAUC,IAAO;AACR,kBAAAC,MAACvB,KAAWsB,GAAAjB,IAAUiB,GAAAnB,KAAWD,EAAAC;AAAU,kBAAAqB,MAACxB,KAAWsB,GAAAnB,IAAUmB,GAAAjB,KAAWH,EAAAG;AAAU,cAAAoB,MAACH,GAAAf,KAAW,KAAKL,EAAAK;AA5DlI,cAAAgB,KAAO,EACHpB,GAAGuB,IAAcvB,KAAIwB,IAAcpB,IACnCF,GAAG,CAACuB,IAAcD,IAAcxB,KAAI0B,IAAcxB,KAC9CqB,IAAcE,IAAcrB,IAChCA,GAAGsB,IAAcF,IAAcxB,KAAIyB,IAAcvB,KAC7CwB,IAAcH,IAAcnB,GAL7B;AA+DCuB,cAAAA,KAAaC,EAAcC,IAC3B9B,GACAA,EAAAO,EAFa;AAIjBqB,cAAAA,GAAA3B,IAAe2B,GAAA3B,IAAeQ,IAAQT,EAAAC;AACtC2B,cAAAA,GAAAzB,IAAeyB,GAAAzB,IAAeM,IAAQT,EAAAG;AACtCyB,cAAAA,GAAAvB,IAAeyB,GAAAzB,IAAYI,IAAQT,EAAAK;AACnC,qBAAO,EACHJ,GAAIH,KAAW8B,GAAAzB,IAAeyB,GAAA3B,GAC9BE,GAAIL,KAAW8B,GAAA3B,IAAe2B,GAAAzB,GAC9BE,GAAGuB,GAAAvB,EAHA;YAXwB,CAA5B;UA5B2D;AAkEtEwB,mBAASA,EAAcD,IAAY5B,GAAQ+B,GAAU;AAC7CC,gBAA0B,IAAXD,KACVA,IAAWE,OAAAC,oBACZH,KAAYH,GAAAvB,IAAeL,EAAAK,IAAW0B,KACtC;AACR,mBAAO,EACH9B,GAAG2B,GAAA3B,IAAe+B,GAClB7B,GAAGyB,GAAAzB,IAAe6B,EAFf;UAL0C;AA4DrDG,mBAASA,EAAUC,IAAU;AAAA,gBACrBC,IAAO,GACPC;AAEJ,iBAAKA,IAAI,GAAGA,IAAIF,GAAAG,QAAiBD,KAAK;AAClC,kBAAAE,KAAKF,IAAI,KAAKF,GAAAG;AACdF,mBAAQD,GAASE,GAATrC,IAAgBmC,GAASI,GAATrC,IAAgBiC,GAASI,GAATvC,IAAgBmC,GAASE,GAATnC;YAFtB;AAItC,mBAAOkC,IAAO;UARW;AAhN7B,cAAIzB,IAAUvB,GAAAuB,SACVb,IAAOT,EAAAS;AA6PX,iBARa0C,EACLlD,aAAaA,GACbsC,eAAeA,GACfa,qBAzERA,SAA6BC,IAAalD,GAAO;AAAA,gBACzCG,IAAYH,EAAAI,QAAAJ,MAAAG,WAEL,IAAAH,EAAAS,YAAkB;AAClB,gBAAAT,EAAAW,aAAmB;AACnB,gBAAAL,EAAKH,EAAAU,OAAiB,CAAtB,IAA2BP,EAAKH,EAAAY,cAAwB,CAA7B,IAC1BZ,EAAAU;AASZ,mBANeQ,KAAA8B,KAAU9B,KAAA+B,IAAS5C,IAAmBF,EAAK4C,GAAAG,OACtDH,GAAA1C,CADiD,GACjC,CADK,IAEjBa,KAAA+B,IAAS1C,IAAmBJ,EAAK4C,GAAAI,OACrCJ,GAAAxC,CADgC,GAChB,CADZ,IAEAW,KAAA+B,IAASxC,IAAmBN,EAAK4C,GAAAK,OACrCL,GAAAtC,CADgC,GAChB,CADZ,CAJO0B;UAT8B,GA0EzCI,WAAWA,GACXc,aAbRA,SAAqBb,IAAU3C,GAAOC,GAAgB;AAClD,mBAAOyC,EAAU5C,EAAY6C,IAAU3C,GAAOC,CAA7B,CAAV;UAD2C,EAQzC+C;QAhQyG;MAA1H;AA0QAhE,QAAgBW,GAAU,qCAAqC,CAACA,EAAS,wBAAwBA,EAAS,oCAAoCA,EAAS,oBAAxF,GAA+G,SAAU8D,IAAOC,GAAY7D,GAAG;AAY1M,YAAI8D,IAAQF,GAAAG,OACRC,IAAUhE,EAAAgE;AACVC,QAAAA,KAAQjE,EAAAiE;AAd8L,YAetMC,IAAalE,EAAAkE,YACbzD,IAAOT,EAAAS,MAMP0D,IAAe,EACN,MAAO,EAMhBC,UAAUA,SAAU9E,GAAM;AAAA,cAClB+E,KAAS,MACTC,IAAWD,GAAAC,UACXC,IAAQD,EAASD,GAAAG,WAAkB,QAAQlF,CAAnC,GACRmF,KAAWF,EAAAE;AAEfJ,UAAAA,GAAAK,MAAAC,QAAqB,SAAUC,GAAM;AACjC,gBAAIC,KAAU,EACN,SAAS,mBAAmBD,GAC5BE,QAAQL,GAASG,MAAS,EAFpB;AAIVN,cAAAS,eACa,UAATH,IACAC,GAAAG,SAAiB,8BAEH,WAATJ,MACLC,GAAAG,SAAiB;AAGzBX,YAAAA,GAAOO,KAAQN,EAAAjF,KAAckF,EAAMK,EAApB,EAAAK,KACLJ,EADK,EAAAK,IAENb,EAFM;UAbkB,CAArC;AAiBAA,UAAAA,GAAAY,KAAY,EACR,mBAAmB,SACnBH,QAAQL,GAAAU,MAFA,CAAZ;AAKAd,UAAAA,GAAAe,kBAAyBf,GAAAgB;AACzBhB,UAAAA,GAAAgB,UAAiBhB,GAAAiB;AAEjBjB,UAAAA,GAAAkB,cAAqBhB,EAAAgB;QA/BC,GAqC1BC,sBAAsBA,SAAUC,IAAMC,IAAKC,GAAQC,GAAMC,GAAUC,GAAU;AAAA,cAErEC,IAAU,CAAA;AACVC,cAAiB,CAAC,MAClB,MAAOJ,KAAQ,QACfC,GACAC,CAHiB;AAFrB,cAMIG,IAAcN,KAAUA,EAAAlB;AACvBkB,eAOGM,KAAeA,EAAAd,SACf,KAAAF,KAAU,EACNH,QAAQmB,EAAAd,MADF,CAAV,GAIJjB,EAAWyB,GAAQ,SAAUO,IAAStB,IAAM;AACxCmB,cAAQnB,MAAQ,CAAA;AAChBmB,cAAQnB,IAAMa,MAAQS;AAElBD,kBACAF,EAAQnB,IAARE,SAAuBa,EAAAlB,SAAgBG,OAAS;UALZ,CAA5C,GAQAoB,EAAe,KAAKD,MAnBpBA,EAAQN,MAAQC,IAChBM,EAAe,KAAKD;AAoBxB,iBA7Ba1B,KA6BN8B,aAAA1G,MA7BM4E,MA6B4B2B,CAAlC;QA9BkE,GAoC7EG,cAAcA,SAAUC,IAAOC,IAAYT,GAAMC,GAAUC,GAAU;AACjE,cAAIzB,IAAS;AACbA,YAAAK,MAAAC,QAAqB,SAAUC,GAAM;AAE7ByB,YAAAA,OACAD,KAAQ3F,EAAK4F,GAAWzB,IAAO,KAAvB;AAGZ,gBAAc,UAAVwB;AACA/B,gBAAOO,GAAMgB,GAAMQ,IAAOP,GAAUC,CAApC;UAP6B,CAArC;AAUA,iBAAOzB;QAZ0D,GAkBrEiB,cAAcA,WAAY;AACtB,eAAAa,aAAkB,MAAM,MAAM,SAA9B;AACA,iBAAO,KAAAf,gBAAA;QAFe,EAjGV,EADD;AAwGnBjB,UAAAmC,SAAsBrC,GAAME,EAAAoC,MAAmB,EAC3C7B,OAAO,CAAC,SAAS,OAAO,MAAjB,GACPF,UAAU,UACVS,MAAMA,SAAU3F,IAAMoG,GAAKI,GAAUU,GAAmB;AAEpD,cAAoB,aAAhB,OAAOlH,MAAoC,gBAAf,OAAOoG,GAAqB;AACxD,gBAAIe,IAAMnH;AACVA,YAAAA,KAAO,CAAA;AACPA,YAAAA,GAAKmH,KAAOf;UAH4C;AAK5D,iBAAIpG,GAAAoH,aAAkB1C,EAAQ1E,GAAAqB,CAAR,IACX,KAAA6E,qBAA0B,KAAK,MAAM,KAAAlB,SAAc,KAAAE,WAAgB,QAAQlF,GAAAoH,aAAkBpH,EAAxD,CAArC,IAEJuE,EAAA8C,UAAA1B,KAAA2B,KAA+B,MAAMtH,IAAM,QAAQwG,GAAUU,CAA7D;QAV6C,GAYxDK,SAASA,SAAUvH,IAAMuG,GAAUC,GAAU;AACzC,cAAI9B,EAAQ1E,GAAAqB,CAAR,KAAmBqD,EAAQ1E,GAAAuB,CAAR,GAAiB;AAChC0D,YAAAA,KAAQ,KAAAD,SAAc,KAAAE,WAAgB,QAAQlF,EAAtC;AAAZ,gBACIiG,IAAchB,GAAAgB;AAClB,iBAAAC,qBAA0B,KAAK,MAAMjB,IAAO,WAAWsB,GAAUC,CAAjE;AACA,iBAAAb,KAAU,EACNH,QAAQP,GAAAE,SAAAU,MADF,CAAV;AAIII,kBAAgB,KAAAA,gBAChB,KAAAA,cAAmBA,GACd,KAAAjB,SAAAS,cACDZ,EAAAmC,OAAAQ,WAAAF,KAAoC,MAAM,KAAAG,IAA1C;UAX4B;AAgBpClD,cAAA8C,UAAAE,QAAAD,KAAkC,MAAMtH,IAAMuG,GAAUC,CAAxD;AAEJ,iBAAO;QAnBkC,GAqB7CgB,YAAYA,SAAUC,IAAM;AACX1C,eACbkB,cADalB,KACQkB,eAAsB,CAAA;AAD9BlB,eAEbmB,qBAA4B,QAAQ,MAAM,EACtCwB,OAAOD,IAEPE,KAAKnD,EAAMiD,EAAN,EAAAG,SAA0D,KALtD7C,KAKiBkB,YAAA4B,QAA2B,KAA3B,IAAyC,IAAI,GAAlE,EAAAC,IAAA,GACLC,MAAMvD,EAAMiD,EAAN,EAAAG,SAA2D,KANxD7C,KAMkBkB,YAAA4B,QAA2B,MAA3B,IAA0C,IAAI,IAAnE,EAAAC,IAAA,EAJgC,CAA1C;AAFa/C,eASbP,QATaO,KASE0C,OAAcA;AAC7B,iBAVa1C;QADW,EApCe,CAAzB;AAwDtB,eAAOF;MAtLmM,CAA9M;AAwLAhF,QAAgBW,GAAU,sCAAsC;QAACA,EAAS;QAAyCA,EAAS;QAAwBA,EAAS;QAAoBA,EAAS;QAAmBA,EAAS;QAAoCA,EAAS;QAAsCA,EAAS;QAAqCA,EAAS;MAAhS,GAAuT,SAAUwH,IAAG1D,GAAO7D,GAAGoD,GAAQU,GAAYM,GAAcoD,GAAavH,GAAG;AAY5b,YAAIwH,IAAa,QAAQ,KAAAA,aAAoB,WAAY;AACjD,cAAIC,KAAgBA,SAAUC,GAClCzF,IAAG;AACKwF,YAAAA,KAAgBE,OAAAC,kBACX,EAAEC,WAAW,CAAA,EAAb,aAA6BC,SAAS,SAAUJ,IAC7DzF,GAAG;AAAEyF,cAAAA,GAAAG,YAAc5F;YAAhB,KACS,SAAUyF,IACtBzF,GAAG;AAAE,uBAAS8F,KAAK9F;AAAOA,kBAAAzC,eAAiBuI,CAAjB,MAAqBL,GAAEK,KAAK9F,EAAE8F;YAArD;AACC,mBAAON,GAAcC,GAAGzF,EAAjB;UANR;AAQH,iBAAO,SAAUyF,GAAGzF,IAAG;AAEnB+F,qBAASA,KAAK;AAAE,mBAAAC,cAAmBP;YAArB;AADdD,YAAAA,GAAcC,GAAGzF,EAAjB;AAEAyF,cAAAf,YAAoB,SAAN1E,KAAa0F,OAAAO,OAAcjG,EAAd,KAAoB+F,GAAArB,YAAe1E,GAAA0E,WAAa,IAAIqB;UAH5D;QAV8B,EAAb,GAgBxCG,IAAab,GAAAa,YACbrE,IAAQF,EAAAG,OACRqE,IAASrI,EAAAqI,QACT9G,IAAUvB,EAAAuB,SACVrB,IAAckD,EAAAlD,aACd4C,IAAYM,EAAAN,WACZmB,IAAUhE,EAAAgE,SACVqE,IAASrI,EAAAqI,QACTpE,IAAQjE,EAAAiE,OACRxD,IAAOT,EAAAS,MAMPgB,IAAMD,KAAAC,KACNC,IAAMF,KAAAE,KACN4G,IAAK9G,KAAA8G,IACLC,IAAW,KAAK/G,KAAA8B,KAAU,CAAV,IAAe,KAAK,KAAMgF,IAAK;AAo3BnD,eAx2BmC,SAAUE,IAAQ;AAEjDC,mBAASA,IAAgB;AACrB,mBAAkB,SAAXD,MAAmBA,GAAA/I,MAAa,MAAMiJ,SAAnB,KAAiC;UADtC;AADrBlB,YAAUiB,GAAeD,EAAzB;AAUJC,YAAAE,UAAwBC,SAAUC,IAAkB;AAC5CC,YAAAA,KAAmBD,GAAAlC;AAAvB,gBACIoC,KAAqBN,EAAA9B;AACzBmC,YAAAA,GAAAE,aAA8B7E;AAC9B2E,YAAAA,GAAAG,QAAyBF,GAAAE;AACzBH,YAAAA,GAAAI,YAA6BH,GAAAG;AAC7BJ,YAAAA,GAAAxC,SAA0ByC,GAAAzC;AAC1BwC,YAAAA,GAAAK,aAA8BJ,GAAAI;AAC9BL,YAAAA,GAAAM,YAA6BL,GAAAK;AAC7BN,YAAAA,GAAAO,SAA0BN,GAAAM;AAC1BP,YAAAA,GAAAQ,aAA8BP,GAAAO;AAC9BR,YAAAA,GAAAS,aAA8BR,GAAAQ;AAC9BT,YAAAA,GAAAU,iBAAkCT,GAAAS;UAZc;AAmBpDf,YAAAgB,UAAwBC,SAAUC,IAAIC,IAAIC,GAAIC,GAAIC,GAAOC,GAAKC,GAAIC,GAAI;AAAA,gBAC9DC,KAAS,CAAA,GACTC,KAAWJ,IAAMD;AACrB,mBAAKC,IAAMD,KAAWC,IAAMD,IAAQvI,KAAA8G,KAAU,IAAI,QAC9C6B,KAASA,GAAAE,OAAc,KAAAZ,QAAaE,IAAIC,IAAIC,GAAIC,GAAIC,GAAOA,IAASvI,KAAA8G,KAAU,GAAI2B,GAAIC,CAA/D,CAAd,GACTC,KAASA,GAAAE,OAAc,KAAAZ,QAAaE,IAAIC,IAAIC,GAAIC,GAAIC,IAASvI,KAAA8G,KAAU,GAAI0B,GAAKC,GAAIC,CAA7D,CAAd,KAGRF,IAAMD,KAAWA,IAAQC,IAAMxI,KAAA8G,KAAU,IAAI,QAC9C6B,KAASA,GAAAE,OAAc,KAAAZ,QAAaE,IAAIC,IAAIC,GAAIC,GAAIC,GAAOA,IAASvI,KAAA8G,KAAU,GAAI2B,GAAIC,CAA/D,CAAd,GACTC,KAASA,GAAAE,OAAc,KAAAZ,QAAaE,IAAIC,IAAIC,GAAIC,GAAIC,IAASvI,KAAA8G,KAAU,GAAI0B,GAAKC,GAAIC,CAA7D,CAAd,KAGN,CAAC,CACA,KACAP,KAAME,IAAKrI,KAAAC,IAASsI,CAAT,IACLF,IAAKtB,IAAU6B,KAAY5I,KAAAE,IAASqI,CAAT,IAAmBE,GACpDL,KAAME,IAAKtI,KAAAE,IAASqI,CAAT,IACLD,IAAKvB,IAAU6B,KAAY5I,KAAAC,IAASsI,CAAT,IAAmBG,GACpDP,KAAME,IAAKrI,KAAAC,IAASuI,CAAT,IACLH,IAAKtB,IAAU6B,KAAY5I,KAAAE,IAASsI,CAAT,IAAiBC,GAClDL,KAAME,IAAKtI,KAAAE,IAASsI,CAAT,IACLF,IAAKvB,IAAU6B,KAAY5I,KAAAC,IAASuI,CAAT,IAAiBE,GAClDP,KAAME,IAAKrI,KAAAC,IAASuI,CAAT,IAAiBC,GAC5BL,KAAME,IAAKtI,KAAAE,IAASsI,CAAT,IAAiBE,CAX5B,CAAD;UAb2D;AAiCtEzB,YAAA9B,UAAA4C,aAAqCe,SAAUpK,IAAQqK,IAAQ;AAC3D,gBAAIJ,IAAS,CAAA;AAEbjK,YAAAA,GAAAyE,QAAe,SAAU7C,IAAO;AAC5BqI,gBAAAK,KAAY;gBAAC;gBAAK1I,GAAAnB;gBAASmB,GAAAjB;cAAf,CAAZ;YAD4B,CAAhC;AAGIX,YAAAA,GAAA+C,WAEAkH,EAAO,GAAG,KAAK,KAEXI,MACAJ,EAAAK,KAAY,CAAC,GAAD,CAAZ;AAGR,mBAAOL;UAdoD;AAiB/D1B,YAAA9B,UAAA6C,iBAAyCiB,SAAUvK,IAAQ;AAAA,gBACnDiK,KAAS,CAAA,GACTO,IAAI;AACRxK,YAAAA,GAAAyE,QAAe,SAAU7C,IAAO;AAC5BqI,cAAAA,GAAAK,KAAYE,IAAI,CAAC,KAAK5I,GAAAnB,GAASmB,GAAAjB,CAAf,IAA0B,CAAC,KAAKiB,GAAAnB,GAASmB,GAAAjB,CAAf,CAA1C;AACA6J,kBAAI,CAACA;YAFuB,CAAhC;AAIA,mBAAOP;UAPgD;AAe3D1B,YAAA9B,UAAA0C,SAAiCsB,SAAUrL,IAAM;AAAA,gBACzCgF,KAAW,MACXsG,IAAM,KAAAC,cAAmB,MAAnB;AACVD,cAAA9H,WAAe,CAAA;AACf8H,cAAAxK,iBAAqB;AACrBwK,cAAAE,UAAc;AAEdF,cAAA3F,OAAW8F,SAAUC,IAAM;AACvB,kBAAoB,aAAhB,OAAOA,OACNhH,EAAQgH,GAAAF,OAAR,KACG9G,EAAQgH,GAAAlI,QAAR,KACAkB,EAAQgH,GAAA5K,cAAR,IAA+B;AACnC,qBAAA0K,UAAerK,EAAKuK,GAAAF,SAAc,KAAAA,OAAnB;AACf,qBAAAhI,WAAgBrC,EAAKuK,GAAAlI,UAAe,KAAAA,QAApB;AAChB,qBAAA1C,iBAAsBK,EAAKuK,GAAA5K,gBAAqB,KAAAA,cAA1B;AACtB,uBAAO4K,GAAAF;AACP,uBAAOE,GAAAlI;AACP,uBAAOkI,GAAA5K;AAN4B,oBAQ/B6K,IAAahL,EAAY,KAAA6C,UADjBsF,EAAO9D,GAAA4G,aAGf,KAAA9K,cAFa,GAGbf,IAAOiF,GAAAiF,WAAoB0B,GAC3B,IADO;AAEPlI,oBAAOF,EAAUoI,CAAV;AACXD,gBAAAA,GAAAtD,IAASrI;AACT2L,gBAAAA,GAAAG,aAAmB,KAAAL,WAAuB,IAAP/H,IAC/B,YAAY;cAhBmB;AAkBvC,qBAAOc,EAAA8C,UAAA1B,KAAAxF,MAAgC,MAAMiJ,SAAtC;YAtBgB;AAwB3BkC,cAAA/D,UAAcuE,SAAUC,IAAQ;AAC5B,kBAAsB,aAAlB,OAAOA,OACNrH,EAAQqH,GAAAP,OAAR,KACG9G,EAAQqH,GAAAvI,QAAR,KACAkB,EAAQqH,GAAAjL,cAAR,IAAiC;AACrC,qBAAA0K,UAAerK,EAAK4K,GAAAP,SAAgB,KAAAA,OAArB;AACf,qBAAAhI,WAAgBrC,EAAK4K,GAAAvI,UAAiB,KAAAA,QAAtB;AAChB,qBAAA1C,iBAAsBK;kBAAK4K,GAAAjL;kBAAuB,KAAAA;gBAA5B;AACtB,uBAAOiL,GAAAP;AACP,uBAAOO,GAAAvI;AACP,uBAAOuI,GAAAjL;AAN8B,oBAQjC6K,IAAahL,EAAY,KAAA6C,UADjBsF,EAAO9D,GAAA4G,aAGf,KAAA9K,cAFa,GAGbf,IAAOiF,GAAAiF,WAAoB0B,GAC3B,IADO;AAEPlI,oBAAOF,EAAUoI,CAAV;AACPE,oBAAc,KAAAL,WAAuB,IAAP/H,IAC1B,YAAY;AACpBsI,gBAAAA,GAAA3D,IAAWrI;AACX,qBAAA4F,KAAU,cAAckG,CAAxB;cAjBqC;AAmBzC,qBAAOtH,EAAA8C,UAAAE,QAAApH,MAAmC,MAAMiJ,SAAzC;YAvBqB;AA0BhC,mBAAOkC,EAAA3F,KAAS3F,EAAT;UAzDsC;AAiEjDmJ,YAAA9B,UAAA2C,aAAqCgC,SAAUhM,IAAM;AAAA,gBAC7CgF,KAAW,MACX6F,IAAS,KAAAoB,EAAA,GACTlG,KAAU8E,EAAA9E;AACT,iBAAAN,cACDoF,EAAAlF,KAAY,EACR,mBAAmB,QADX,CAAZ;AAIJkF,cAAAqB,QAAe,CAAA;AAGfrB,cAAA9E,UAAiBoG,WAAY;AACzB,uBAASzI,IAAI,GAAGA,IAAImH,EAAAqB,MAAAvI,QAAqBD;AACrCmH,kBAAAqB,MAAaxI,GAAbqC,QAAA;qBAEGA,GAAAuB,KAAa,IAAb;YAJkB;AAM7BuD,cAAAlF,OAAcyG,SAAUV,GAAMtF,GAAKI,IAAUU,IAAmB;AAC5D,kBAAoB,aAAhB,OAAOwE,KAAqBhH,EAAQgH,EAAAQ,KAAR,GAAqB;AACjD,uBAAOrB,EAAAqB,MAAAvI,SAAsB+H,EAAAQ,MAAAvI;AACzBkH,oBAAAqB,MAAAG,IAAA,EAAAtG,QAAA;AAEJ,uBAAO8E,EAAAqB,MAAAvI,SAAsB+H,EAAAQ,MAAAvI;AACzBkH,oBAAAqB,MAAAhB,KAAkBlG,GAAA+E,OAAA,EAAAnE,IAAsBiF,CAAtB,CAAlB;AAEJ,yBAASnH,IAAI,GAAGA,IAAIgI,EAAAQ,MAAAvI,QAAmBD;AAC/BsB,kBAAAA,GAAAS,cACA,OAAOiG,EAAAQ,MAAWxI,GAAX+D,MAEXoD,EAAAqB,MAAaxI,GAAbiC,KAAqB+F,EAAAQ,MAAWxI,IAAI,MAAM8C,IAAUU,EAApD;AAEJ,uBAAOwE,EAAAQ;cAb0C;AAerD,qBAAO3H,EAAA8C,UAAA1B,KAAAxF,MAAgC,MAAMiJ,SAAtC;YAhBqD;AAkBhEyB,cAAAtD,UAAiB+E,SAAUP,GAAQxF,GAAUC,IAAU;AACnD,kBAAIuF,KAAUA,EAAAG,OAAc;AACxB,uBAAOrB,EAAAqB,MAAAvI,SAAsBoI,EAAAG,MAAAvI;AACzBkH,oBAAAqB,MAAAG,IAAA,EAAAtG,QAAA;AAEJ,uBAAO8E,EAAAqB,MAAAvI,SAAsBoI,EAAAG,MAAAvI;AACzBkH,oBAAAqB,MAAAhB,KAAkBlG,GAAA+E,OAAA,EAAAnE,IAAsBiF,CAAtB,CAAlB;yBAEKnH,IAAI,GAAGA,IAAIqI,EAAAG,MAAAvI,QAAqBD;AACrCmH,oBAAAqB,MAAaxI,GAAb6D,QAAwBwE,EAAAG,MAAaxI,IAAI6C,GAAUC,EAAnD;AAEJ,uBAAOuF,EAAAG;cAViB;AAY5B,qBAAO3H,EAAA8C,UAAAE,QAAApH,MAAmC,MAAMiJ,SAAzC;YAb4C;AAgBvD,mBAAOyB,EAAAlF,KAAY3F,EAAZ;UApD0C;AA2DrDmJ,YAAA9B,UAAAyC,YAAoCyC,SAAUC,IAAMpF,IAAW;AAE3D,gBAAIkE,IAAM,KAAAW,EAAA;AAEVlD,cAAOuC,GAAK,KAAA5B,WAAgB8C,GAA5B;AAEAlB,cAAAxG,SAAasC,EAAb;AAEA,mBAAOkE;UARoD;AAc/DnC,YAAA9B,UAAAL,SAAiCyF,SAAUrF,IAAW;AAClD,mBAAO,KAAA0C,UAAe,UAAU1C,EAAzB;UAD2C;AAOtD+B,YAAA9B,UAAAwC,aAAqC6C,SAAUtF,IAAW;AA4EtDuF,qBAASA,GAAYjJ,IAAG;AAIpB,qBAAU,MAANkJ,KAAe,IAAJlJ,MAAa,IAAJA,KACb,EACHrC,GAAGwL,EAAKnJ,IAALrC,GAIHE,GAAGsL,EAAKnJ,IAALnC,IAAY,IACfE,GAAGoL,EAAKnJ,IAALjC,EANA,IAYPoL,EAAK,GAALxL,MAAcwL,EAAK,GAALxL,KAAkB,KAALqC,KACpB,EACHrC,GAAGwL,EAAKnJ,IAALrC,IAAY,IAIfE,GAAGsL,EAAKnJ,IAALnC,GACHE,GAAGoL,EAAKnJ,IAALjC,EANA,IAUD,MAAN2G,MAAe,IAAJ1E,MAAa,IAAJA,KACb;gBACHrC,GAAGwL,EAAKnJ,IAALrC;gBAIHE,GAAGsL,EAAKnJ,IAALnC;gBACHE,GAAGoL,EAAKnJ,IAALjC,IAAY;cANZ,IASJoL,EAAKnJ;YAtCQ;AA4CxBoJ,qBAASA,EAAQpJ,IAAG;AAChB,qBAAOmJ,EAAKnJ;YADI;AAxHkC,gBAClDrC,IAAI+F,GAAA/F,KAAe,GACnBE,IAAI6F,GAAA7F,KAAe,GACnBE,IAAI2F,GAAA3F,KAAe,GAInBmL,IAAIxF,GAAA2F,UAAoB,GACxBC,IAAI5F,GAAA6F,SAAmB,GACvB7E,KAAIhB,GAAA1F,SAAmB,GACvBb,KAAQiI,EAAO,KAAA8C,aAef3J,KADYpB,GAAAI,QAAAJ,MAAAG,UACJiB,OAQRuD,KAAS,GAETqH,IAAO,CAAC,EACAxL,GAAGA,GACHE,GAAGA,GACHE,GAAGA,EAHH,GAID,EACCJ,GAAGA,IAAI2L,GACPzL,GAAGA,GACHE,GAAGA,EAHJ,GAIA,EACCJ,GAAGA,IAAI2L,GACPzL,GAAGA,IAAIqL,GACPnL,GAAGA,EAHJ,GAIA,EACCJ,GAAGA,GACHE,GAAGA,IAAIqL,GACPnL,GAAGA,EAHJ,GAIA,EACCJ,GAAGA,GACHE,GAAGA,IAAIqL,GACPnL,GAAGA,IAAI2G,GAHR,GAIA,EACC/G,GAAGA,IAAI2L,GACPzL,GAAGA,IAAIqL,GACPnL,GAAGA,IAAI2G,GAHR,GAIA,EACC/G,GAAGA,IAAI2L,GACPzL,GAAGA,GACHE,GAAGA,IAAI2G,GAHR,GAIA,EACC/G,GAAGA,GACHE,GAAGA,GACHE,GAAGA,IAAI2G,GAHR,CA5BA,GAiCPnC,KAAc,CAAA;AAGlB4G,gBAAOlM,EAAYkM,GAAMhM,IAAOuG,GAAAtG,cAAzB;AA6DP,gBAAAoM,IAAYA,SAAUC,IAAgBC,IAAgBrF,IAAM;AAAA,kBACpDuD,KAAM,CAAC,CAAA,GAAI,EAAL,GAEN+B,KAAQF,GAAA5K,IAAmBuK,CAAnB,GACRQ,KAAQF,GAAA7K,IAAmBuK,CAAnB;AAKRS,cAAAA,KAAaJ,GAAA5K,IAAmBoK,EAAnB;AACba,cAAAA,KAAaJ,GAAA7K,IAAmBoK,EAAnB;AACM,kBAAnBpJ,EAAU8J,EAAV,IACA/B,KAAM,CAAC+B,IAAO,CAAR,IAEkB,IAAnB9J,EAAU+J,EAAV,IACLhC,KAAM,CAACgC,IAAO,CAAR,IAEDvF,OACL9B,GAAAiF,KAAiBnD,EAAjB,GAEIuD,KADwB,IAAxB/H,EAAUgK,EAAV,IACM,CAACF,IAAO,CAAR,IAEuB,IAAxB9J,EAAUiK,EAAV,IACC,CAACF,IAAO,CAAR,IAGA,CAACD,IAAO,CAAR;qBAGP/B;YA7BiD;AAkC5D,gBAAAmC,KAAQP,EAFAxF,CAAC,GAAG,GAAG,GAAG,CAAVA,GACDgG,CAAC,GAAG,GAAG,GAAG,CAAVA,GACwB,OAAvB;AACRC,YAAAA,KAAQF,GAAM;AACd,gBAAAG,IAAUH,GAAM;AAIhBA,YAAAA,KAAQP,EAFFvF,CAAC,GAAG,GAAG,GAAG,CAAVA,GACGkG,CAAC,GAAG,GAAG,GAAG,CAAVA,GACsB,KAAvB;AACRC,gBAAQL,GAAM;AACd,gBAAAM,KAAQN,GAAM;AAIdA,YAAAA,KAAQP,EAFAc,CAAC,GAAG,GAAG,GAAG,CAAVA,GACDC,CAAC,GAAG,GAAG,GAAG,CAAVA,GACwB,MAAvB;AACRC,gBAAQT,GAAM;AACdU,YAAAA,KAAUV,GAAM;AASA,kBAAZU,KAGA3I,MApKa4I,OAoKWvN,GAAAS,YAAkBD,KAEpC8M,OACN3I,MAvKa4I,MAuKU/M;AAE3BmE,YAAAA,MAtKiB6I,MAsKO,CAACN,MAEX,KAAT9L,MAAuB,OAATA,MAAwB,MAARA,MAAuB,QAARA,KAC9CpB,GAAAW,aAAmBD,IAAI,KAAKA;AAChB,kBAAZqM,IACApI,MA1Ka8I,MA0KW7M,IAElBmM,MACNpI,MA7Ka8I,OA6KW,MAAO7M;AAEnC,mBAAO,EACHiG,OAAO,KAAAuC,WAAgB0D,IAAO,IAAvB,GACPhG,KAAK,KAAAsC,WAAgB6D,GAAO,IAAvB,GACL/F,MAAM,KAAAkC,WAAgBiE,GAAO,IAAvB,GACN/I,UAAU,EACNU,OAAO3D,KAAAqM,MAAW/I,EAAX,EADD,GAGVS,aAAaA,IAEb2H,SAASA,GACTG,OAAOA,GAVJ;UA/M+C;AA6N1D5E,YAAA9B,UAAAsC,QAAgC6E,SAAUjJ,IAAS;AAO/CkJ,qBAASA,GAAc1C,IAAQ;AAAA,kBACvB2C,KAAQ,OACRC,IAAK,CAAA,GACLxH;AACJ4E,cAAAA,KAASpH,EAAMoH,EAAN;AACT,mBAAK5E,MAAO4E;AAC2B,uBAA/B6C,EAAA/G,QAAsBV,EAAtB,MACAwH,EAAGxH,MAAO4E,GAAO5E,KACjB,OAAO4E,GAAO5E,KACduH,KAAQ;AAGhB,qBAAOA,KAAQ,CAACC,GAAI5C,EAAL,IAAe;YAZH;AAPgB,gBAC3C8C,IAAU,KAAA5C,EAAA,GAAUjH,KAAW6J,EAAA7J,UAAkB4J,IAAgB,+BAAA,MAAA,GAAA;AAoBrErJ,YAAAA,KAAUZ,EAAMY,EAAN;AACVA,YAAAA,GAAAtD,SAAiBsD,GAAAtD,SAAiB,KAAKD;AACvCuD,YAAAA,GAAAxD,QAAgBwD,GAAAxD,QAAgB,KAAKC;AAErC6M,cAAAlH,MAAc3C,GAAAjF,KAAA;AACd8O,cAAAC,QAAgB9J,GAAAjF,KAAA;AAChB8O,cAAAE,QAAgB/J,GAAAjF,KAAA;AAChB8O,cAAAG,MAAchK,GAAAjF,KAAA;AACd8O,cAAAI,MAAcjK,GAAAjF,KAAA;AAGd8O,cAAAK,QAAgBC,WAAY;AAAA,kBACpBC,KAASP,EAAAQ,aACTC,KAAYT,EAAAlJ,KAAa,OAAb;AAChBkJ,gBAAAlH,IAAA/B,IAAgBiJ,CAAhB;AAGA,eAAC,OAAO,OAAO,SAAS,OAAxB,EAAAxJ,QAAyC,SAAUkK,GAAM;AACrDV,kBAAQU,GAAR5J,KACU,EACN,SAAS2J,KAAY,sBADf,CADV,EAAA1J,IAISwJ,EAJT;cADqD,CAAzD;YANwB;AAe5B,aAAC,YAAY,aAAb,EAAA/J,QAAoC,SAAUpF,IAAI;AAC9C4O,gBAAQ5O,MAAM,WAAY;AACtB,oBAAID,KAAOoJ;AACX,iBAAC,OAAO,OAAO,OAAO,SAAS,OAA/B,EAAA/D,QAAgD,SAAUkK,GAAM;AAC5DV,oBAAQU,GAAMtP,IAAdE,MAAwB0O,EAAQU,IAAOvP,EAAvC;gBAD4D,CAAhE;cAFsB;YADoB,CAAlD;AAYA6O,cAAAW,WAAmBC,SAAUlK,IAAS;AAAA,kBAC9BN,KAAQ4J,EAAA7J,SAAA4E,UAA2BrE,EAA3B,GACRC,IAAsB,MAAbP,GAAAyK;AACbb,gBAAAtJ,UAAkBA;AAClBsJ,gBAAAlH,IAAAhC,KAAiB,EAAEyC,GAAGnD,GAAA0C,KAAWnC,QAAQP,GAAAyK,KAAxB,CAAjB;AACAb,gBAAAG,IAAArJ,KAAiB,EAAEyC,GAAGnD,GAAA+J,KAAWxJ,QAAQP,GAAA0K,KAAxB,CAAjB;AACAd,gBAAAI,IAAAtJ,KAAiB,EAAEyC,GAAGnD,GAAAgK,KAAWzJ,QAAQP,GAAA2K,KAAxB,CAAjB;AACAf,gBAAAC,MAAAnJ,KAAmB,EAAEyC,GAAGnD,GAAA6J,OAAatJ,QAAQP,GAAA4K,OAA1B,CAAnB;AACAhB,gBAAAE,MAAApJ,KAAmB,EAAEyC,GAAGnD,GAAA8J,OAAavJ,QAAQP,GAAA6K,OAA1B,CAAnB;AAEAjB,gBAAArJ,SAAiBA;AACjBqJ,gBAAAlJ,KAAa,EAAEH,QAAQA,EAAV,CAAb;AAEID,cAAAA,GAAAwK,WACAlB,EAAAlH,IAAAqI,mBAA+BzK,GAAAwK,MAA/B,GACA,OAAOxK,GAAAwK;YAfuB;AAkBtClB,cAAAW,SAAiBjK,EAAjB;AAKAsJ,cAAArH,aAAqByI,SAAUC,IAAO;AAClC,kBAAIC,KAAS3L,EAAM0L,EAAN,EAAAtI,SAAsB,IAAtB,EAAAE,IAAA;AACb,mBAAAL,OAAYyI;AACZ,mBAAApB,MAAAnJ,KAAgB,EAAE8B,MAAM0I,GAAR,CAAhB;AACA,mBAAApB,MAAApJ,KAAgB,EAAE8B,MAAM0I,GAAR,CAAhB;AACA,mBAAAnB,IAAArJ,KAAc,EAAE8B,MAAM0I,GAAR,CAAd;AACA,mBAAAlB,IAAAtJ,KAAc,EAAE8B,MAAM0I,GAAR,CAAd;AACA,mBAAAxI,IAAAhC,KAAc,EAAE8B,MAAMyI,GAAR,CAAd;AACA,qBAAO;YAR2B;AAYtC,aAAC,WAAW,cAAc,cAAc,YAAxC,EAAA7K,QAA8D,SAAU+K,IAAQ;AAC5EvB,gBAAQuB,KAAS,YAAY,SAAUF,IAAO/I,IAAK;AAC/C0H,kBAAQ1H,MAAO+I;AACf,iBAAC,OAAO,OAAO,SAAS,SAAS,KAAjC,EAAA7K,QAAgD,SAAUgL,GAAI;AAC1DxB,oBAAQwB,GAAR1K,KAAiBwB,IAAK+I,EAAtB;gBAD0D,CAA9D;cAF+C;YADyB,CAAhF;AAUArB,cAAAlJ,OAAe2K,SAAUvE,IAAQ;AAAA,kBAEzBwE;AACJ,kBAAsB,aAAlB,OAAOxE,OACPwE,KAAW9B,GAAc1C,EAAd,IACG;AACV,oBAAA4C,IAAK4B,GAAS;AACdnH,0BAAU,KAAKmH,GAAS;AACxBxH,kBAAO8F,EAAAtJ,SAAiBoJ,CAAxB;AACAE,kBAAAW,SAAiBX,EAAAtJ,OAAjB;cAJU;AAOlB,qBAAOhB,EAAA8C,UAAA1B,KAAAxF;gBAAgC0O;gBAASzF;cAAzC;YAZsB;AAiBjCyF,cAAAtH,UAAkBiJ,SAAUzE,IAAQ0E,IAAWjK,IAAU;AAAA,kBAEjDkK,IAAO,KAAAnL,SAGPoL,IAAc,UAAUzO,KAAA0O,OAAA,EAAAC,SAAuB,EAAvB,EAAAC,UAAqC,GAAG,CAAxC;AAG5B,qBAAO/E,GAAAgE;AACP,qBAAOhE,GAAAtK;AACP,qBAAOsK,GAAA9J;AACP,qBAAO8J,GAAAhK;AACP,kBAAAgP,IAAOlI,EAAW1H,EAAKsP,IAAW,KAAAzL,SAAAgM,eAAhB,CAAX;AACP,kBAAID,EAAAxK,UAAe;AACfgK,gBAAAA,KAAW9B,GAAc1C,EAAd;AAGX8C,kBAAQ8B,KAAc;AACtB5E,gBAAAA,GAAO4E,KAAc;AACrB9B,kBAAQ8B,IAAa,YAAYlQ,EAAAwQ;AACjC,oBAAIV,IAAU;AACV,sBAAAW,IAAKX,GAAS;AACdQ,oBAAAI,OAAYC,SAAUC,IAAGC,IAAI;AAIzBC,6BAASA,GAAYpK,IAAK;AACtB,6BAAOuJ,EAAKvJ,OAAQhG,EAAK+P,EAAG/J,KAAMuJ,EAAKvJ,GAAnB,IAChBuJ,EAAKvJ,OAAQmK,GAAAE;oBAFK;AAItBF,oBAAAA,GAAAnL,SAAYwK,KACZW,GAAAG,KAAAjC,SAAiB7K,EAAM+L,GAAM,EACzBrP,GAAGkQ,GAAY,GAAZ,GACHhQ,GAAGgQ,GAAY,GAAZ,GACHG,GAAGH,GAAY,GAAZ,GACHI,QAAQJ,GAAY,QAAZ,GACR9G,OAAO8G,GAAY,OAAZ,GACP7G,KAAK6G,GAAY,KAAZ,GACL7P,OAAO6P,GAAY,OAAZ,EAPkB,CAAZ,CAAjB;kBATqB;gBAFnB;AAuBdd,gBAAAA,KAAYM;cA9BG;AAgCnB,qBAAOxM,EAAA8C,UAAAE,QAAAD;gBAAkC;gBAAMyE;gBAAQ0E;gBAAWjK;cAA3D;YA7C8C;AAgDzDqI,cAAA9I,UAAkB6L,WAAY;AAC1B,mBAAAjK,IAAA5B,QAAA;AACA,mBAAAkJ,IAAAlJ,QAAA;AACA,mBAAAiJ,IAAAjJ,QAAA;AACA,mBAAA+I,MAAA/I,QAAA;AACA,mBAAAgJ,MAAAhJ,QAAA;AACA,qBAAOxB,EAAA8C,UAAAtB,QAAAuB,KAAkC,IAAlC;YANmB;AAS9BuH,cAAAgD,OAAeC,WAAY;AACvB,mBAAAnK,IAAAkK,KAAA;AACA,mBAAA5C,IAAA4C,KAAA;AACA,mBAAA7C,IAAA6C,KAAA;AACA,mBAAA/C,MAAA+C,KAAA;AACA,mBAAA9C,MAAA8C,KAAA;YALuB;AAO3BhD,cAAAkD,OAAeC,SAAUC,IAAS;AAC9B,mBAAAtK,IAAAoK,KAAcE,EAAd;AACA,mBAAAhD,IAAA8C,KAAcE,EAAd;AACA,mBAAAjD,IAAA+C,KAAcE,EAAd;AACA,mBAAAnD,MAAAiD,KAAgBE,EAAhB;AACA,mBAAAlD,MAAAgD,KAAgBE,EAAhB;YAL8B;AAQlC,mBAAOpD;UAjMwC;AAuMnD1F,YAAA9B,UAAAuC,YAAoCsI,SAAU9K,IAAW;AA8KrD+K,qBAASA,GAAcC,IAAO;AAClBA,cAAAA,MAAS,IAAIlQ,KAAA8G;AACjBoJ,cAAAA,KAAQlQ,KAAA8G,OACRoJ,KAAQ,IAAIlQ,KAAA8G,KAAUoJ;AAE1B,qBAAOA;YALmB;AA9KuB,gBACjD/H,IAAKjD,GAAA/F,KAAe,GACpBiJ,IAAKlD,GAAA7F,KAAe,GACpBkJ,IAAQrD,GAAAqD,SAAmB,GAC3BC,KAAOtD,GAAAsD,OAAiB,KAAK,MAC7BgH,IAAItK,GAAAsK,KAAe,GACnBW,IAAKjL,GAAAuK,UAAoB,GACzBvJ,KAAIhB,GAAA1F,SAAmB,GACvBO,KAAQmF,GAAAnF,SAAmB,GAC3BF,KAAOqF,GAAArF,QAAkB,GAErBuQ,KAAKpQ,KAAAC,IAASsI,CAAT,GACT8H,KAAKrQ,KAAAE,IAASqI,CAAT;AACL+H,YAAAA,KAAKtQ,KAAAC,IAASuI,CAAT;AAb4C,gBAcjD+H,KAAKvQ,KAAAE,IAASsI,CAAT,GACLH,KAAKmH,IAAIxP,KAAAC,IAASJ,EAAT;AACJ2P,iBAAIxP,KAAAC,IAASF,EAAT;AAhBwC,gBAiBjDyQ,KAAML,IAAKnQ,KAAAC,IAASJ,EAAT,GACX4Q,KAAMN,IAAKnQ,KAAAC,IAASF,EAAT;AACX0I,gBAAKvC,KAAIlG,KAAAE,IAASL,EAAT;AART,gBASA6I,KAAKxC,KAAIlG,KAAAE,IAASH,EAAT;AAEL0F,YAAAA,KAAM,CACN,CAAC,KACL0C,IAAME,KAAK+H,IACXhI,IAAME,IAAK+H,EAFP,CADM;AAKd5K,YAAAA,KAAMA,GAAAoD,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIC,IAAIC,GAAIC,GAAOC,GAAK,GAAG,CAArD,CAAX;AACN/C,YAAAA,GAAAuD,KAAS,CACL,KAAKb,IAAMqI,KAAMF,IAAKlI,IAAMqI,KAAMF,EAD7B,CAAT;AAGA9K,YAAAA,KAAMA,GAAAoD,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIoI,IAAKC,IAAKjI,GAAKD,GAAO,GAAG,CAAvD,CAAX;AACN9C,YAAAA,GAAAuD,KAAS,CAAC,GAAD,CAAT;AAhCqD,gBAkCjDvI,KAAY,IAAPZ,KAAWG,KAAA8G,KAAU,IAAI;AAC9BqI,YAAAA,KAAa,IAARpP,KAAY,IAAIC,KAAA8G,KAAU;AAC/B4J,YAAAA,KAASnI,IAAQ,CAAC9H,KAAI8H,IAASC,IAAM,CAAC/H,KAAI,CAACA,KAAI8H;AApCE,gBAqCjDoI,KAAOnI,IAAM1B,IAAKqI,KAAI3G,IAAOD,IAAQzB,IAAKqI,KAAIrI,IAAKqI,KAAI3G,GACvDoI,KAAS,IAAI9J,IAAKqI;AAwBlBpC,YAAAA,KAAM,CACF;cAAC;cACL5E,IAAME,KAAKpI,EAAIyQ,EAAJ;cACXtI,IAAME,IAAKpI,EAAIwQ,EAAJ;YAFP,CADE;AAKV3D,YAAAA,KAAMA,GAAAlE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIC,IAAIC,GAAIoI,IAAQC,IAAM,GAAG,CAAvD,CAAX;AAGFnI,gBAAMoI,MAAUrI,IAAQqI,MAExB7D,GAAA/D,KAAS,CACL,KAAKb,IAAME,KAAKpI,EAAI0Q,EAAJ,IAAalI,GAAIL,IAAME,IAAKpI,EAAIyQ,EAAJ,IAAajI,EADpD,CAAT,GAIAqE,KAAMA,GAAAlE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIC,IAAIC,GAAIqI,IAAMC,IAAQnI,GAAIC,EAAxD,CAAX,GAENqE,GAAA/D,KAAS,CACL,KAAKb,IAAME,KAAKpI,EAAI2Q,EAAJ,GAAcxI,IAAME,IAAKpI,EAAI0Q,EAAJ,CADpC,CAAT,GAIA7D,KAAMA,GAAAlE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIC,IAAIC,GAAIsI,IAAQpI,GAAK,GAAG,CAAtD,CAAX,GAENuE,GAAA/D,KAAS,CACL,KAAKb,IAAME,KAAKpI,EAAIuI,CAAJ,IAAYC,GAAIL,IAAME,IAAKpI,EAAIsI,CAAJ,IAAYE,EADlD,CAAT,GAIAqE,KAAMA,GAAAlE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIC,IAAIC,GAAIE,GAAKoI,IAAQnI,GAAIC,EAAvD,CAAX,GACNqE,GAAA/D,KAAS,CACL,KAAKb,IAAME,KAAKpI,EAAI2Q,EAAJ,GAAcxI,IAAME,IAAKpI,EAAI0Q,EAAJ,CADpC,CAAT,GAIA7D,KAAMA,GAAAlE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIC,IAAIC,GAAIsI,IAAQD,IAAM,GAAG,CAAvD,CAAX,KAGDnI,IAAM1B,IAAKqI,MAAK5G,IAAQzB,IAAKqI,OAElCpC,GAAA/D,KAAS,CACL,KACAb,IAAME,KAAKrI,KAAAC,IAAS0Q,EAAT,IAAkBlI,GAC7BL,IAAME,IAAKtI,KAAAE,IAASyQ,EAAT,IAAkBjI,EAHxB,CAAT,GAMAqE,KAAMA,GAAAlE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIC,IAAIC,GAAIqI,IAAMnI,GAAKC,GAAIC,EAArD,CAAX,GAENqE,GAAA/D,KAAS,CACL,KAAKb,IAAME,KAAKrI,KAAAC,IAASuI,CAAT,GAAgBJ,IAAME,IAAKtI,KAAAE,IAASsI,CAAT,CADtC,CAAT,GAIAuE,KAAMA,GAAAlE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIC,IAAIC,GAAIE,GAAKmI,IAAM,GAAG,CAApD,CAAX;AAEV5D,YAAAA,GAAA/D,KAAS,CACL,KACAb,IAAME,KAAKrI,KAAAC,IAAS0Q,EAAT,IAAkBlI,GAC7BL,IAAME,IAAKtI,KAAAE,IAASyQ,EAAT,IAAkBjI,EAHxB,CAAT;AAKAqE,YAAAA,KAAMA,GAAAlE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIC,IAAIC,GAAIqI,IAAMD,IAAQjI,GAAIC,EAAxD,CAAX;AACNqE,YAAAA,GAAA/D,KAAS,CAAC,GAAD,CAAT;AAEI8D,YAAAA,KAAM,CACF,CAAC,KACL3E,IAAMqI,KAAMJ,IACZhI,IAAMqI,KAAMJ,EAFR,CADE;AAKVvD,YAAAA,KAAMA,GAAAjE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIoI,IAAKC,IAAKlI,GAAOC,GAAK,GAAG,CAAvD,CAAX;AACNsE,YAAAA,GAAA9D,KAAS,CACL,KACAb,IAAMqI,KAAMxQ,KAAAC,IAASuI,CAAT,IAAiBC,GAC7BL,IAAMqI,KAAMzQ,KAAAE,IAASsI,CAAT,IAAiBE,EAHxB,CAAT;AAKAoE,YAAAA,KAAMA,GAAAjE,OAAW5B,EAAAgB,QAAsBE,GAAIC,GAAIoI,IAAKC,IAAKjI,GAAKD,GAAOE,GAAIC,EAAxD,CAAX;AACNoE,YAAAA,GAAA9D,KAAS,CAAC,GAAD,CAAT;AAEI4D,YAAAA,KAAQ,CACJ,CAAC,KACLzE,IAAME,KAAK+H,IACXhI,IAAME,IAAK+H,EAFP,GAGA,CAAC,KACLlI,IAAME,KAAK+H,KAAM3H,GACjBL,IAAME,IAAK+H,KAAM3H,EAFb,GAGA,CAAC,KACLP,IAAMqI,KAAMJ,KAAM3H,GAClBL,IAAMqI,KAAMJ,KAAM3H,EAFd,GAGA,CAAC,KACLP,IAAMqI,KAAMJ,IACZhI,IAAMqI,KAAMJ,EAFR,GAGA,CAAC,GAAD,CAbI;AAeRxD,gBAAQ,CACJ,CAAC,KACL1E,IAAME,KAAKiI,IACXlI,IAAME,IAAKiI,EAFP,GAGA,CAAC,KACLpI,IAAME,KAAKiI,KAAM7H,GACjBL,IAAME,IAAKiI,KAAM7H,EAFb,GAGA,CAAC,KACLP,IAAMqI,KAAMF,KAAM7H,GAClBL,IAAMqI,KAAMF,KAAM7H,EAFd,GAGA,CAAC,KACLP,IAAMqI,KAAMF,IACZlI,IAAMqI,KAAMF,EAFR,GAGA,CAAC,GAAD,CAbI;AAiBRM,YAAAA,KAAY7Q,KAAA8Q;cAAWpI;cAAI,CAACD;YAAhB;AACZsI,gBAAW/Q,KAAAgR,IAASxI,IAAMqI,EAAf;AACXI,YAAAA,KAAajR,KAAAgR,IAASzI,IAAQsI,EAAjB;AACbK,gBAAWlR,KAAAgR,KAAUzI,IAAQC,KAAO,IAAIqI,EAA7B;AAYfE,gBAAWd,GAAcc,CAAd;AACXE,YAAAA,KAAahB,GAAcgB,EAAd;AACbC,gBAAWjB,GAAciB,CAAd;AAGFA,iBADUC;AAEfC,gBAFeD,MAEVF;AACAF,iBAHUI;AAInB,mBAAO,EACH1L,KAAKA,IAEL+H,MAPe2D,MAOTnR,KAAA8G,KAAyB,GAC/BiG,KAAKA,IACLW,MAAM1N,KAAAqR,IAASC,GAAIF,GAAIG,CAAjB,GACNzE,KAAKA,IACLW,MAAMzN,KAAAqR,IAASC,GAAIF,GAAIG,CAAjB,GACN3E,OAAOA,IAEPe,QAAa,OAAL4D,GACR1E,OAAOA,GACPe,QAAa,OAALwD,EAZL;UA7L8C;AA4MzD,iBAAOnK;QAh2B0C,EAi2BnDlB,CAj2BiCkB;MA1DyZ,CAAhc;AAo6BAtJ,QAAgBW,GAAU,yBAAyB,CAACA,EAAS,wBAAwBA,EAAS,qBAAqBA,EAAS,mBAAmBA,EAAS,oBAArG,GAA4H,SAAU8D,IAAOoP,GAAG7P,GAAQnD,GAAG;AAY1M,YAAI8D,IAAQF,GAAAG,OACRkP,IAAwBD,EAAAE,gBACxBjT,IAAckD,EAAAlD,aACd0D,IAAcR,EAAAQ,aACdwP,IAAWnT,EAAAmT,UACXC,IAAUpT,EAAAoT,SACVnP,IAAQjE,EAAAiE,OACRxD,IAAOT,EAAAS,MACP4S,IAAOrT,EAAAqT,MACPC;AACH,SAAA,SAAUA,IAAS;AAqsBhBC,mBAASA,GAAYC,IAAG;AAChB,iBAAAC,KAAA,KACuB,cAAnBD,GAAAjT,QAAAuL,SACA0H,GAAAjT,QAAAuL,OAAiB;UAHL;AAUxB4H,mBAASA,IAAsB;AAC3B,gBAAI,KAAAC,WACA,KAAAF,KAAA,GAAa;AAAA,kBAETnP,KADQnE,KACGmE,UACXhE,KAFQH,KAEII,QAAAJ,MAAAG,WACZsT,IAHQzT,KAGAwT,QAAAE,WAAA,GACRC,IAJQ3T,KAIHwB,UACLoS,KALQ5T,KAKHwB,WALGxB,KAKcS,WACtBoT,KANQ7T,KAMHyB,SACLqS,KAPQ9T,KAOHyB,UAPGzB,KAOaW;AAErBoT,cAAAA,KAAK5T,GAAAU;AAVI,kBAWTmT,KAAML,KAAMF,EAAArG,KAAA6G,UAAqBR,EAAArG,KAAA8G,OAAkB,IACnDC,KAAMP,MAAMH,EAAAtG,MAAA8G,UAAsBR,EAAAtG,MAAA+G,OAAmB,IACrDE,IAAMP,MAAMJ,EAAA3M,IAAAmN,UAAoBR,EAAA3M,IAAAoN,OAAiB,IACjDG,KAAMP,MAAML,EAAAzG,OAAAiH,UAAuBR,EAAAzG,OAAAkH,OAAoB,IACvDI,KANKC,KAMOd,EAAA5M,MAAAoN,UAAsBR,EAAA5M,MAAAqN,OAAmB,IACrDM,KAAMT,MAAMN,EAAA5G,KAAAoH,UAAqBR,EAAA5G,KAAAqH,OAAkB,IACnDzO,KAhBQzF,KAgBDyU,cAAoB,YAAY;AAhB/BzU,mBAiBZwT,QAAAkB,UAAwBjB;AAjBZzT,mBAkBP2U,gBAlBO3U,KAmBR2U,cAAoB,EAChB3H,QAAQ7I,GAAAgF,WAAA,EAAApE,IAAA,GACR+B,KAAK3C,GAAAgF,WAAA,EAAApE,IAAA,GACLqI,MAAMjJ,GAAAgF,WAAA,EAAApE,IAAA,GACNoI,OAAOhJ,GAAAgF,WAAA,EAAApE,IAAA,GACP8H,MAAM1I,GAAAgF,WAAA,EAAApE,IAAA,GACN8B,OAAO1C,GAAAgF,WAAA,EAAApE,IAAA,EANS;AAnBZ/E,mBA4BZ2U,YAAA3H,OAAyBvH,IAAM,EAC3B,SAAS,kDACTd,QAAQ8O,EAAAzG,OAAA4H,cAA2B,OAAQ,KAC3CvJ,OAAO,CAAC,EACAzE,MAAMjD,EAAM8P,EAAAzG,OAAArJ,KAAN,EAAAoD,SAAmC,GAAnC,EAAAE,IAAA,GACNtE,UAAU;gBAAC,EACHnC,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG0T,GAHA;gBAIJ,EACC9T,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG0T,GAHJ;gBAIA,EACC9T,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG4T,GAHJ;gBAIA,EACChU,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG4T,GAHJ;cAZG,GAiBV7J,SAAS8I,EAAAzG,OAAAiH,QAnBT,GAqBJ,EACIrN,MAAMjD,EAAM8P,EAAAzG,OAAArJ,KAAN,EAAAoD,SAAmC,GAAnC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGmT,GACHjT,GAAGoT,IACHlT,GAAGmT,GAHA,GAIJ,EACCvT,GAAGoT,IACHlT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGoT,IACHlT,GAAGoT,IACHlT,GAzDX2T,EAsDU,GAIA,EACC/T,GAAGmT,GACHjT,GAAGoT,IACHlT,GA7DX2T,EA0DU,CAZG,GAiBV5J,SAAS8I,EAAAzG,OAAAiH,QAnBb,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAAzG,OAAArJ,KAAN,EAAAoD,SAAmC,IAAnC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG0T,GAHA,GAIJ,EACC9T,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG4T,GAHJ,GAIA,EACChU,GAAGmT,GACHjT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGmT,GACHjT,GAAGoT,IACHlT,GAlFX2T,EA+EU,CAZG,GAiBV5J,SAAS8I,EAAAzG,OAAAiH,WAAwB,CAACR,EAAArG,KAAA6G,QAnBtC,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAAzG,OAAArJ,KAAN,EAAAoD,SAAmC,IAAnC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG4T,GAHA,GAIJ,EACChU,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGoT,IACHlT,GAAGoT,IACHlT,GAnGX2T,EAgGU,GAIA,EACC/T,GAAGoT,IACHlT,GAAGoT,IACHlT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAAzG,OAAAiH,WAAwB,CAACR,EAAAtG,MAAA8G,QAnBtC,GAqBA;gBACIrN,MAAMjD,EAAM8P,EAAAzG,OAAArJ,KAAN,EAAAsD,IAAA;gBACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG0T,GAHA,GAIJ,EACC9T,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGmT,GACHjT,GAAGoT,IACHlT,GAxHX2T,EAqHU,GAIA,EACC/T,GAAGoT,IACHlT,GAAGoT,IACHlT,GA5HX2T,EAyHU,CAZG;gBAiBV5J,SAAS8I,EAAAzG,OAAAiH,WAAwB,CAACR,EAAA5M,MAAAoN;cAnBtC,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAAzG,OAAArJ,KAAN,EAAAsD,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG4T,GAHA,GAIJ,EACChU,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG4T,GAHJ,GAIA,EACChU,GAAGoT,IACHlT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGmT,GACHjT,GAAGoT,IACHlT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAAzG,OAAAiH,WAAwB,CAACR,EAAA5G,KAAAoH,QAnBtC,CAzGG,EAHoB,CAA/B;AA5BYjU,mBA8JZ2U,YAAA7N,IAAsBrB,IAAM,EACxB,SAAS,+CACTd,QAAQ8O,EAAA3M,IAAA8N,cAAwB,OAAQ,KACxCvJ,OAAO;gBAAC,EACAzE,MAAMjD,EAAM8P,EAAA3M,IAAAnD,KAAN,EAAAoD,SAAgC,GAAhC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG4T,GAHA,GAIJ,EACChU,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG4T,GAHJ,GAIA,EACChU,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG0T,GAHJ,CAZG,GAiBV3J,SAAS8I,EAAA3M,IAAAmN,QAnBT;gBAqBJ,EACIrN,MAAMjD,EAAM8P,EAAA3M,IAAAnD,KAAN,EAAAoD,SAAgC,GAAhC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGmT,GACHjT,GAAGmT,IACHjT,GAnLX2T,EAgLc,GAIJ,EACC/T,GAAGoT,IACHlT,GAAGmT,IACHjT,GAvLX2T,EAoLU,GAIA,EACC/T,GAAGoT,IACHlT,GAAGmT,IACHjT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGmT,GACHjT,GAAGmT,IACHjT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAA3M,IAAAmN,QAnBb;gBAqBA,EACIrN,MAAMjD,EAAM8P,EAAA3M,IAAAnD,KAAN,EAAAoD,SAAgC,IAAhC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG4T,GAHA,GAIJ,EACChU,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGmT,GACHjT,GAAGmT,IACHjT,GAhNX2T,EA6MU,GAIA,EACC/T,GAAGmT,GACHjT,GAAGmT,IACHjT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAA3M,IAAAmN,WAAqB,CAACR,EAAArG,KAAA6G,QAnBnC;gBAqBA,EACIrN,MAAMjD,EAAM8P,EAAA3M,IAAAnD,KAAN,EAAAoD,SAAgC,IAAhC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG0T,GAHA,GAIJ,EACC9T,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG4T,GAHJ,GAIA,EACChU,GAAGoT,IACHlT,GAAGmT,IACHjT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGoT,IACHlT,GAAGmT,IACHjT,GAzOX2T,EAsOU,CAZG,GAiBV5J,SAAS8I,EAAA3M,IAAAmN,WAAqB,CAACR,EAAAtG,MAAA8G,QAnBnC;gBAqBA,EACIrN,MAAMjD,EAAM8P,EAAA3M,IAAAnD,KAAN,EAAAsD,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG0T,GAHA,GAIJ,EACC9T,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG0T,GAHJ,GAIA;kBACC9T,GAAGoT;kBACHlT,GAAGmT;kBACHjT,GA1PX2T;gBAuPU,GAIA,EACC/T,GAAGmT,GACHjT,GAAGmT,IACHjT,GA9PX2T,EA2PU,CAZG,GAiBV5J,SAAS8I,EAAA3M,IAAAmN,WAAqB,CAACR,EAAA5M,MAAAoN,QAnBnC;gBAqBA,EACIrN,MAAMjD,EAAM8P,EAAA3M,IAAAnD,KAAN,EAAAsD,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG4T,GAHA,GAIJ,EACChU,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG4T,GAHJ,GAIA,EACChU,GAAGmT,GACHjT,GAAGmT,IACHjT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGoT,IACHlT,GAAGmT,IACHjT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAA3M,IAAAmN,WAAqB,CAACR,EAAA5G,KAAAoH,QAnBnC;cAzGG,EAHiB,CAA5B;AA9JYjU,mBAgSZ2U,YAAAvH,KAAuB3H,IAAM,EACzB,SAAS,gDACTd,QAAQ8O,EAAArG,KAAAwH,cAAyB,OAAQ,KACzCvJ,OAAO;gBAAC,EACAzE,MAAMjD,EAAM8P,EAAArG,KAAAzJ,KAAN,EAAAoD,SAAiC,GAAjC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG0T,GAHA,GAIJ,EACC9T,GAAGmT,GACHjT,GAAGoT,IACHlT,GApSX2T,EAiSU,GAIA,EACC/T,GAAGmT,GACHjT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG4T,GAHJ,CAZG,GAiBV7J,SAAS8I,EAAArG,KAAA6G,WAAsB,CAACR,EAAAzG,OAAAiH,QAnBhC;gBAqBJ;kBACIrN,MAAMjD,EAAM8P,EAAArG,KAAAzJ,KAAN,EAAAoD,SAAiC,GAAjC,EAAAE,IAAA;kBACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG4T,GAHA,GAIJ,EACChU,GAAGmT,GACHjT,GAAGmT,IACHjT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGmT,GACHjT,GAAGmT,IACHjT,GA7TX2T,EA0TU,GAIA,EACC/T,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG0T,GAHJ,CAZG;kBAiBV3J,SAAS8I,EAAArG,KAAA6G,WAAsB,CAACR,EAAA3M,IAAAmN;gBAnBpC;gBAqBA,EACIrN,MAAMjD,EAAM8P,EAAArG,KAAAzJ,KAAN,EAAAoD,SAAiC,IAAjC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG4T,GAHA,GAIJ,EACChU,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG4T,GAHJ,GAIA,EACChU,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG0T,GAHJ,CAZG,GAiBV3J,SAAS8I,EAAArG,KAAA6G,QAnBb;gBAqBA,EACIrN,MAAMjD,EAAM8P,EAAArG,KAAAzJ,KAAN,EAAAoD,SAAiC,IAAjC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGmT,GACHjT,GAAGmT,IACHjT,GAAGmT,GAHA,GAIJ,EACCvT,GAAGmT,GACHjT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGmT,GACHjT,GAAGoT,IACHlT,GAvWX2T,EAoWU,GAIA,EACC/T,GAAGmT,GACHjT,GAAGmT,IACHjT,GA3WX2T,EAwWU,CAZG,GAiBV5J,SAAS8I,EAAArG,KAAA6G,QAnBb;gBAqBA,EACIrN,MAAMjD,EAAM8P,EAAArG,KAAAzJ,KAAN,EAAAsD,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG0T,GAHA,GAIJ,EACC9T,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGmT,GACHjT,GAAGmT,IACHjT,GA5XX2T,EAyXU,GAIA,EACC/T,GAAGmT,GACHjT,GAAGoT,IACHlT,GAhYX2T,EA6XU,CAZG,GAiBV5J,SAAS8I,EAAArG,KAAA6G,WAAsB,CAACR,EAAA5M,MAAAoN,QAnBpC;gBAqBA,EACIrN,MAAMjD,EAAM8P,EAAArG,KAAAzJ,KAAN,EAAAsD,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG4T,GAHA,GAIJ,EACChU,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG4T,GAHJ,GAIA,EACChU,GAAGmT,GACHjT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGmT,GACHjT,GAAGmT,IACHjT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAArG,KAAA6G,WAAsB,CAACR,EAAA5G,KAAAoH,QAnBpC;cAzGG,EAHkB,CAA7B;AAhSYjU,mBAkaZ2U,YAAAxH,MAAwB1H,IAAM,EAC1B,SAAS,iDACTd,QAAQ8O,EAAAtG,MAAAyH,cAA0B,OAAQ,KAC1CvJ,OAAO,CAAC,EACAzE,MAAMjD,EAAM8P,EAAAtG,MAAAxJ,KAAN,EAAAoD,SAAkC,GAAlC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG4T,GAHA,GAIJ,EACChU,GAAGoT,IACHlT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGoT,IACHlT,GAAGoT,IACHlT,GA1aX2T,EAuaU,GAIA,EACC/T,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG0T,GAHJ,CAZG,GAiBV3J,SAAS8I,EAAAtG,MAAA8G,WAAuB,CAACR,EAAAzG,OAAAiH,QAnBjC,GAqBJ,EACIrN,MAAMjD,EAAM8P,EAAAtG,MAAAxJ,KAAN,EAAAoD,SAAkC,GAAlC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG0T,GAHA,GAIJ,EACC9T,GAAGoT,IACHlT,GAAGmT,IACHjT,GA3bX2T,EAwbU,GAIA;gBACC/T,GAAGoT;gBACHlT,GAAGmT;gBACHjT,GAAGmT;cAHJ,GAIA,EACCvT,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG4T,GAHJ,CAZG,GAiBV7J,SAAS8I,EAAAtG,MAAA8G,WAAuB,CAACR,EAAA3M,IAAAmN,QAnBrC,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAAtG,MAAAxJ,KAAN,EAAAoD,SAAkC,IAAlC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGoT,IACHlT,GAAGmT,IACHjT,GA5cX2T,EAycc,GAIJ,EACC/T,GAAGoT,IACHlT,GAAGoT,IACHlT,GAhdX2T,EA6cU,GAIA,EACC/T,GAAGoT,IACHlT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGoT,IACHlT,GAAGmT,IACHjT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAAtG,MAAA8G,QAnBb,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAAtG,MAAAxJ,KAAN,EAAAoD,SAAkC,IAAlC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG0T,GAHA,GAIJ,EACC9T,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG0T,GAHJ,GAIA,EACC9T,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG4T,GAHJ,GAIA,EACChU,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG4T,GAHJ,CAZG,GAiBV7J,SAAS8I,EAAAtG,MAAA8G,QAnBb,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAAtG,MAAAxJ,KAAN,EAAAsD,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG0T,GAHA,GAIJ,EACC9T,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGoT,IACHlT,GAAGoT,IACHlT,GA9fX2T,EA2fU,GAIA,EACC/T,GAAGoT,IACHlT,GAAGmT,IACHjT,GAlgBX2T,EA+fU,CAZG,GAiBV5J,SAAS8I,EAAAtG,MAAA8G,WAAuB,CAACR,EAAA5M,MAAAoN,QAnBrC,GAqBA;gBACIrN,MAAMjD,EAAM8P,EAAAtG,MAAAxJ,KAAN,EAAAsD,IAAA;gBACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG4T,GAHA,GAIJ,EACChU,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG4T,GAHJ,GAIA,EACChU,GAAGoT,IACHlT,GAAGmT,IACHjT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGoT,IACHlT,GAAGoT,IACHlT,GAAGmT,GAHJ,CAZG;gBAiBVpJ,SAAS8I,EAAAtG,MAAA8G,WAAuB,CAACR,EAAA5G,KAAAoH;cAnBrC,CAzGG,EAHmB,CAA9B;AAlaYjU,mBAoiBZ2U,YAAA9H,KAAuBpH,IAAM,EACzB,SAAS,gDACTd,QAAQ8O,EAAA5G,KAAA+H,cAAyB,OAAQ,KACzCvJ,OAAO,CAAC,EACAzE,MAAMjD,EAAM8P,EAAA5G,KAAAlJ,KAAN,EAAAoD,SAAiC,GAAjC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG4T,GAHA,GAIJ,EACChU,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG4T,GAHJ,GAIA,EACChU,GAAGmT,GACHjT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGoT,IACHlT,GAAGoT,IACHlT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAA5G,KAAAoH,WAAsB,CAACR,EAAAzG,OAAAiH,QAnBhC,GAqBJ,EACIrN,MAAMjD,EAAM8P,EAAA5G,KAAAlJ,KAAN,EAAAoD,SAAiC,GAAjC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG4T,GAHA,GAIJ,EACChU,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG4T,GAHJ,GAIA,EACChU,GAAGoT,IACHlT,GAAGmT,IACHjT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGmT,GACHjT,GAAGmT,IACHjT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAA5G,KAAAoH,WAAsB,CAACR,EAAA3M,IAAAmN,QAnBpC,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAA5G,KAAAlJ,KAAN,EAAAoD,SAAiC,IAAjC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG4T,GAHA,GAIJ,EACChU,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG4T,GAHJ,GAIA,EACChU,GAAGmT,GACHjT,GAAGmT,IACHjT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGmT,GACHjT,GAAGoT,IACHlT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAA5G,KAAAoH,WAAsB,CAACR,EAAArG,KAAA6G,QAnBpC,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAA5G,KAAAlJ,KAAN,EAAAoD,SAAiC,IAAjC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG4T,GAHA,GAIJ,EACChU,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG4T,GAHJ,GAIA,EACChU,GAAGoT,IACHlT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGoT,IACHlT,GAAGmT,IACHjT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAA5G,KAAAoH,WAAsB,CAACR,EAAAtG,MAAA8G,QAnBpC,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAA5G,KAAAlJ,KAAN,EAAAsD,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGmT,GACHjT,GAAGmT,IACHjT,GAAGmT,GAHA,GAIJ,EACCvT,GAAGoT,IACHlT,GAAGmT,IACHjT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGoT,IACHlT,GAAGoT,IACHlT,GAAGmT,GAHJ,GAIA,EACCvT,GAAGmT,GACHjT,GAAGoT,IACHlT,GAAGmT,GAHJ,CAZG,GAiBVpJ,SAAS8I,EAAA5G,KAAAoH,QAnBb,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAA5G,KAAAlJ,KAAN,EAAAsD,IAAA,GACNtE,UAAU;gBAAC,EACHnC,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG4T,GAHA;gBAIJ,EACChU,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG4T,GAHJ;gBAIA,EACChU,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG4T,GAHJ;gBAIA,EACChU,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG4T,GAHJ;cAZG,GAiBV7J,SAAS8I,EAAA5G,KAAAoH,QAnBb,CAzGG,EAHkB,CAA7B;AApiBYjU,mBAsqBZ2U,YAAA9N,MAAwBpB,IAAM,EAC1B,SAAS,iDACTd,QAAQ8O,EAAA5M,MAAA+N,cAA0B,OAAQ,KAC1CvJ,OAAO,CAAC,EACAzE,MAAMjD,EAAM8P,EAAA5M,MAAAlD,KAAN,EAAAoD,SAAkC,GAAlC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG0T,GAHA,GAIJ,EACC9T,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGoT,IACHlT,GAAGoT,IACHlT,GA9qBX2T,EA2qBU,GAIA,EACC/T,GAAGmT,GACHjT,GAAGoT,IACHlT,GAlrBX2T,EA+qBU,CAZG,GAiBV5J,SAAS8I,EAAA5M,MAAAoN,WAAuB,CAACR,EAAAzG,OAAAiH,QAnBjC,GAqBJ,EACIrN,MAAMjD,EAAM8P,EAAA5M,MAAAlD,KAAN,EAAAoD,SAAkC,GAAlC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG0T,GAHA,GAIJ,EACC9T,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGmT,GACHjT,GAAGmT,IACHjT,GAnsBX2T,EAgsBU,GAIA,EACC/T,GAAGoT,IACHlT,GAAGmT,IACHjT,GAvsBX2T,EAosBU,CAZG,GAiBV5J,SAAS8I,EAAA5M,MAAAoN,WAAuB,CAACR,EAAA3M,IAAAmN,QAnBrC,GAqBA;gBACIrN,MAAMjD,EAAM8P,EAAA5M,MAAAlD,KAAN,EAAAoD,SAAkC,IAAlC,EAAAE,IAAA;gBACNtE,UAAU,CAAC,EACHnC,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG0T,GAHA,GAIJ,EACC9T,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGmT,GACHjT,GAAGoT,IACHlT,GAxtBX2T,EAqtBU,GAIA,EACC/T,GAAGmT,GACHjT,GAAGmT,IACHjT,GA5tBX2T,EAytBU,CAZG;gBAiBV5J,SAAS8I,EAAA5M,MAAAoN,WAAuB,CAACR,EAAArG,KAAA6G;cAnBrC,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAA5M,MAAAlD,KAAN,EAAAoD,SAAkC,IAAlC,EAAAE,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG0T,GAHA,GAIJ,EACC9T,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGoT,IACHlT,GAAGmT,IACHjT,GA7uBX2T,EA0uBU,GAIA,EACC/T,GAAGoT,IACHlT,GAAGoT,IACHlT,GAjvBX2T,EA8uBU,CAZG,GAiBV5J,SAAS8I,EAAA5M,MAAAoN,WAAuB,CAACR,EAAAtG,MAAA8G,QAnBrC,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAA5M,MAAAlD,KAAN,EAAAsD,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAGoT,IACHlT,GAAGmT,IACHjT,GA1vBX2T,EAuvBc,GAIJ,EACC/T,GAAGmT,GACHjT,GAAGmT,IACHjT,GA9vBX2T,EA2vBU,GAIA,EACC/T,GAAGmT,GACHjT,GAAGoT,IACHlT,GAlwBX2T,EA+vBU,GAIA,EACC/T,GAAGoT,IACHlT,GAAGoT,IACHlT,GAtwBX2T,EAmwBU,CAZG,GAiBV5J,SAAS8I,EAAA5M,MAAAoN,QAnBb,GAqBA,EACIrN,MAAMjD,EAAM8P,EAAA5M,MAAAlD,KAAN,EAAAsD,IAAA,GACNtE,UAAU,CAAC,EACHnC,GAAG2T,IACHzT,GAAG2T,IACHzT,GAAG0T,GAHA,GAIJ,EACC9T,GAAGwT,IACHtT,GAAG2T,IACHzT,GAAG0T,GAHJ,GAIA,EACC9T,GAAGwT,IACHtT,GAAG0T,GACHxT,GAAG0T,GAHJ,GAIA,EACC9T,GAAG2T,IACHzT,GAAG0T,GACHxT,GAAG0T,GAHJ,CAZG,GAiBV3J,SAAS8I,EAAA5M,MAAAoN,QAnBb,CAzGG,EAHmB,CAA9B;YAvqBa;UAFU;AAizB/BY,mBAASA,IAAsB;AACvB,iBAAAjQ,cAEA,CAAC,EACOkQ,MAAM,UACNC,OAAO,IAFd,GAGM,EACCD,MAAM,YACNC,OAAO,IAFR,CAHP,EAAAvQ,QAMe,SAAUwQ,IAAK;AAC1B,mBAAA7Q,SAAA8Q,WAAyB,EACrBC,SAAS,UACTC,YAAY,EACRC,IAAI,gBAAgBJ,GAAAF,KADZ,GAGZO,UAAU,CAAC,EACHH,SAAS,uBACTG,UAAU,CAAC,EACHH,SAAS,WACTC,YAAY,EACRxJ,MAAM,UACNoJ,OAAOC,GAAAD,MAFC,EAFT,GAMJ,EACCG,SAAS,WACTC,YAAY,EACRxJ,MAAM,UACNoJ,OAAOC,GAAAD,MAFC,EAFb,GAMA,EACCG,SAAS,WACTC,YAAY,EACRxJ,MAAM,UACNoJ,OAAOC,GAAAD,MAFC,EAFb,CAZG,EAFP,CAAD,EALW,CAAzB;YAD0B,GA6B3B,IAnCH;UAHuB;AA8C/BO,mBAASA,IAAc;AACnB,gBAAIlV,KAAU,KAAAA;AACV,iBAAAkT,KAAA,MACClT,GAAAmV,UAAkB,CAAA,GAAnB/Q,QAA+B,SAAUgR,GAAG;AAI3B,6BAHDA,EAAA7J,QACJvL,GAAAJ,MAAA2L,QACAvL,GAAAJ,MAAAyV,uBAEJD,EAAA7J,OAAS;YAL2B,CAA5C;UAHe;AAgBvB+J,mBAASA,IAAsB;AAC3B,gBACIvV,KADQH,KACII,QAAAJ,MAAAG;AAChB,gBAFYH,KAERwT,WAFQxT,KAGRsT,KAAA,GAAc;AAEVnT,cAAAA,OACAA,GAAAiB,QAAkBjB,GAAAiB,QAAkB,OACZ,KAAnBjB,GAAAiB,QAAuB,IAAI,MAChCjB,GAAAe,OAAiBf,GAAAe,OAAiB,OACX,KAAlBf,GAAAe,OAAsB,IAAI;AANrB,kBAQVb,KAXIL,KAWOK,UAAgBsV,IAXvB3V,KAWiC2V,SAAeC,KAXhD5V,KAWyD4V;AACjED,gBADmFtV,KAAW,MAAM,OACvF,EAAEuV,GAAO,MAAM;AAC5BD,gBAF6GtV,KAAW,MAAM,OAEjH,EAAEuV,GAAO,MAAM;AAC5BD,gBAHuItV,KAAW,WAAW,WAXrJL,KAcM6V,cAAoBD,GAAO,MAAM,MAAMA,GAAO,MAAM;AAClED,gBAJ0KtV,KAAW,UAAU,YAXvLL,KAeM8V,eAAqBF,GAAO,MAAM,MAAMA,GAAO,MAAM;AAf3D5V,mBAkBRiB,UAAgB;AACY,uBAAxBd,GAAA4V,cAnBI/V,KAoBJiB,UApBIjB,KAoBYwT,QAAAwC,SAAuB7V,GAAAU,KAAvB;mBAKpB2S,QAAAkB,UAzBQ1U,KAyBgBwT,QAAAE,WAAA;YAtBV;UAJS;AAgC/BuC,mBAASA,IAAiB;AAClB,iBAAA3C,KAAA,MAEA,KAAA4C,aAAkB;UAHA;AAS1BC,mBAASA,KAAiB;AAClB,iBAAA3C,WAAgB,KAAAF,KAAA,MAChB,KAAAE,QAAAkB,UAAuB,KAAAlB,QAAAE,WAAA;UAFL;AAQ1B0C,mBAASA,KAAS;AACT,iBAAA5C,YACD,KAAAA,UAAe,IAAI6C,EAAY,IAAhB;UAFL;AAQlBC,mBAASA,EAAiBC,IAAS;AAC/B,mBAAO,KAAAjD,KAAA,KAAeiD,GAAAjX,MAAc,MAAM,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CAApB;UADS;AAOnCkO,mBAASA,EAAiBF,IAAS;AAC/B,gBACI1T,IAAI,KAAA0S,OAAAzS;AACR,gBAAI,KAAAwQ,KAAA;AACA,qBAAOzQ;AACH0S,gBAAAA,KAAS,KAAAA,OAAY1S,IACrB0S,GAAAmB,UAAA,GACAnB,GAAAoB,OAAA;;AAIJJ,cAAAA,GAAA9P,KAAa,IAAb;UAX2B;AAiBnCmQ,mBAASA,EAAiBL,IAAS;AAC/BA,YAAAA,GAAAjX,MAAc,MAAM,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CAApB;AACI,iBAAA+K,KAAA,MACA,KAAAuD,UAAApI,aAA4B;UAHD;AApoDnC,cAAI4H,IAA6B,WAAY;AAMrCA,qBAASA,GAAYrW,IAAO;AACxB,mBAAA0U,UAAe;AACnB,mBAAA1U,QAAaA;YAFe;AAShCqW,YAAAA,GAAA7P,UAAAkN,aAAmCoD,WAAY;AAAA,kBACvC9W,KAAQ,KAAAA,OACRG,IAAYH,GAAAI,QAAAJ,MAAAG,WACZ4W,IAAe5W,EAAAsT,OACfE,KAAK3T,GAAAwB,UACLoS,KAAK5T,GAAAwB,WAAiBxB,GAAAS,WACtBoT,KAAK7T,GAAAyB,SACLqS,KAAK9T,GAAAyB,UAAgBzB,GAAAW,YAErBoT,KAAK5T,EAAAU,OACLmW,IAAkBA,SAAUrU,IAAU;AAC9BC,gBAAAA,KAAOY,EAAYb,IAC3B3C,EADe;AAGf,uBAAW,MAAP4C,KACO,IAEA,OAAPA,KACO,KAEJ;cAV+B,GAWvCqU,KAAoBD,EAAgB,CACnC,EAAExW,GAAGmT,IAAIjT,GAAGoT,IAAIlT,GAAGmT,GAAnB,GACA,EAAEvT,GAAGoT,IAAIlT,GAAGoT,IAAIlT,GAAGmT,GAAnB,GACA,EAAEvT,GAAGoT,IAAIlT,GAAGoT,IAAIlT,GAhBX2T,EAgBL,GACA,EAAE/T,GAAGmT,IAAIjT,GAAGoT,IAAIlT,GAjBX2T,EAiBL,CAJmC,CAAhB,GAKnB2C,KAAiBF,EAAgB,CACjC,EAAExW,GAAGmT,IAAIjT,GAAGmT,IAAIjT,GAnBX2T,EAmBL,GACA,EAAE/T,GAAGoT,IAAIlT,GAAGmT,IAAIjT,GApBX2T,EAoBL,GACA,EAAE/T,GAAGoT,IAAIlT,GAAGmT,IAAIjT,GAAGmT,GAAnB,GACA,EAAEvT,GAAGmT,IAAIjT,GAAGmT,IAAIjT,GAAGmT,GAAnB,CAJiC,CAAhB,GAKjBoD,KAAkBH,EAAgB,CAClC,EAAExW,GAAGmT,IAAIjT,GAAGmT,IAAIjT,GAxBX2T,EAwBL,GACA,EAAE/T,GAAGmT,IAAIjT,GAAGmT,IAAIjT,GAAGmT,GAAnB,GACA;gBAAEvT,GAAGmT;gBAAIjT,GAAGoT;gBAAIlT,GAAGmT;cAAnB,GACA,EAAEvT,GAAGmT,IAAIjT,GAAGoT,IAAIlT,GA3BX2T,EA2BL,CAJkC,CAAhB,GAKlB6C,KAAmBJ,EAAgB,CACnC,EAAExW,GAAGoT,IAAIlT,GAAGmT,IAAIjT,GAAGmT,GAAnB,GACA,EAAEvT,GAAGoT,IAAIlT,GAAGmT,IAAIjT,GA9BX2T,EA8BL,GACA,EAAE/T,GAAGoT,IAAIlT,GAAGoT,IAAIlT,GA/BX2T,EA+BL,GACA,EAAE/T,GAAGoT,IAAIlT,GAAGoT,IAAIlT,GAAGmT,GAAnB,CAJmC,CAAhB,GAKnBsD,KAAmBL,EAAgB,CACnC,EAAExW,GAAGmT,IAAIjT,GAAGoT,IAAIlT,GAlCX2T,EAkCL,GACA,EAAE/T,GAAGoT,IAAIlT,GAAGoT,IAAIlT,GAnCX2T,EAmCL,GACA,EAAE/T,GAAGoT,IAAIlT,GAAGmT,IAAIjT,GApCX2T,EAoCL,GACA,EAAE/T,GAAGmT,IAAIjT,GAAGmT,IAAIjT,GArCX2T,EAqCL,CAJmC,CAAhB;AAKnB+C,kBAAkBN,EAAgB,CAClC,EAAExW,GAAGmT,IAAIjT,GAAGmT,IAAIjT,GAAGmT,GAAnB,GACA,EAAEvT,GAAGoT,IAAIlT,GAAGmT,IAAIjT,GAAGmT,GAAnB,GACA,EAAEvT,GAAGoT,IAAIlT,GAAGoT,IAAIlT,GAAGmT,GAAnB,GACA,EAAEvT,GAAGmT,IAAIjT,GAAGoT,IAAIlT,GAAGmT,GAAnB,CAJkC,CAAhB;AA9CqB,kBAoDvCwD,KAAoB,OACpBC,KAAiB,OACjBC,KAAkB,OAClBC,KAAmB;AAIvB,eAAA,EAAAxN,OACYlK,GAAA2X,OAAa3X,GAAA4X,OAAa5X,GAAA6X,KADtC,EAAArT,QAEa,SAAUsT,IAAM;AACrBA,gBAAAA,OACIA,GAAAC,QACID,GAAAE,WACAR,KAAiB,OAGjBD,KAAoB,OAIpBO,GAAAE,WACAN,KAAmB,OAGnBD,KAAkB;cAfL,CAF7B;AAsBA,kBAAIQ,KAAiBA,SAAUC,IAASlB,IAAiBmB,IAAgB;AAErE,yBADQC,KAAY,CAAC,QAAQ,SAAS,SAAlB,GAA8BhY,KAAU,CAAA,GACnDyC,KAAI,GAAGA,KAAIuV,GAAAtV,QAAkBD;AAElC,2BADIiC,KAAOsT,GAAUvV,KACZE,KAAI,GAAGA,KAAImV,GAAApV,QAAgBC;AAChC,wBAA0B,aAAtB,OAAOmV,GAAQnV,KAAiB;AAChC,0BAAIwC,KAAM2S,GAAQnV,IAAG+B;0BACF,gBAAf,OAAOS,MAA+B,SAARA,IAAc;AAC5CnF,wBAAAA,GAAQ0E,MAAQS;AAChB;sBAF4C;oBAFhB;AASxC8S,gBAAAA,KAAYF;AACQ,yBAApB/X,GAAA6T,WAAgD,UAApB7T,GAAA6T,UAC5BoE,KAAYjY,GAAA6T,UAEa,WAApB7T,GAAA6T,YACLoE,KAA8B,IAAlBrB;AAEhB,uBAAO,EACH9C,MAAM5T,EAAKF,GAAA8T,MAAc,CAAnB,GACNvQ,OAAOrD,EAAKF,GAAAuD,OAAe,MAApB,GACPiR,aAA+B,IAAlBoC,IACb/C,SAASoE,GAJN;cArB8D;AA8BrE5N,kBAAM,EACF6N,MAAM,CAAA,GAONtL,QAAQiL,GAAe,CAAClB,EAAA/J,QAC5B+J,EAAAjQ,KACAiQ,CAF2B,GAG3BE,IACAM,EAJY,GAKRzQ,KAAKmR,GAAe,CAAClB,EAAAjQ,KACzBiQ,EAAA/J,QACA+J,CAFwB,GAGxBG,IACAM,EAJS,GAKLpK,MAAM6K,GAAe,CACjBlB,EAAA3J,MACA2J,EAAA5J,OACA4J,EAAA7P,MACA6P,CAJiB,GAMzBI,IACAM,EAPU,GAQNtK,OAAO8K,GAAe,CAClBlB,EAAA5J,OACA4J,EAAA3J,MACA2J,EAAA7P,MACA6P,CAJkB,GAM1BK,IACAM,EAPW,GAQP7K,MAAMoL,GAAe,CAAClB,EAAAlK,MAC1BkK,EAAAlQ,OACAkQ,CAFyB,GAGzBO,GAjG4CiB,IA8FlC,GAKN1R,OAAOoR,GAAe,CAAClB,EAAAlQ,OAC3BkQ,EAAAlK,MACAkK,CAF0B,GAG1BM,IAtGmBmB,KAmGR,EAvCL;AAiD0B,yBAAhCrY,EAAAsY,qBACIC,KAAcA,SAAUlM,IACxBC,IAAO;AACH,uBAASD,GAAAyH,YAAkBxH,GAAAwH,WACtBzH,GAAAyH,WACGxH,GAAAwH,WACCzH,GAAAoI,gBAAsBnI,GAAAmI;cAJ5B,GAMP+D,IAAS,CAAA,GACTD,GAAYjO,EAAA2C,MAAU3C,EAAA5D,KAAtB,KACA8R,EAAAtO,KAAY,EACR3J,IAAImT,KAAKC,MAAM,GACftT,GAAGmT,IACH/S,GArKH2T,GAsKGqE,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,EAJE,CAAZ,GAOA8X,GAAYjO,EAAA2C,MAAU3C,EAAAoC,IAAtB,KACA8L,EAAAtO,KAAY,EACR3J,IAAImT,KAAKC,MAAM,GACftT,GAAGmT,IACH/S,GAAGmT,IACH6E,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAjB,EAJE,CAAZ,GAOA8X,GAAYjO,EAAA0C,OAAW1C,EAAA5D,KAAvB,KACA8R,EAAAtO,KAAY,EACR3J,IAAImT,KAAKC,MAAM,GACftT,GAAGoT,IACHhT,GArLH2T,GAsLGqE,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,EAJE,CAAZ,GAOA8X,GAAYjO,EAAA0C,OAAW1C,EAAAoC,IAAvB,KACA8L,EAAAtO,KAAY,EACR3J,IAAImT,KAAKC,MAAM,GACftT,GAAGoT,IACHhT,GAAGmT,IACH6E,MAAM,EAAEpY,GAAG,IAAIE,GAAG,GAAGE,GAAG,EAAlB,EAJE,CAAZ,GAOAiY,KAAe,CAAA,GACfH,GAAYjO,EAAAuC,QAAYvC,EAAA5D,KAAxB,KACAgS,GAAAxO,KAAkB,EACd7J,IAAImT,KAAKC,MAAM,GACflT,GAAGoT,IACHlT,GAtMH2T,GAuMGqE,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,EAJQ,CAAlB,GAOA8X,GAAYjO,EAAAuC,QAAYvC,EAAAoC,IAAxB,KACAgM,GAAAxO,KAAkB,EACd7J,IAAImT,KAAKC,MAAM,GACflT,GAAGoT,IACHlT,GAAGmT,IACH6E,MAAM,EAAEpY,GAAG,IAAIE,GAAG,GAAGE,GAAG,EAAlB,EAJQ,CAAlB,GAOAkY,KAAY,CAAA,GACZJ,GAAYjO,EAAA3D,KAAS2D,EAAA5D,KAArB,KACAiS,GAAAzO,KAAe;gBACX7J,IAAImT,KAAKC,MAAM;gBACflT,GAAGmT;gBACHjT,GAvNH2T;gBAwNGqE,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB;cAJK,CAAf,GAOA8X,GAAYjO,EAAA3D,KAAS2D,EAAAoC,IAArB,KACAiM,GAAAzO,KAAe,EACX7J,IAAImT,KAAKC,MAAM,GACflT,GAAGmT,IACHjT,GAAGmT,IACH6E,MAAM,EAAEpY,GAAG,IAAIE,GAAG,GAAGE,GAAG,EAAlB,EAJK,CAAf,GAOAmY,KAAe,CAAA,GACfL,GAAYjO,EAAAuC,QAAYvC,EAAA2C,IAAxB,KACA2L,GAAA1O,KAAkB,EACdzJ,IAtOH2T,IAsOYR,MAAM,GACfrT,GAAGoT,IACHtT,GAAGmT,IACHiF,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAjB,EAJQ,CAAlB,GAOA8X,GAAYjO,EAAAuC,QAAYvC,EAAA0C,KAAxB,KACA4L,GAAA1O,KAAkB,EACdzJ,IA9OH2T,IA8OYR,MAAM,GACfrT,GAAGoT,IACHtT,GAAGoT,IACHgF,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,EAJQ,CAAlB,GAOAoY,KAAY,CAAA,GACZN,GAAYjO,EAAA3D,KAAS2D,EAAA2C,IAArB,KACA4L,GAAA3O,KAAe,EACXzJ,IAvPH2T,IAuPYR,MAAM,GACfrT,GAAGmT,IACHrT,GAAGmT,IACHiF,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAjB,EAJK,CAAf,GAOA8X,GAAYjO,EAAA3D,KAAS2D,EAAA0C,KAArB,KACA6L,GAAA3O,KAAe,EACXzJ,IA/PH2T,IA+PYR,MAAM,GACfrT,GAAGmT,IACHrT,GAAGoT,IACHgF,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,EAJK,CAAf,GAOAqY,KAAWA,SAAUC,IACrBpB,IACAqB,IAAM;AACF,oBAAqB,MAAjBD,GAAApW;AACA,yBAAO;AAEf,oBAAqB,MAAjBoW,GAAApW;AACA,yBAAOoW,GAAM;AAMjB,yBAJIE,KAActZ,EAAYoZ,IAC1BlZ,IACA,KAFc,GAGdqZ,KAAO,GACFxW,KAAI,GAAGA,KAAIuW,GAAAtW,QAAoBD;AAChCsW,kBAAAA,KAAOC,GAAYvW,IAAGiV,MACtBqB,KAAOC,GAAYC,IAAMvB,MACzBuB,KAAOxW,KAEDsW,KAAOC,GAAYvW,IAAGiV,QAC5BqB,KAAOC,GAAYC,IAAMvB,OACxBsB,GAAYvW,IAAZjC,IAAmBwY,GAAYC,IAAZzY,MACpByY,KAAOxW;AAGf,uBAAOqW,GAAMG;cAtBP,GAwBV5O,EAAA6N,OAAW,EACP5X,GAAG,EACC,MAAQuY,GAASN,GAAQ,KAAK,EAAtB,GACR,OAASM,GAASN,GAAQ,KAAM,CAAvB,EAFV,GAIHnY,GAAG,EACC,KAAOyY,GAASH,IAAW,KAAK,EAAzB,GACP,QAAUG,GAASJ,IAAc,KAAM,CAA7B,EAFX,GAIHjY,GAAG,EACC,KAAOqY,GAASD,IAAW,KAAK,EAAzB,GACP,QAAUC,GAASF,IAAc,KAAM,CAA7B,EAFX,EATI,KAgBXtO,EAAA6N,OAAW,EACP5X,GAAG,EACC,MAAQ,EACJF,GAAGmT,IAAI/S,GAlTd2T,GAkTqBqE,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,EADhB,GAGR,OAAS,EACLJ,GAAGoT,IAAIhT,GArTd2T,GAqTqBqE,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,EADf,EAJV,GAQHJ,GAAG,EACC,KAAO,EACHE,GAAGmT,IAAIjT,GA1Td2T,GA0TqBqE,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,EADjB,GAGP,QAAU,EACNF,GAAGoT,IACHlT,GA9TP2T,GA+TOqE,MAAM,EAAEpY,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,EAHA,EAJX,GAUHA,GAAG,EACC,KAAO,EACHJ,GAAGiX,KAAkB7D,KAAKD,IAC1BjT,GAAGmT,IACH+E,MAAMnB,KACF,EAAEjX,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,IACA,EAAEJ,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAjB,EALD,GAOP,QAAU,EACNJ,GAAGiX,KAAkB7D,KAAKD,IAC1BjT,GAAGoT,IACH8E,MAAMnB,KACF,EAAEjX,GAAG,GAAGE,GAAG,GAAGE,GAAG,EAAjB,IACA,EAAEJ,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAjB,EALE,EARX,EAnBI;AAqCf,qBAAO6J;YA5VoC;AAmX/C4L,YAAAA,GAAA7P,UAAAwP,WAAiCsD,SAAUzY,IAAO;AAAA,kBAC1Cb,IAAQ,KAAAA,OACRwB,IAAWxB,EAAAwB,UACX+X,KAAYvZ,EAAAS,YAAkBe,GAC9BC,KAAUzB,EAAAyB,SACV+X,KAAaxZ,EAAAW,aAAmBc,IAChCgY,KAAUjY,IAAWxB,EAAAS,YAAkB,GACvCiZ,KAAUjY,KAAUzB,EAAAW,aAAmB,GAE7BgZ,KAAAnX,OAAAmX,WACA,IAAA,CAACnX,OAAAmX,WACDA,KAAAnX,OAAAmX,WACAC,KAAA,CAACpX,OAAAmX,WAGX3Y,KAAQ;AAEZ,kBAAA6Y,KAAU,CAAC,EACHrZ,GAAGgB,GACHd,GAAGe,IACHb,GAAG,EAHA,GAIJ,EACCJ,GAAGgB,GACHd,GAAGe,IACHb,GAAGC,GAHJ,CAJG;AAUV,eAAC,GAAG,CAAJ,EAAA2D,QAAe,SAAU3B,IAAG;AACxBgX,gBAAAA,GAAAxP,KAAa,EACT7J,GAAG+Y,IACH7Y,GAAGmZ,GAAQhX,IAARnC,GACHE,GAAGiZ,GAAQhX,IAARjC,EAHM,CAAb;cADwB,CAA5B;AAQA,eAAC,GAAG,GAAG,GAAG,CAAV,EAAA4D,QAAqB,SAAU3B,IAAG;AAC9BgX,gBAAAA,GAAAxP,KAAa,EACT7J,GAAGqZ,GAAQhX,IAARrC,GACHE,GAAG8Y,IACH5Y,GAAGiZ,GAAQhX,IAARjC,EAHM,CAAb;cAD8B,CAAlC;AAQAiZ,cAAAA,KAAU/Z,EAAY+Z,IAAS7Z,GAAO,KAA5B;AAEV6Z,cAAAA,GAAArV,QAAgB,SAAUsV,IAAQ;AAC9BC,gBAAAA,KAAc1Y,KAAA2Y,IAASD,IAAaD,GAAAtZ,CAAtB;AACdyZ,oBAAc5Y,KAAAqR,IAASuH,GAAaH,GAAAtZ,CAAtB;AACd0Z,gBAAAA,KAAc7Y,KAAA2Y,IAASE,IAAaJ,GAAApZ,CAAtB;AACdyZ,gBAAAA,KAAc9Y,KAAAqR,IAASyH,IAAaL,GAAApZ,CAAtB;cAJgB,CAAlC;AAOIc,kBAAWuY,OACX/Y,KAAQK,KAAA2Y,IAAShZ,IAAO,IAAIK,KAAAgR,KAAU7Q,IAAWiY,OAAYM,KAAcN,GAA/C,IAA2D,CAA/E;mBAGIQ,MACZjZ,KAAQK,KAAA2Y,IAAShZ,KAAQuY,KAAYE,OAAYQ,IAAcR,GAAvD;AAGRhY,cAAAA,KAAUyY,OAENlZ,KADc,IAAdkZ,KACQ7Y,KAAA2Y,IAAShZ,KAAQS,KAAUiY,OAAY,CAACQ,KAAczY,KAAUiY,GAAhE,IAGArY,KAAA2Y,IAAShZ,IAAO,KAAKS,KAAUiY,OAAYQ,KAAcR,MAAW,CAApE;AAIZF,cAAAA,KAAaW,OACbnZ,KAAQK,KAAA2Y,IAAShZ,IAAOK,KAAAgR,KAAUmH,KAAaE,OAAYS,KAAcT,GAAjD,CAAhB;AAEZ,qBAAO1Y;YAxEuC;AA0ElD,mBAAOqV;UA5ckC,EAAZ;AA8cjClD,UAAAA,GAAAkD,cAAsBA;AAUtBlD,UAAAA,GAAAJ,iBAAyB,EACrB/S,OAAO,EAUHG,WAAW,EAOPwK,SAAS,OAOTvJ,OAAO,GAOPF,MAAM,GAONL,OAAO,KAQPkV,WAAW,MAUXhV,cAAc,IASd0X,mBAAmB,MASnBhF,OAAO,EAIHQ,SAAS,WAITC,MAAM,GA4CNlH,QAAQ,CAAA,GAMRlG,KAAK,CAAA,GAMLsG,MAAM,CAAA,GAMND,OAAO,CAAA,GAMPN,MAAM,CAAA,GAMNhG,OAAO,CAAA,EAlFJ,EAhEA,EAVR,EADc;AA4NzBsM,UAAAA,GAAA3K,UAjDAA,SAAiB4R,GAAYC,IAAS;AAClC,gBAAIC,IAAaF,EAAA5T;AACb+T,YAAAA,KAAUF,GAAA7T;AAOd8T,cAAAhH,OAAkBkH,WAAY;AAC1B,qBAAO,EAAQra,CAAA,KAAAC,QAAAJ,MAAAG,aACXwK,CAAA,KAAAvK,QAAAJ,MAAAG,UAAAwK;YAFsB;AAI9B2P,cAAAG,qBAAApQ,KAAqC,iBAArC;AACAiQ,cAAAI,yBAAArQ,KAAyC,iBAAzC;AAKAkQ,YAAAA,GAAAI,eAAuBC,WAAY;AAE/B,kBAAe,IAAX,KAAAjK,QACCsC,EAAQ,KAAArJ,KAAR,KAAuBqJ,EAAQ,KAAApJ,GAAR,IAAoB;AAAA,oBACxCD,KAAS,KAAAA,SACL,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAhB,GACJC,KAAM,KAAAA,OAAY,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAhB;AACtB,oBAAAgR,KAAe,CAAA;AACf,yBAAShY,KAAI,GAAO,IAAJA,IAAOA;AACnBgY,kBAAAA,GAAAxQ,KAAkB,KAAAsG,MAAW9G,GAAIhH,OAAM,IAAI,KAAA8N,OAAY/G,GAAM/G,GAA7D;cANwC;AAU5CgY,gBAAAA,KAAe,KAAAhR;AAEnB,mBAAA+G,KAAA9L,KAAe,KAAAQ,MAAWuV,IAAc,MAAM,IAA9C;YAf+B;AAiBnC/W,cAAM,MAAMgP,GAAuBK,GAAAJ,cAAnC;AACAC,cAASoH,GAAY,QAAQhE,EAA7B;AACApD,cAASoH,GAAY,aAAahH,EAAlC;AACAJ,cAASoH,GAAY,qBAAqB7G,CAA1C;AACAP,cAASoH,GAAY,qBAAqBvF,CAA1C;cACSuF,GAAY,aAAa9E,CAAlC;AACAtC,cAASoH,GAAY,qBAAqB1E,CAA1C;AACA1C,cAASoH,GAAY,gBAAgBnE,CAArC;AACAjD,cAASoH,GAAY,gBAAgBjE,EAArC;AACAjD,cAAKoH,GAAY,gBAAgBhE,CAAjC;AACApD,cAAKoH,GAAY,gBAAgB7D,CAAjC;AACAvD,cAAKoH,GAAY,gBAAgB1D,CAAjC;UA/CkC;QA9oBtB,GAqpDjBzD,MAAYA,IAAU,CAAA,EArpDzB;AA+rDA;AAEA,eAAOA;MAvtDmM,CAA9M;AAytDAnU,QAAgBW,GAAU,sBAAsB,CAACA,EAAS,sBAAsBA,EAAS,oBAAzC,GAAgE,SAAUmb,IAAMjb,GAAG;AA4C/Hkb,iBAASA,EAAc3a,IAAS;AAC5B,iBAAO,IAAI4a,EAAM,MAAM5a,EAAhB;QADqB;AAOhC6a,iBAASA,IAAsB;AAC3B,cAAIC,KAAQ,MACRC,KAAe,KAAA/a,QAAAyX,QAAqBuD,EAAM,KAAAhb,QAAAyX,SAAsB,CAAA,CAA5B;AACnC,eAAAvE,KAAA,MAGL,KAAAuE,QAAa,CAAA,GACbsD,GAAA3W,QAAqB,SAAU6W,GAAaxY,IAAG;AAC3CwY,cAAAC,QAAoBzY;AAEpBwY,cAAAE,MAAkB;AAClBL,YAAAA,GAAAM,SAAeH,CAAf,EAAAI,SAAA;UAJ2C,CAA/C;QAP2B;AAzC/B,YAAIpU,IAAa,QAAQ,KAAAA,aAAoB,WAAY;AACjD,cAAIC,KAAgBA,SAAUC,GAClCzF,IAAG;AACKwF,YAAAA,KAAgBE,OAAAC,kBACX,EAAEC,WAAW,CAAA,EAAb,aAA6BC,SAAS,SAAUJ,IAC7DzF,IAAG;AAAEyF,cAAAA,GAAAG,YAAc5F;YAAhB,KACS,SAAUyF,IACtBzF,IAAG;AAAE,uBAAS8F,MAAK9F;AAAOA,gBAAAA,GAAAzC,eAAiBuI,EAAjB,MAAqBL,GAAEK,MAAK9F,GAAE8F;YAArD;AACC,mBAAON,GAAcC,GAAGzF,EAAjB;UANR;AAQH,iBAAO,SAAUyF,GAAGzF,IAAG;AAEnB+F,qBAASA,IAAK;AAAE,mBAAAC,cAAmBP;YAArB;AADdD,YAAAA,GAAcC,GAAGzF,EAAjB;AAEAyF,cAAAf,YAAoB,SAAN1E,KAAa0F,OAAAO,OAAcjG,EAAd,KAAoB+F,EAAArB,YAAe1E,GAAA0E,WAAa,IAAIqB;UAH5D;QAV8B,EAAb,GAgBxCmL,IAAWnT,EAAAmT,UACXlP,IAAQjE,EAAAiE,OACRxD,IAAOT,EAAAS,MACP8a,IAAQvb,EAAAub,OAMRM,IAAkB,CAAA,GAsClBV,IAAuB,SAAU3S,IAAQ;AAOzC2S,mBAASA,EAAMhb,IAAO2b,IAAa;AAC3BT,YAAAA,KAAQ7S,GAAA5B,KAAY,MACpBzG,IACA2b,EAFQ,KAEQ;AACpBT,YAAAA,GAAAU,UAAgB;AAChB,mBAAOV;UALwB;AAN/B7T,YAAU2T,GAAO3S,EAAjB;AAkBJ2S,YAAAxS,UAAgBqT,SAAUzB,IAAY;AACU,mBAAxCsB,EAAA1U,QAAwBoT,EAAxB,MACAsB,EAAArR,KAAqB+P,EAArB,GACApH,EAASoH,IAAY,gBAAgBa,CAArC,GACIX,KAAaF,GAAA5T,WACjB8T,GAAAkB,WAAsBT,GACtBT,GAAAwB,oBAAAjE,QAAuC,CAACyC,GAAAkB,QAAD,GACvClB,GAAAyB,sBAAA1R,KAAsC,OAAtC;UAP8B;AAetC2Q,YAAAxU,UAAAwV,oBAAoCC,WAAY;AAC5C,gBAAIf,KAAQ,MACRlb,KAAQ,KAAAA;AACZ,iBAAAkc,mBAAwB;AAExB,iBAAAC,UAAe,KAAAC,UAAe,KAAAC,mBAAyB,KAAAC,mBAAwB;AAC3E,iBAAAC,YACA,KAAAA,SAAAC,YAAA;AAGJ,iBAAAjH,OAAA/Q,QAAoB,SAAU+Q,IAAQ;AAClC,kBAAIA,GAAAtB,WACA,CAACjU,GAAAI,QAAAJ,MAAAyc;AAEDvB,gBAAAA,GAAAgB,mBAAyB,MAKrBQ,KAAQnH,GAAAmH,OACRA,GAAA5Z,WACAoY,GAAAiB,UAAgB9a,KAAA2Y,IAAS1Z;kBAAK4a,GAAAiB;kBAAeO,GAAM;gBAA1B,GAA+Brb,KAAA2Y,IAAA1a,MAAe,MAAMod,EAArB,CAAxC,GAChBxB,GAAAkB,UAAgB/a,KAAAqR,IAASpS,EAAK4a,GAAAkB,SAAeM,GAAM,EAA1B,GAA+Brb,KAAAqR,IAAApT,MAAe,MAAMod,EAArB,CAAxC;YAZU,CAAtC;UAV4C;AA8BhD1B,YAAAxU,UAAAmW,cAA8BC,WAAY;AACtC,gBAAI5c,KAAQ,KAAAA;AACZqI,YAAAA,GAAA7B,UAAAmW,YAAAlW,KAAkC,IAAlC;AACA,iBAAA2F,QAAa,KAAAyQ,MAAY7c,GAAAI,QAAAJ,MAAAG,aACrBH,GAAAI,QAAAJ,MAAAG,UAAAU,SAAwC;AAC5C,iBAAAsM,QAAanN,GAAA6V,aAAmB,KAAAzJ,QAAa,KAAAgB;UALP;AAU1C4N,YAAAxU,UAAAsW,aAA6BC,SAAUpB,IAAa;AAChDA,YAAAA,KAAc7X,EAAM,EAChBkZ,QAAQ,GACRC,WAAW,EAFK,GAGjBtB,EAHW;AAKd,iBAAAC,UAAe;AACfvT,YAAAA,GAAA7B,UAAAsW,WAAArW,KAAiC,MAAMkV,EAAvC;AACA,iBAAAuB,OAAY;UARoC;AAUpD,iBAAOlC;QApFkC,EAqF3CF,EArFyB;AA4F3B,eAAOE;MArKwH,CAAnI;AAuKAhc;QAAgBW;QAAU;QAA+B,CAAA;QAAI,WAAY;AAkIrE,iBA9GqBwd,EACbC,QAAQ,EA8BJC,YAAY,UAiBZC,QAAQ,MA/CJ,GAiDRC,OAAO,EAgCHF,YAAY,MAmBZC,QAAQ,KAnDL,EAlDMH;QApBgD;MAAzE;AAoIAne,QAAgBW,GAAU,kCAAkC,CAACA,EAAS,oBAAV,GAAiC,SAAUE,IAAG;AAuCtG2d,iBAASA,EAA4BnK,IAAG;AACpC,cAAIoK,IAAS,KAAA3F,KAAA2F;AACTA,eACAvV,EAAOmL,GAAA1C,KAAO8M,EAAAC,cAAqBrK,GAAA1C,GAArB,CAAd;QAHgC;AASxCgN,iBAASA,EAAoBpH,IAAS;AAAA,cAC9BkH,IAAS,KAAA3F,KAAA2F,QACTve,IAAOqX,GAAAjX,MAAc,MACrB,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CADO;AAEX,cAAIkV,GAAQ;AACR,gBAAI7T,IAAQ1K,EAAK,IACb2K,IAAM3K,EAAK;AACf,gBAAiB,QAAb0K,EAAM,MAAyB,QAAXC,EAAI;AASxB,qBARImC,IAAO,CACHyR,EAAAC,cAAqB,EAAEld,GAAGoJ,EAAM,IACpClJ,GAAGkJ,EAAM,IACThJ,GAAG,EAFsB,CAArB,GAGA6c,EAAAC,cAAqB,EAAEld,GAAGqJ,EAAI,IAClCnJ,GAAGmJ,EAAI,IACPjJ,GAAG,EAFsB,CAArB,CAJG,GAQJ,KAAAkX,KAAA9X,MAAAmE,SAAAkF,eAAwC2C,CAAxC;UAZH;AAeZ,iBAAO9M;QAnB2B;AAhDgE,YAYlG8T,IAAWnT,GAAAmT,UACX9K,IAASrI,GAAAqI,QACTgL,IAAOrT,GAAAqT,MAMPwI,IAAkB,CAAA;AA0DtB,eAJsBkC,EACdpV,SA9CRA,SAAiBqV,IAAW;AACmB,iBAAvCnC,EAAA1U,QAAwB6W,EAAxB,MACAnC,EAAArR,KAAqBwT,EAArB,GACA7K,EAAS6K,IAAW,yBAAyBL,CAA7C,GACAtK,EAAK2K,GAAArX,WAAqB,eAAemX,CAAzC;QAJoB,EA6CNC;MA1EgF,CAA1G;AAgFA5e,QAAgBW,GAAU,kCAAkC,CAACA,EAAS,gCAAgCA,EAAS,oBAAoBA,EAAS,mBAAmBA,EAAS,mCAAmCA,EAAS,oBAAxJ,GAA+K,SAAUwd,IAAgBvd,GAAGoD,GAAQ8a,GAAQje,GAAG;AAkCvRke,iBAASA,IAAwB;AAAA,cAEzB/d,KADO8X,KACC9X,OACRI,KAFO0X,KAEG1X;AACVJ,UAAAA,GAAAsT,QAActT,GAAAsT,KAAA,KAA8B,gBAHrCwE,KAGuBoF,SAC9B9c,GAAA4d,YAAoB1d,EAAKF,GAAA4d,WAAmB,CAAxB,GACpB5d,GAAA6d,gBAAwB3d;YAAKF,GAAA6d;YAAuB;UAA5B;QANC;AAYjCC,iBAASA,EAAoB7K,IAAG;AACjByE,eACP9X,MAAAsT,KAAA,KACc,gBAFPwE,KAEPoF,QACI7J,GAAA1R,UACA0R,GAAA1R,MAAAwc,eAJGrG,KAIoBsG,UACnB/K,GAAA1R,MAAA0c,WALDvG,KAMC+E,MAAWxJ,GAAA1R,MAAA2c;QAPK;AAchCC,iBAASA,IAAa;AACPzG,eACN2F,WADM3F,KAEP2F,SAAc,IAAIe,GAFX1G,IAEO;QAHA;AAUtB2G,iBAASA,EAAoBlI,IAAS;AAGlC,iBAFWuB,KAEN9X,MAAAsT,KAAA,KAAmC,gBAF7BwE,KAEeoF,OAGnB,CAAA,IAFI3G,GAAAjX,MAHAwY,MAGoB,CAAA,EAAAtB,MAAA/P,KAAc8B,WAAW,CAAzB,CAApB;QAJuB;AAWtCmW,iBAASA,EAAwBnI,IAAS;AAEtC,cAAI,CAAC,KAAAvW,MAAAsT,KAAA,KAAmC,gBAAd,KAAA4J;AACtB,mBAAO3G,GAAAjX,MAAc,MAAM,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CAApB;AAH2B,cAKlCpJ,KAAOoJ,WAEP8H,KAAKlR,GAAK,IACVD,KAAO,CAAA;AACPyf,UAAAA,KAAW,KAAAC,gBAAqB,EAAEvP,OAH3BlQ,GAAK,GAGoB,CAArB;AACX0f,UAAAA,KAAS,KAAAD,gBAAqB,EAAEvP,OAAOgB,GAAT,CAArB;cACTsO,MAAYE;AACZ,qBAAShc,IAAI,GAAGA,IAAI8b,GAAA7b,QAAiBD,KAAK,GAAG;AAAA,kBACrCic,KAAeH,GAAS9b,IACxBkc,IAAaJ,GAAS9b,IAAI,IAC1Bmc,KAAaH,GAAOhc,IACpBoc,KAAWJ,GAAOhc,IAAI;AACF,sBAApBic,GAAa,MACK,QAAlBC,EAAW,MACO,QAAlBC,GAAW,MACK,QAAhBC,GAAS,MACT/f,GAAAmL,KAAUyU,IAAcC,GAAYE,IAEpC,CAAC,KAAKD,GAAW,IAAIA,GAAW,EAAhC,GAAqC,CAAC,GAAD,CAFrC;YATqC;AAejD,iBAAO9f;QA3B+B;AAgC1CggB,iBAASA,EAAwB3I,IAAS;AAAA,cAElCkH,KADO3F,KACE2F,QACTzd,KAFO8X,KAEC9X,OACRd,KAAOqX,GAAAjX,MAHAwY,MAIP,CAAA,EAAAtB,MAAA/P,KAAc8B,WAAW,CAAzB,CADO;AAQX,cALkB,gBANPuP,KAMPoF,QACA,CAACld,GAAAwT,WACD,CAACxT,GAAAsT,KAAA,KAGQ,SAATpU;AACA,mBAAOA;AAb2B,cAelCiB,IAAYH,GAAAI,QAAAJ,MAAAG,WACZoH,KAfOuQ,KAeH8D,UAAe5b,GAAAS,YAAkBN,EAAAU;AACrC4S,cAAQzT,GAAAwT,QAAAkB;AAjB0B,cAkBlCyK,IAAejgB,GAAK,IACpBkgB,KAAalgB,GAAK;AAElBmgB,UAAAA,KAAe,CAAA;AACK,kBAApBF,EAAa,MAAgC,QAAlBC,GAAW,OACtCpT,KAAO,CACHyR,GAAA6B,MAAa,EAAE9e,GAAG2e,EAAa,IAAIze,GAAGye,EAAa,IAAIve,GAAG,EAA7C,CAAb,GACA6c,GAAA6B,MAAa;YAAE9e,GAAG2e,EAAa;YAAIze,GAAGye,EAAa;YAAIve,GAAG2G;UAA7C,CAAb,GACAkW,GAAA6B,MAAa,EAAE9e,GAAG4e,GAAW,IAAI1e,GAAG0e,GAAW,IAAIxe,GAAG,EAAzC,CAAb,GACA6c,GAAA6B,MAAa,EAAE9e,GAAG4e,GAAW,IAAI1e,GAAG0e,GAAW,IAAIxe,GAAG2G,GAAzC,CAAb,CAJG,GAMF,KAAAwQ,SAcI,KAAA6D,WACDnI,EAAArG,KAAA6G,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,GAEAyH,EAAAtG,MAAA8G,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,MAUAyH,EAAA5M,MAAAoN,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,GAEAyH,EAAA5G,KAAAoH,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,IAZAyH,EAAA3M,IAAAmN,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,GAEAyH,EAAAzG,OAAAiH,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,MAxBAyH,EAAA5M,MAAAoN,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,GAEAyH,EAAA5G,KAAAoH,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,GAEAyH,EAAArG,KAAA6G,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,GAEAyH,EAAAtG,MAAA8G,WACAoL,GAAAhV,KAAkB2B,GAAK,IAAIA,GAAK,EAAhC,IA+BRqT,KAAevf,EAAYuf,IAAc,KAAArf,OAAY,KAAtC;AAEnB,iBAAOA,GAAAmE,SAAAkF,eAA8BgW,EAA9B;QAzE+B;AAgF1CE,iBAASA,EAAqBhJ,IAASiJ,IAAM;AAAA,cAErCxf,KADO8X,KACC9X,OACRyf,IAFO3H,KAEC2H,OACRC,IAHO5H,KAGK4H;AAChB,cAJW5H,KAIP6H,cACA3f,GAAA2U,eACA3U,GAAAsT,KAAA,KACAoM,KACAF,MACAA,GAAAI,OAAY;AACRC,gBAAiBH,EAAAI,QAAAC,WAA6B,GAA7BC,QAAA;AADT,gBAERC,KAAcjgB,GAAA2U,YAAAvH,KAAA4S,QAAA,GACd7f,IAAYH,GAAAI,QAAAJ,MAAAG;AACZ+f,YAAAA,KAAW,EACP1f,GAAGR,GAAAS,YAAkB,GACrBC,GAAGV,GAAAW,aAAmB,GACtBC,GAAGT,EAAAU,QAAkB,GACrBC,IAAKR,EAAKH,EAAAU,OAAiB,CAAtB,IACDP,EAAKH,EAAAY,cAAwB,CAA7B,EALG;AAOXof,gBAASX,GAAA7O;AAXD,gBAYRyP,KAAWX,EAAMU,IAAS,IAC1BE,KAAWZ,EAAMU,IAAS,IAG1BG,KADAC,IAAe;AAIJ,kBAAXJ,KACAC,MACAA,GAAAR,SACAQ,GAAAR,MAAAY,OACAD,IAAene,EAAc,EACzB5B,GAAG4f,GAAAR,MAAAY,GAAAhgB,GACHE,GAAG0f,GAAAR,MAAAY,GAAA9f,GACHE,GAAG,KAHsB,GAI1Bsf,IAAUA,GAAApf,EAJE;AAQfuf,YAAAA,MAAYA,GAAAT,SAAkBS,GAAAT,MAAAY,OAC9BF,KAAele;cAAc,EACzB5B,GAAG6f,GAAAT,MAAAY,GAAAhgB,GACHE,GAAG2f,GAAAT,MAAAY,GAAA9f,GACHE,GAAG,KAHsB;cAI1Bsf;cAAUA,GAAApf;YAJE;AAMnB2f,gBAAW,EACPjgB,GAAGgf,GAAAI,MAAAY,GAAAhgB,GACHE,GAAG8e,GAAAI,MAAAY,GAAA9f,GACHE,GAAG,KAHI;AAKX6f,gBAAWre,EAAcqe,GAAUP,IAAUA,GAAApf,EAAlC;AAMX,mBAAOO,KAAAgR,IAASkO,IACZE,EAAAjgB,IAAa+f,EAAA/f,IAAiB8f,KAC9BA,GAAA9f,IAAiBigB,EAAAjgB,IACjBqf,EAAArf,IAAkByf,GAAAzf,CAHf;UAjDK;AAsDhB,iBAAO+V,GAAAjX,MA/DIwY,MA+DgB,CAAA,EAAAtB,MAAA/P,KAAc8B,WAAW,CAAzB,CAApB;QAhEkC;AAqE7CmY,iBAASA,EAAyBnK,IAAS;AACvC,cAAI5F,KAAM4F,GAAAjX,MAAc,MACpB,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CADM;AAEV,iBAAO,KAAAkV,SACH,KAAAA,OAAAC,cAA0B/M,IAAK,IAA/B,IACAA;QALmC;AA1P3C,YAAIxP,IAAUvB,EAAAuB,SACVrB,IAAckD,EAAAlD,aACdsC,IAAgBY,EAAAZ,eAChBM,IAAYM,EAAAN,WACZsQ,IAAWnT,EAAAmT,UACXlP,IAAQjE,EAAAiE,OACRxD,IAAOT,EAAAS,MACP4S,IAAOrT,EAAAqT,MAMPwI,IAAkB,CAAA,GA8PlB8C,KAAiC,WAAY;AASzCA,mBAASA,GAAgB1G,IAAM;AAC3B,iBAAAA,OAAYA;UADe;AAYnC0G,UAAAA,GAAAhW,UAA0BmY,SAAUC,GAAW/C,IAAW;AACtDC,cAAAtV,QAAeqV,EAAf;AAC2C,mBAAvCnC,EAAA1U,QAAwB4Z,CAAxB,MACAlF,EAAArR,KAAqBuW,CAArB,GACA9c;cAAM;cAAM8c,EAAA7N;cAA0BoK;YAAtC,GACAyD,EAAAC,UAAAxW,KAAyB,QAAzB,GACA2I,EAAS4N,GAAW,QAAQrC,CAA5B,GACAvL,EAAS4N,GAAW,mBAAmB7C,CAAvC,GACA/K,EAAS4N,GAAW,iBAAiB1C,CAArC,GACI4C,IAAYF,EAAApa,WAChB0M,EAAK4N,GAAW,eAAerC,CAA/B,GACAvL,EAAK4N,GAAW,mBAAmBpC,CAAnC,GACAxL,EAAK4N,GAAW,mBAAmB5B,CAAnC,GACAhM,EAAK4N,GAAW,gBAAgBvB,CAAhC,GACArM,EAAK4N,GAAW,oBAAoBJ,CAApC;UAdkD;AAiC1DlC,UAAAA,GAAAhY,UAAAkX,gBAA0CqD,SAAUpQ,IAAKqQ,IAAS;AAE9D,gBAAIlJ,KADS2F,KACF3F,MACP9X,IAAQ8X,GAAA9X;AAEZ,gBAAkB,gBAAd8X,GAAAoF,QACA,CAACld,EAAAwT,WACD,CAACxT,EAAAsT,KAAA;AACD,qBAAO3C;AARmD,gBAU1DvP,KAAQD,IAAUnB,EAAAI,QAAAJ,MAAAG,UAAAiB,OAClBF,IAAOC,IAAUnB,EAAAI,QAAAJ,MAAAG,UAAAe,MACjB+f,IAAe3gB,EAAK0gB,MAAWlJ,GAAA1X,QAAAmd,MAAAF,YAC/BvF,GAAA1X,QAAAgd,OAAAC,UADe;AAEf6D,YAAAA,KAAO5gB;cAAK0gB,MAAWlJ,GAAA1X,QAAAmd,MAAAD;cACvBxF,GAAA1X,QAAAgd,OAAAE;YADO;AAdmD,gBAgB1D7J,KAAQzT,EAAAwT,QAAAkB,SACRlT,KAAWxB,EAAAwB,UACX+X,KAAYvZ,EAAAS,YAAkBe,IAC9BC,KAAUzB,EAAAyB,SACV+X,KAAaxZ,EAAAW,aAAmBc,IAEhC0f,KADAC,IAAU,GAGVC,KAAO,EAAE7gB,GAAG,GACZE,GAAG,GACHE,GAAG,EAFI,GAKP0gB,KAAc;AAClB3Q,YAAAA,KAAMmH,GAAA2F,OAAA6B,MAAkB,EAAE9e,GAAGmQ,GAAAnQ,GAAOE,GAAGiQ,GAAAjQ,GAAOE,GAAG,EAAzB,CAAlB;AACN,gBAAIkX,GAAA8D;AACA,kBAAI9D,GAAAE,UAAe;AACf,oBAAyB,SAArBvE,GAAA6E,KAAA1X,EAAAkG;AACA,yBAAO,CAAA;AAEXqa,gBAAAA,KAAUxQ,GAAAjQ,IAAQe;AAClBkP,gBAAAA,GAAAnQ,IAAQiT,GAAA6E,KAAA1X,EAAAkG,IAAAtG;AACRmQ,gBAAAA,GAAAjQ,IAAQ+S,GAAA6E,KAAA1X,EAAAkG,IAAApG;AACR6gB,gBAAAA,KAAO9N,GAAA6E,KAAA1X,EAAAkG,IAAA8R;AACP0I,gBAAAA,KAAc,CAAC7N,GAAA3M,IAAA8N;cARA,OAUd;AACD,oBAA4B,SAAxBnB,GAAA6E,KAAA1X,EAAAoM;AACA,yBAAO,CAAA;AAEXmU,gBAAAA,KAAUxQ,GAAAjQ,IAAQ8Y;AAClB7I,gBAAAA,GAAAnQ,IAAQiT,GAAA6E,KAAA1X,EAAAoM,OAAAxM;AACRmQ,gBAAAA,GAAAjQ,IAAQ+S,GAAA6E,KAAA1X,EAAAoM,OAAAtM;AACR6gB,gBAAAA,KAAO9N,GAAA6E,KAAA1X,EAAAoM,OAAA4L;AACP0I,gBAAAA,KAAc,CAAC7N,GAAAzG,OAAA4H;cARd;qBAWAkD,GAAAC;AACL,kBAAID,GAAAE,UAAe;AACf,oBAAyB,SAArBvE,GAAA6E,KAAA9X,EAAAsG;AACA,yBAAO,CAAA;qBAED6J,GAAAjQ,IAAQe;AAClBkP,gBAAAA,GAAAjQ,IAAQ+S,GAAA6E,KAAA9X,EAAAsG,IAAApG;AACRiQ,gBAAAA,GAAA/P,IAAQ6S,GAAA6E,KAAA9X,EAAAsG,IAAAlG;AACR2gB,gBAAAA,KAAO9N,GAAA6E,KAAA9X,EAAAsG,IAAA8R;AACP0I,gBAAAA,KAAc,CAAC7N,GAAA3M,IAAA8N;cARA,OAUd;AACD,oBAA4B,SAAxBnB,GAAA6E,KAAA9X,EAAAwM;AACA,yBAAO,CAAA;AAEXmU,gBAAAA,KAAUxQ,GAAAjQ,IAAQ8Y;AAClB7I,gBAAAA,GAAAjQ,IAAQ+S,GAAA6E,KAAA9X,EAAAwM,OAAAtM;AACRiQ,gBAAAA,GAAA/P,IAAQ6S,GAAA6E,KAAA9X,EAAAwM,OAAApM;AACR2gB,gBAAAA,KAAO9N,GAAA6E,KAAA9X,EAAAwM,OAAA4L;AACP0I,gBAAAA,KAAc,CAAC7N,GAAAzG,OAAA4H;cARd;qBAYDkD,GAAAE,UAAe;AACf,kBAA2B,SAAvBvE,GAAA6E,KAAA5X,EAAAyM;AACA,uBAAO,CAAA;AAEXiU,kBAAUzQ,GAAAnQ,IAAQ+Y;AAClB5I,cAAAA,GAAAnQ,IAAQiT,GAAA6E,KAAA5X,EAAAyM,MAAA3M;AACRmQ,cAAAA,GAAA/P,IAAQ6S,GAAA6E,KAAA5X,EAAAyM,MAAAvM;AACR2gB,cAAAA,KAAO9N,GAAA6E,KAAA5X,EAAAyM,MAAAyL;AAEP2I,cAAAA,KAAO,EAAE/gB,GAAG+gB,GAAA3gB,GAAQF,GAAG6gB,GAAA7gB,GAAQE,GAAG,CAAC2gB,GAAA/gB,EAA5B;YATQ,OAWd;AACD,kBAA0B,SAAtBiT,GAAA6E,KAAA5X,EAAA0M;AACA,uBAAO,CAAA;AAEXgU,kBAAUzQ,GAAAnQ,IAAQgB;AAClBmP,cAAAA,GAAAnQ,IAAQiT,GAAA6E,KAAA5X,EAAA0M,KAAA5M;AACRmQ,cAAAA,GAAA/P,IAAQ6S,GAAA6E,KAAA5X,EAAA0M,KAAAxM;AACR2gB,cAAAA,KAAO9N,GAAA6E,KAAA5X,EAAA0M,KAAAwL;YAPN;AAUY,wBAAjBqI,MAIsB,WAAjBA,IAEAnJ,GAAAC,SAIGxW,IAAMF,KAAAE,IAASH,EAAT,GACNE,KAAMD,KAAAC,IAASF,EAAT,GACN0W,GAAAE,aACAzW,IAAM,CAACA,IAEP+f,OACA/f,IAAM,CAACA,IAEX8f,KAAO,EAAE7gB,GAAG+gB,GAAA3gB,IAASW,GAAKb,GAAGY,IAAKV,GAAG,CAAC2gB,GAAA/gB,IAASe,EAAxC,KAXPggB,KAAO,EAAE/gB,GAAGa,KAAAC,IAASJ,CAAT,GAAgBR,GAAG,GAAGE,GAAGS,KAAAE,IAASL,CAAT,EAA9B,IAcW,YAAjB+f,IAEAnJ,GAAAC,SAKGyJ,KAAOngB,KAAAC,IAASF,EAAT,GAGK,IAFLC,KAAAE,IAASL,CAATugB,IAEYD,IAChB5f,KAAA,CALIP,KAAAE,IAASH,EAATsgB,GAMJ,IAAA,CAACF,KAHGngB,KAAAC,IAASJ,CAATygB,GAIXN,KAAO,EACH7gB,GAAG+gB,GAAA7gB,IAASE,IAAS2gB,GAAA3gB,IAASF,IAC9BA,GAAG6gB,GAAA3gB,IAASJ,IAAS+gB,GAAA/gB,IAASI,GAC9BA,GAAG2gB,GAAA/gB,IAASE,KAAS6gB,GAAA7gB,IAASF,EAH3B,GAKHQ,KAAQ,IAAIK,KAAA8B,KAAUke,GAAA7gB,IAAS6gB,GAAA7gB,IAAS6gB,GAAA3gB,IAAS2gB,GAAA3gB,IAAS2gB,GAAAzgB,IAASygB,GAAAzgB,CAAvD,GACZ0gB,OACAtgB,KAAQ,CAACA,KAEbqgB,KAAO,EACH7gB,GAAGQ,KAAQqgB,GAAA7gB,GAAQE,GAAGM,KAAQqgB,GAAA3gB,GAAQE,GAAGI,KAAQqgB,GAAAzgB,EAD9C,KAnBP2gB,KAAO,EAAE/gB,GAAGa,KAAAC,IAASJ,CAAT,GAAgBR,GAAG,GAAGE,GAAGS,KAAAE,IAASL,CAAT,EAA9B,IA2BN4W,GAAAC,QAIDsJ,KAAO,EACH7gB,GAAGa,KAAAE,IAASL,CAAT,IAAiBG,KAAAE,IAASH,EAAT,GACpBV,GAAGW,KAAAC,IAASF,EAAT,GACHR,GAAG,CAACS,KAAAC,IAASJ,CAAT,IAAiBG,KAAAE,IAASH,EAAT,EAHlB,IAHPmgB,KAAO,EAAE/gB,GAAGa,KAAAC,IAASJ,CAAT,GAAgBR,GAAG,GAAGE,GAAGS,KAAAE,IAASL,CAAT,EAA9B;AAUfyP,YAAAA,GAAAnQ,KAAS4gB,IAAUG,GAAA/gB,IAAS2gB,KAAUE,GAAA7gB;AACtCmQ,YAAAA,GAAAjQ,KAAS0gB,IAAUG,GAAA7gB,IAASygB,KAAUE,GAAA3gB;AACtCiQ,YAAAA,GAAA/P,KAASwgB,IAAUG,GAAA3gB,IAASugB,KAAUE,GAAAzgB;AAClCghB,gBAAY9hB,EAAY,CAAC6Q,EAAD,GACxBmH,GAAA9X,KADY,EACA;AACZkhB,YAAAA,OAWmB,IATFxe,EAAU5C,EAAY,CAC/B6Q,IACA,EAAEnQ,GAAGmQ,GAAAnQ,IAAQ+gB,GAAA/gB,GACjBE,GAAGiQ,GAAAjQ,IAAQ6gB,GAAA7gB,GACXE,GAAG+P,GAAA/P,IAAQ2gB,GAAA3gB,EAFP,GAGA,EAAEJ,GAAGmQ,GAAAnQ,IAAQ6gB,GAAA7gB,GACjBE,GAAGiQ,GAAAjQ,IAAQ2gB,GAAA3gB,GACXE,GAAG+P,GAAA/P,IAAQygB,GAAAzgB,EAFP,CAL+B,GASnCkX,GAAA9X,KATuB,CAAV,MAWbuhB,KAAO,EAAE/gB,GAAG,CAAC+gB,GAAA/gB,GAAQE,GAAG,CAAC6gB,GAAA7gB,GAAQE,GAAG,CAAC2gB,GAAA3gB,EAA9B,IAEPihB,KAAkB/hB,EAAY,CAC1B,EAAEU,GAAGmQ,GAAAnQ,GACTE,GAAGiQ,GAAAjQ,GACHE,GAAG+P,GAAA/P,EAFC,GAGA,EAAEJ,GAAGmQ,GAAAnQ,IAAQ+gB,GAAA/gB,GACjBE,GAAGiQ,GAAAjQ,IAAQ6gB,GAAA7gB,GACXE,GAAG+P,GAAA/P,IAAQ2gB,GAAA3gB,EAFP,GAGA,EAAEJ,GAAGmQ,GAAAnQ,IAAQ6gB,GAAA7gB,GACjBE,GAAGiQ,GAAAjQ,IAAQ2gB,GAAA3gB,GACXE,GAAG+P,GAAA/P,IAAQygB,GAAAzgB,EAFP,CAP0B,GAW9BkX,GAAA9X,KAXkB,GAYtB4hB,EAAAE,SAAmB,CACfD,GAAgB,GAAhBrhB,IAAuBqhB,GAAgB,GAAhBrhB,GACvBqhB,GAAgB,GAAhBnhB,IAAuBmhB,GAAgB,GAAhBnhB,GACvBmhB,GAAgB,GAAhBrhB,IAAuBqhB,GAAgB,GAAhBrhB,GACvBqhB,GAAgB,GAAhBnhB,IAAuBmhB,GAAgB,GAAhBnhB,GACvBkhB,EAAAphB,GACAohB,EAAAlhB,CANe,GAQnBkhB,EAAAE,OAAiB,MAAMF,EAAAphB,IAAcohB,EAAAE,OAAiB,KAClDF,EAAAlhB,IAAckhB,EAAAE,OAAiB,IACnCF,EAAAE,OAAiB,MAAMF,EAAAphB,IAAcohB,EAAAE,OAAiB,KAClDF,EAAAlhB,IAAckhB,EAAAE,OAAiB;AAEvC,mBAAOF;UA5MuD;AAiNlEpD,UAAAA,GAAAhY,UAAA8Y,QAAkCyC,SAAUna,IAAG3H,IAAgB;AAC3D,gBAAI6X,KAAO,KAAAA;AACX,mBAAIA,GAAA8D,WACIpa,KAAWvB,KAAiB,IAAI6X,GAAA9X,MAAAwB,UAC7B,EACHhB,GAAGgB,KAAWoG,GAAAhH,GACdF,GAAGkH,GAAAlH,GACHE,GAAGgH,GAAApH,IAAMgB,GAHN,KAMJoG;UAVoD;AAY/D,iBAAO4W;QAnRsC,EAAZ;AA2RrC,eAAOA;MAljBgR,CAA3R;AAojBAxf,QAAgBW,GAAU,2BAA2B,CAACA,EAAS,mBAAmBA,EAAS,0BAA0BA,EAAS,oBAAzE,GAAgG,SAAUqD,IAAQgf,GAAQniB,GAAG;AAY9K,YAAIwH,IAAa,QAAQ,KAAAA,aAAoB,WAAY;AACjD,cAAIC,KAAgBA,SAAUC,GAClCzF,GAAG;AACKwF,YAAAA,KAAgBE,OAAAC,kBACX,EAAEC,WAAW,CAAA,EAAb,aAA6BC,SAAS,SAAUJ,IAC7DzF,IAAG;AAAEyF,cAAAA,GAAAG,YAAc5F;YAAhB,KACS,SAAUyF,IACtBzF,IAAG;AAAE,uBAAS8F,MAAK9F;AAAOA,gBAAAA,GAAAzC,eAAiBuI,EAAjB,MAAqBL,GAAEK,MAAK9F,GAAE8F;YAArD;AACC,mBAAON,GAAcC,GAAGzF,CAAjB;UANR;AAQH,iBAAO,SAAUyF,GAAGzF,GAAG;AAEnB+F,qBAASA,KAAK;AAAE,mBAAAC,cAAmBP;YAArB;AADdD,YAAAA,GAAcC,GAAGzF,CAAjB;AAEAyF,cAAAf,YAAoB,SAAN1E,IAAa0F,OAAAO,OAAcjG,CAAd,KAAoB+F,GAAArB,YAAe1E,EAAA0E,WAAa,IAAIqB;UAH5D;QAV8B,EAAb,GAgBxC/H,IAAckD,GAAAlD;AACdkT,QAAAA,KAAWnT,EAAAmT;AA7B+J,YA8B1K9K,IAASrI,EAAAqI,QACTpE,IAAQjE,EAAAiE,OACRxD,IAAOT,EAAAS,MACP2hB,IAAWpiB,EAAAoiB;AAMXC,YAA0B,SAAU7Z,IAAQ;AAE5C6Z,mBAASA,IAAW;AAChB,mBAAkB,SAAX7Z,MAAmBA,GAAA/I,MAAa,MAAMiJ,SAAnB,KAAiC;UAD3C;AADhBlB,YAAU6a,GAAU7Z,EAApB;AAUJ6Z,YAAA1b,UAAAkQ,YAA+ByL,WAAY;AACvC9Z,YAAAA,GAAA7B,UAAAkQ,UAAApX,MAAiC,MAAMiJ,SAAvC;AACI,iBAAAvI,MAAAsT,KAAA,KACA,KAAA8O,kBAAA;UAHmC;AAU3CF,YAAA1b,UAAA4b,oBAAuCC,WAAY;AAAA,gBAE3CC,KADS/M,KACOnV,SAChBJ,KAFSuV,KAEDvV,OACR6X,IAAQvX,EAHCiV,KAGIsC,OACb7X,GAAAI,QAAAyX,MAAoB,EADZ,GAER0K,IAAY,CAAA,GAKZ1f,GACA2f,IAAa,CAAA;AAXJjN,iBAebkN,YAHYH,GAAA/F,WACH0F,EAASK,GAAAI,KAAT,IAAgCJ,GAAAI,QAAsB,IAblDnN,KAcL+F,SAAgB,MAEnBgH,GAAAzhB,SAAuB,KAAKyhB,GAAAK,iBAA+B;AAChE,iBAAK9f,IAAI,GAAGA,IAjBC0S,KAiBGqN,KAAA9f,QAAoBD,KAAK;AACrCggB,cAAAA,KAlBStN,KAkBEqN,KAAY/f;AACvB,kBAAIgV,KAASA,EAAAnB,WAAiB;AAC1B,oBAAAoM,KAASjL,EAAAkL,eAAqBlL,EAAAmL,UAC1BnL,EAAAmL,QAAcH,GAAAjiB,CAAd,IACAiiB,GAAAjiB;AACJiiB,gBAAAA,GAAAtf,QAAiBsU,EAAAnB,UAAgBoM,EAAhB;AACjBD,gBAAAA,GAAAI,WAAoBJ,GAAAI,WACfH,MAAUjL,EAAAmC,OACP8I,MAAUjL,EAAAnF,MACd;cARsB;AAW1BmQ,gBAAAA,GAAAtf,QA9BKgS,KA8BYkN;AAErBI,cAAAA,GAAAxE,WAAoBwE,GAAAxf;AACpBwf,cAAAA,GAAAvE,WAAoBuE,GAAAvf;AACpBuf,cAAAA,GAAAK,WAAoBL,GAAAtf;AACpBgf,gBAAAlY,KAAe,EACX7J,GAAGqiB,GAAAxf,OACH3C,GAAGmiB,GAAAvf,OACH1C,GAAGiiB,GAAAtf,MAHQ,CAAf;AAKAif,gBAAAnY,KAAgBwY,GAAAxf,SAAkB,CAAlC;YAvBqC;AAjB5BkS,iBA0CbiN,aAAoBA;AACpBW,YAAAA,KAAkBrjB,EAAYyiB,GAAWviB,IAAO,IAA9B;AAClB,iBAAK6C,IAAI,GAAGA,IA5CC0S,KA4CGqN,KAAA9f,QAAoBD;AAChCggB,cAAAA,KA7CStN,KA6CEqN,KAAY/f,IACvBugB,IAAiBD,GAAgBtgB,IACjCggB,GAAAxf,QAAiB+f,EAAA5iB,GACjBqiB,GAAAvf,QAAiB8f,EAAA1iB,GACjBmiB,GAAAtf,QAAiB6f,EAAAxiB;UAlD0B;AA0DnDshB,YAAAnP,iBAA0BjP,EAAMke,EAAAjP,cAAN;iBACnBmP;QAhFqC,EAiF9CF,CAjF4B;AAwF9BhP,QAAAA,GAASgP,GAAQ,kBAAkB,WAAY;AACvC,eAAAhiB,MAAAsT,KAAA,KACA,KAAA8O,kBAAA;QAFuC,CAA/C;AAMAla,UAAO8Z,EAAAxb,WAAkB,EACrB4b,mBAAmBF,EAAA1b,UAAA4b,kBADE,CAAzB;AASA,eAAOF;MA9IuK,CAAlL;AAgJAljB,QAAgBW,GAAU,iCAAiC,CAACA,EAAS,mBAAmBA,EAAS,kCAAkCA,EAAS,oBAAjF,GAAwG,SAAUqD,IAAQqgB,GAAgBxjB,GAAG;AA+BpMyjB,iBAASA,EAA2B/M,IAAS;AACzC,cACIgN,IAAUhN,GAAAjX,MADDiW,MAET,CAAA,EAAAiB,MAAA/P,KAAc8B,WAAW,CAAzB,CADU;AAGd,cAAI,CAJSgN,KAIRvV,MAAAsT,KAAA;AACD,mBAAOiQ;AAN8B,cAQrCC,IAAeC,EAAAD,cACfpjB,IARSmV,KAQCnV,SACVsjB,IAAsBriB,KAAAqM,MATb6H,KAUTqC,MAAA+L,aAA0BvjB,EAAAwjB,SAA1B,CADsB,GAEtBC,IAAe,CAAA;AACnB,cAZatO,KAYTiN;AACA,qBAAS3f,KAAI,GAAGA,KAbP0S,KAaWxV,OAAA+C,QAAsBD;AACtCghB,gBAAAxZ,KAAkB,EACd7J,GAfC+U,KAeEiN,WAAkB3f,KACrBnC,GAAGN,EAAAmc,WAhBFhH,KAiBGxV,OAAc8C,IAAdihB,UAA2BJ,GAC/B9iB,GAlBC2U,KAkBEkN,SAJW,CAAlB;AAQJtiB,cAtBSoV,KAsBGvV,MAAAI,QAAAJ,MAAAG;AAChB0jB,cAAe/jB,EAAY+jB,GAvBdtO,KAuB4BvV,OAAc,IAAxC,EAAA0B,IAAkD,SAAUC,IAAO;AAAE,mBAAQ,EAAE0B,OAAO1B,GAAAnB,GAAS8C,OAAO3B,GAAAjB,GAAS6C,OAAO5B,GAAAf,EAAzC;UAAV,CAAnE;AAvBF2U,eAwBTvQ,SAAgB7E,KAAaA,EAAAU,SAAmBV,EAAAe,SAxBvCqU,KA0BLwO,gBA1BKxO,KA2BLwO,YAAAhf,IA3BKwQ,KA2BkBvQ,KAAvB,GA3BKuQ,KA4BLwO,YAAAjf,KAAwB,EACpBkf,YAAY,GACZC,YAAY,EAFQ,CAAxB,IA5BK1O,KAiCTvQ,MAAAF,KAAkB,EACdH,QAAQtD,KAAAqR,IAAS,GAAqB,MAAjBvS,EAAAe,QAAyC,KAAjBf,EAAAe,OACzCf,EAAAU,QAAkBQ,KAAAqM,MAnCjB6H,KAmC4BkN,YAAmB,CAA9B,IAClBphB,KAAAqM,MApCC6H,KAoCUkN,YAAmB,CAA9B,CAFI,EADM,CAAlB;AAMJoB,YAAAK,WAAwB;AACpBC,cAAaX,EAAA/c,KAxCJ8O,MAyCTsO,GACA,MACA,IAHa;AAIbM,YAAW,MAA2B,QAArBA,EAAW,GAAG,OAC/BA,EAAW,KAAK,CAAC,KAAKA,EAAW,GAAG,IAAIA,EAAW,GAAG,EAAtC;AA7CP5O,eA+CT6O,aAEIA,IAjDK7O,KAiDM6O,SAAAC,OAAuB,GAjD7B9O,KAkDL6O,SAAAthB,SAAyB,CADd,EAAAoH,OACwBia,CADxB,GAGfC,EAAAE,OApDS/O,KAoDO6O,SAAAE,MApDP/O,KAqDT6O,WAAkBA;AAEtB,iBAAOb;QAxDkC;AArB7C,YAAIzjB,IAAckD,GAAAlD,aACd2jB,IAAYJ,EAAAkB,YAAAC,KAAAhe,WAEZ0M,IAAOrT,EAAAqT,MAMPwI,IAAkB,CAAA;AA+EtB,eAJmB+I,EACXjc,SAtERA,SAAiBkc,IAAiB;AACmB,iBAA7ChJ,EAAA1U,QAAwB0d,EAAxB,MACAhJ,EAAArR,KAAqBqa,EAArB,GACAxR,EAAKwR,GAAAle,WAA2B,gBAAgB8c,CAAhD;QAH0B,EAqEfmB;MA9FiL,CAAxM;AAoGAzlB,QAAgBW,GAAU,0CAA0C;QAACA,EAAS;QAAkCA,EAAS;QAAoBA,EAAS;QAA0BA,EAAS;QAAmBA,EAAS;QAAkCA,EAAS;QAAoCA,EAAS;MAAzO,GAAgQ,SAAUglB,IAAc/kB,GAAGoiB,GAAQhf,GAAQqgB,GAAgBuB,GAAW/kB,GAAG;AA6BzYglB,iBAASA,EAAe7kB,IAAOuc,IAAU;AAAA,cACjChH,KAASvV,GAAAuV,QACTuP,KAAS,EAAEC,aAAa,EAAf,GACTC,IACAniB,KAAI;AACR0S,UAAAA,GAAA/Q,QAAe,SAAUgR,IAAG;AACxBwP,YAAAA,KAAc1kB,EAAKkV,GAAApV,QAAAsiB,OAAkBnG,KAAW,IAAIhH,GAAAzS,SAAgB,IAAI0S,GAAA8F,KAA1D;AACTwJ,YAAAA,GAAOE,MAKRF,GAAOE,IAAPzP,OAAAlL,KAAgCmL,EAAhC,KAJAsP,GAAOE,MAAe,EAAEzP,QAAQ,CAACC,EAAD,GAAKyP,UAAUpiB,GAAzB,GACtBA;UAJoB,CAA5B;AAUAiiB,UAAAA,GAAAC,cAAqBliB,KAAI;AACzB,iBAAOiiB;QAhB8B;AAwQzCI,iBAASA,EAAa3O,IAAS;AAC3B,cAAIzR,KAAOyR,GAAAjX,MAAc,MACrB,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CADO;AAEP,eAAAvI,MAAAsT,QAAmB,KAAAtT,MAAAsT,KAAA,MAEnBxO,GAAAqgB,SAAc,KAAA/kB,QAAAglB,aAA0BtgB,GAAA8B,MACxC9B,GAAK,kBAAkBxE;YAAK,KAAAF,QAAAilB;YAAwB;UAA7B;AAE3B,iBAAOvgB;QARoB;AAgB/BwgB,iBAASA,EAAS/O,IAASgP,IAAOnU,IAAS;AACvC,cAAIkC,KAAO,KAAAtT,MAAAsT,QAAmB,KAAAtT,MAAAsT,KAAA;AAC1BA,UAAAA,OACA,KAAAlT,QAAAolB,sBAAmC;AAEvCjP,UAAAA,GAAA9P,KAAa,MAAM8e,IAAOnU,EAA1B;AACIkC,UAAAA,OACA,KAAAlT,QAAAolB,sBAAmC;QAPA;AAgB3CC,iBAASA,EAAgBlP,IAAS;AAE9B,mBADIpX,KAAO,CAAA,GACFumB,KAAK,GAAGA,KAAKnd,UAAAzF,QAAkB4iB;AACpCvmB,YAAAA,GAAKumB,KAAK,KAAKnd,UAAUmd;AAE7B,iBAAO,KAAAnQ,OAAAvV,MAAAsT,KAAA,IACH,KAAAqS,WAAkD,QAAlC,KAAAA,QAAA7F,QAAA8F,WAChBrP,GAAAjX,MAAc,MAAMH,EAApB;QAP0B;AA3TlC,YAAI0mB,IAAclB,GAAAne,WACdsf,IAAMlmB,EAAAkmB,KACNhmB,IAAckD,EAAAlD;AACdkT,YAAWnT,EAAAmT;AAb0X,YAcrY1S,IAAOT,EAAAS;AACP4S,YAAOrT,EAAAqT;AAgCXA,UAAK2S,GAAa,aAAa,SAAUtP,IAAS;AAC9CA,UAAAA,GAAAjX,MAAc,MAAM,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CAApB;AAEI,eAAAvI,MAAAsT,KAAA,KACA,KAAAyS,kBAAA;QAJ0C,CAAlD;AAQA7S,UAAK8O,EAAAxb,WAAkB,oBAAoB,SAAU+P,IAAS;AAC1D,iBAAShO,UAAU,GAAVyd,gBAEL,QADAzP,GAAAjX,MAAc,MAAM,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CAApB;QAFsD,CAA9D;AAKAsd,UAAAzD,oBAAgC6D,WAAY;QAAA;AAC5CJ,UAAAE,oBAAgCG,WAAY;AAAA,cACpC3Q,KAAS,MACTvV,KAAQuV,GAAAvV,OACRsiB,KAAgB/M,GAAAnV,SAChBS,KAAQyhB,GAAAzhB,OAIRD,MAHQ0hB,GAAA/F,WACH+F,GAAAI,SAAuB,IACxBnN,GAAA+F,UACSza,MAASyhB,GAAAK,iBAA+B,KACrDwD,KAAc5Q,GAAA6Q,cAAqB,IAAI,MAAM,GAC7CC;AACIrmB,UAAAA,GAAAK,YAAkB,CAACkV,GAAAqC,MAAAsM,aACnBiC,MAAe;AAEQ,oBAA3B7D,GAAAgE,aACA1lB,KAAI;AAERA,UAAAA,MAAM0hB,GAAAK,iBAA+B;AACrCpN,UAAAA,GAAAqN,KAAApe,QAAoB,SAAU7C,IAAO;AAEjCA,YAAAA,GAAAqkB,gBAAsB;AACtB,gBAAgB,SAAZrkB,GAAAjB,GAAkB;AAAA,kBACd6lB,KAAc5kB,GAAA4E,WAAiBigB,IAAa7kB,GAAA6kB,YAGIC;AAAnCC,eAAC,CAAC,KAAK,OAAN,GAAgB,CAAC,KAAK,QAAN,CAAjBA,EAEbliB,QAAmB,SAAU+C,IAAG;AAC5Bkf,oBAAmBF,GAAYhf,GAAE,MAAM4e;AACpB,oBAAnBM,MAIAF,GAAYhf,GAAE,OACVgf,GAAYhf,GAAE,MAAM4e,IACxBI,GAAYhf,GAAE,MAAM,CAAC4e,IACrBM,IAAmB;AAElBA,oBAAmBF,GAAYhf,GAAE,MAClCgO,GAAOhO,GAAE,KAAK,QAAdsV,OAEsB,MAAtB0J,GAAYhf,GAAE,QACdgf,GAAYhf,GAAE,MACVgO,GAAOhO,GAAE,KAAK,QAAdsV,MACI0J,GAAYhf,GAAE;AAE1B,oBAEuB,MAAtBgf,GAAYhf,GAAE,QACVgf,GAAYhf,GAAE,OACXgO,GAAOhO,GAAE,KAAK,QAAdsV,OACA0J,GAAYhf,GAAE,MAAMgf,GAAYhf,GAAE,OAC9B4e,KAAc;AAEtB,2BAAS7f,KAAOigB;AAEZA,oBAAAA,GAAYjgB,KAAe,QAARA,IAAc,QAAQ;AAI7C3E,kBAAAA,GAAAqkB,gBAAsB;gBARA;cAzBM,CAAhC;AAqCoB,yBAApBrkB,GAAAglB,cACAhlB,GAAAglB,YAAkB;AAEtBJ,cAAAA,GAAA3lB,IAAgBA;AAChB2lB,cAAAA,GAAA1lB,QAAoBA;AACpB0lB,cAAAA,GAAAtmB,iBAA6B;AAE7BomB,cAAAA,KAAa,EACT7lB,GAAG+lB,GAAA/lB,IAAgB+lB,GAAAna,QAAoB,GACvC1L,GAAG6lB,GAAA7lB,GACHE,GAAGA,KAAIC,KAAQ,EAHN;AAMTb,cAAAA,GAAAK,aACAgmB,GAAA7lB,IAAe+lB,GAAAra,QACfma,GAAA3lB,IAAeiB,GAAAilB;AAInBjlB,cAAAA,GAAAklB,SAAe/mB;gBAAY,CAACumB,EAAD;gBAAcrmB;gBAAO;gBAAM;cAAvC,EAA8C;AAE7DwmB,kBAAa1mB,EAAY,CAAC,EAClBU,GAAGgmB,EAAW,IACd9lB,GAAG8lB,EAAW,IACd5lB,GAAGA,KAAIC,KAAQ,EAHG,CAAD,GAIjBb,IAAO,MAAM,KAJR,EAIe;AAC5B2B,cAAAA,GAAA6kB,aAAmB,CAACA,EAAAhmB,GAAcgmB,EAAA9lB,CAAf;YArED;UAHW,CAArC;AA4EA6U,UAAAA,GAAA3U,IAAWA;QA9F6B;AAgG5CsS,UAAK2S,GAAa,WAAW,SAAUtP,IAAS;AAC5C,cAAK,KAAAvW,MAAAsT,KAAA,GAGA;AAAA,gBAEGwT,KADOve,UACK,IACZwe,KAAU,KAAAnP,OACVoP,KAAW,MACXC,KAAa,KAAArP,MAAAsM;AACb4B,kBACIgB,KACAE,GAAApE,KAAApe,QAAsB,SAAU7C,IAAO;AACnB,uBAAZA,GAAAjB,MACAiB,GAAAuK,SAAevK,GAAA4E,UAAA2F,QACfvK,GAAAulB,SAAevlB,GAAA4E,UAAA7F,GACfiB,GAAA4E,UAAA2F,SAAyB,GACpB+a,OAEGtlB,GAAA4E,UAAA7F,IADAiB,GAAAwlB,SAEIxlB,GAAA2B,QACIyjB,GAAArQ,UAAkB/U,GAAAwlB,MAAlB,IAIJxlB,GAAA2B,SACK3B,GAAAylB,WACG,CAACzlB,GAAAuK,SACDvK,GAAAuK;YAhBW,CAAvC,KAuBA8a,GAAApE,KAAApe,QAAsB,SAAU7C,IAAO;AACnC,kBAAgB,SAAZA,GAAAjB,MACAiB,GAAA4E,UAAA2F,SAAyBvK,GAAAuK,QACzBvK,GAAA4E,UAAA7F,IAAoBiB,GAAAulB,QAEhBvlB,GAAAgkB;AACAhkB,gBAAAA,GAAAgkB,QAAchkB,GAAAqkB,gBACV,SACA,WAAWrkB,GAAA4E,WAAiBygB,GAAA5mB,QAAAwP,SAFhC;YAN2B,CAAvC,GAaA,KAAAyX,eAAA;UA5CP;AAFD9Q,YAAAA,GAAAjX,MAAc,MAAM,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CAApB;QAFwC,CAAhD;AAwDA2K,UAAK2S,GAAa,aAAa,SAAUtP,IAASjR,IAAMgiB,IAAOC,IAAaC,IAASjZ,IAAQ;AAC5E,gCAATjJ,MAAuC,kBAATA,MAC1B,KAAAtF,MAAAsT,KAAA,MACI,KAAKhO,OACL,OAAO,KAAKA,KAEZiJ,OACK,KAAAvO,MAAAynB,gBACD,KAAAznB,MAAAynB,cACI,KAAAznB,MAAAmE,SAAAiH,EAAsB,aAAtB,EAAArG,IAAyCwJ,EAAzC,IAER,KAAKjJ,MAAQ,KAAAtF,MAAAynB,aACb,KAAAznB,MAAAynB,YAAA3iB,KAA4B,KAAA4iB,WAAA,CAA5B,GACA,KAAKpiB,IAALqiB,UAAqB,MACR,YAATriB,OACAiD,UAAU,KAAK;AAM/B,iBAAOgO,GAAAjX,MAAc,MAAMqI,MAAAnB,UAAAgQ,MAAA/P,KAA2B8B,WAAW,CAAtC,CAApB;QArBkF,CAA7F;AAyBA2K,UAAK2S,GAAa,cAAc,SAAUtP,IAASqR,IAAK;AACpD,cAAIrS,KAAS;AACTA,UAAAA,GAAAvV,MAAAsT,KAAA,KACAiC,GAAAqN,KAAApe,QAAoB,SAAU7C,IAAO;AACjCA,YAAAA,GAAAsS,UAAgBtS,GAAAvB,QAAA6T,UAAwB2T,KACrB,gBAAf,OAAOA,KACH,CAACtnB,EAAKiV,GAAAtB,SAAgBtS,GAAAsS,OAArB,IAAsC2T;AAC/CrS,YAAAA,GAAAnV,QAAAwiB,KAAoBrN,GAAAqN,KAAA5b,QAAoBrF,EAApB,KAChBA,GAAAvB;AACAuB,YAAAA,GAAAgkB,WACAhkB,GAAAgkB,QAAA7gB,KAAmB,EACfkG,YAAY4c,KAAM,YAAY,SADf,CAAnB;UAP6B,CAArC;AAaJrR,UAAAA,GAAAjX,MAAc,MAAMqI,MAAAnB,UAAAgQ,MAAA/P,KAA2B8B,WAAW,CAAtC,CAApB;QAhBoD,CAAxD;AAkBAyK,UAAS2R,IAAc,aAAa,WAAY;AAC5C,cAAI,KAAA3kB,MAAAsT,KAAA,GAAmB;AAAA,gBAEfgP,KAAgB,KAAAliB,SAChBkmB,KAAWhE,GAAAgE,UACX/J,KAAW+F,GAAA/F,UACXsL,KAAiB,KAAAjQ,MAAAxX,QAAAynB,gBACjBjnB,KAAI;AAER,gBAA0B,gBAApB,OAAO0lB,MAA6BA,IAAW;AAC7CxB,cAAAA,KAASD,EAAe,KAAA7kB,OACxBuc,EADS;AAETmG,cAAAA,KAAQJ,GAAAI,SAAuB;AAG/B,mBAAK7f,KAAI,GAAGA,KAAIiiB,GAAOpC,IAAPnN,OAAAzS,UACRgiB,GAAOpC,IAAPnN,OAAqB1S,QAAO,MADSA;AAA7C;AAKJjC,cAAAA,KAAK,MAAMkkB,GAAAC,cAAqBD,GAAOpC,IAAPuC,aAC3B4C,KAAiBhlB,KAAI,CAACA;AAGtB,mBAAA8U,MAAAuM,aACDtjB,KAA0B,KAArBkkB,GAAAC,cAA2BnkB;YAhBa;AAmBrD0hB,YAAAA,GAAAzhB,QAAsByhB,GAAAzhB,SAAuB;AA1BhC0U,iBA2Bb3U,IA3Ba2U,KA2BF3U,KAAY;AACvB0hB,YAAAA,GAAA3d,SAAuB/D;UA7BJ;QADqB,CAAhD;AA8EAsS,UAAK2S,GAAa,gBAAgBX,CAAlC;AACAhS,UAAK2S,GAAa,YAAYP,CAA9B;AACApS,UAAK2S,EAAAiC,WAAAthB,WAAkC,mBAAmBif,CAA1D;AACIpC,UAAAkB,YAAAwD,gBACIC,IAAmB3E,EAAAkB,YAAA0D,YAAAzhB,WACvB0M,EAAK8U,GAAkB,gBAAgB9C,CAAvC,GACAhS,EAAK8U,GAAkB,YAAY1C,CAAnC,GACApS,EAAK8U,EAAAF,WAAAthB,WAAuC,mBAAmBif,CAA/D,GACAuC,EAAAE,YAA6BrC,EAAAqC,WAC7BF,EAAAG,aAA8BtC,EAAAsC;AAElCjV,UAAK8O,EAAAxb,WAAkB,kBAAkB,SAAU+P,IAAS5U,IAAOymB,IAAWhoB,IAASioB,IAAS;AAC5F,cAAIroB,KAAQ,KAAAA;AAGZI,UAAAA,GAAA4lB,gBAAwBrkB,GAAAqkB;AAExB,cAAIhmB,GAAAsT,KAAA,KACA,KAAAgV,GAAQ,QAAR,GAAmB;AAAA,gBAEfhG,KADS/M,KACOnV,SAChBmoB,KAASjoB,EAAKF,GAAAmoB,QAAgB,CAAC,CAFtBhT,KAEuBnV,QAAAmc,QAAvB,GACTpc,IAAYH,GAAAI,QAAAJ,MAAAG,WACZqoB,IAAU7mB,GAAA8mB,aAAmB,KAAK;AAClCC,YAAAA,KAAa,EACTloB,GAAG6nB,GAAA7nB,IAAYgoB,GACf9nB,GAAG2nB,GAAA3nB,GACHE,GARK2U,KAQF3U,IAAW0hB,GAAAzhB,QAAsB,EAH3B;AAKbb,YAAAA,GAAAK,aAIIkoB,OACAF,GAAAjc,QAAgB,GAChBsc,GAAAloB,KAAgBmB,GAAA4E,UAAA2F,SAAyB,IAKtB,MAAnB/L,EAAAiB,SAA4C,OAAnBjB,EAAAiB,UACzBsnB,GAAAhoB,KAAgBiB,GAAA4E,UAAA6F;AAIxBsc,YAAAA,KAAa5oB,EAAY,CAAC4oB,EAAD,GAAc1oB,IAAO,MAAM,KAAvC,EAA8C;AAC3DqoB,YAAAA,GAAA7nB,IAAYkoB,GAAAloB,IAAegoB;AAE3BH,YAAAA,GAAA3nB,IAAYiB,GAAAqkB,gBAAsB,OAAO0C,GAAAhoB;UA9BtB;AAgCvB6V,UAAAA,GAAAjX,MAAc,MAAM,CAAA,EAAAkX,MAAA/P;YAAc8B;YAAW;UAAzB,CAApB;QAvC4F,CAAhG;AA0CA2K,UAAK0R,EAAApe,WAAqB,eAAe,SAAU+P,IAASoS,IAAe;AACvE,cAAIC,KAAWrS,GAAAjX,MAAc,MACzB,CAAA,EAAAkX,MAAA/P,KAAc8B,WAAW,CAAzB,CADW,GAIXvI,KAAQ,KAAA8X,KAAA9X,OACR6oB,KAASF,GAAAvc;AACb,cAAIpM,GAAAsT,KAAA,KAHYwV,KAGI1iB,MAAgB;AAEhC,gBAAI2iB,KAAgB,CALRD,KAKU1iB,KAAD4iB,MAAuB,GAAvB,EAA4B,IAC7CC,KAAejpB,GAAAuV,OAAawT;AAC5B5oB,YAAAA,KAAYH,GAAAI,QAAAJ,MAAAG;AAIZ8oB,YAAAA,MACAA,cAAwB5F,EAAAkB,YAAA2E,WACpBR,KAAa,EACTloB,GAAGooB,GAAApoB,KAAcR,GAAAK,WAAiBuoB,GAAA1c,SAAkB2c,KAAS,IAC7DnoB,GAAGkoB,GAAAloB,GACHE,GAAGqoB,GAAA7oB,QAAAS,QAA6B,EAHvB,GAKbb,GAAAK,aAGAuoB,GAAAxc,QAAiB,GAIM,MAAnBjM,GAAAiB,SAA4C,OAAnBjB,GAAAiB,UACzBsnB,GAAAhoB,KAAgBmoB,MAGxBH,KAAa5oB,EAAY,CAAC4oB,EAAD,GAAc1oB,IAAO,MAAM,KAAvC,EAA8C,IAC3D4oB,GAAApoB,IAAakoB,GAAAloB,IAAeqoB,KAAS,GACrCD,GAAAloB,IAAagoB,GAAAhoB;UA5Be;AA+BpC,iBAAOkoB;QAtCgE,CAA3E;AA+IA;AAEA,eAAOjE;MAphBkY,CAA7Y;AAshBA3lB;QAAgBW;QAAU;QAA8B,CAACA,EAAS,gCAAV;QAA6C,SAAU0jB,IAAgB;AAY3H,cAAIhc,IAAa,QAAQ,KAAAA,aAAoB,WAAY;AACjD,gBAAIC,KAAgBA,SAAUC,GAClCzF,IAAG;AACKwF,cAAAA,KAAgBE,OAAAC,kBACX,EAAEC,WAAW,CAAA,EAAb,aAA6BC,SAAS,SAAUJ,IAC7DzF,IAAG;AAAEyF,gBAAAA,GAAAG,YAAc5F;cAAhB,KACS,SAAUyF,IACtBzF,IAAG;AAAE,yBAAS8F,KAAK9F;AAAOA,kBAAAA,GAAAzC,eAAiBuI,CAAjB,MAAqBL,GAAEK,KAAK9F,GAAE8F;cAArD;AACC,qBAAON,GAAcC,GAAGzF,EAAjB;YANR;AAQH,mBAAO,SAAUyF,GAAGzF,IAAG;AAEnB+F,uBAASA,IAAK;AAAE,qBAAAC,cAAmBP;cAArB;AADdD,cAAAA,GAAcC,GAAGzF,EAAjB;AAEAyF,gBAAAf,YAAoB,SAAN1E,KAAa0F,OAAAO,OAAcjG,EAAd,KAAoB+F,EAAArB,YAAe1E,GAAA0E,WAAa,IAAIqB;YAH5D;UAV8B,EAAb;AAgBxCshB,UAAAA,KAAW9F,GAAAkB,YAAA6E,IAAA5iB,UAAAshB;AAMf,cAAIuB,IAAgBF,GAAA3iB,UAAA8iB;AAyCpB,iBAnCgC,SAAUjhB,IAAQ;AAE9CkhB,qBAASA,IAAa;AAMlB,kBAAIrO,KAAmB,SAAX7S,MAAmBA,GAAA/I,MAAa,MACxCiJ,SAD2B,KACb;AAClB2S,cAAAA,GAAA3F,SAAe;AACf,qBAAO2F;YATW;AADlB7T,cAAUkiB,GAAYlhB,EAAtB;AAsBJkhB,cAAA/iB,UAAA8iB,WAAgCE,WAAY;AACxC,qBAAO,KAAAjU,OAAAvV,MAAAsT,KAAA,IACH,CAAA,IAAK+V,EAAA/pB,MAAoB,MAAMiJ,SAA1B;YAF+B;AAI5C,mBAAOghB;UA3BuC,EA4BhDJ,EA5B8BI;QAxC2F;MAA/H;AA6EAvqB,QAAgBW,GAAU,+BAA+B,CAACA,EAAS,oBAAoBA,EAAS,+BAA+BA,EAAS,kCAAkCA,EAAS,oBAA1H,GAAiJ,SAAUC,IAAG2pB,GAAYlG,GAAgBxjB,GAAG;AAYlP,YAAIwH,IAAa,QAAQ,KAAAA,aAAoB,WAAY;AACjD,cAAIC,KAAgBA,SAAUC,GAClCzF,GAAG;AACKwF,YAAAA,KAAgBE,OAAAC,kBACX,EAAEC,WAAW,CAAA,EAAb,aAA6BC,SAAS,SAAUJ,IAC7DzF,IAAG;AAAEyF,cAAAA,GAAAG,YAAc5F;YAAhB,KACS,SAAUyF,IACtBzF,IAAG;AAAE,uBAAS8F,KAAK9F;AAAOA,gBAAAA,GAAAzC,eAAiBuI,CAAjB,MAAqBL,GAAEK,KAAK9F,GAAE8F;YAArD;AACC,mBAAON,GAAcC,GAAGzF,CAAjB;UANR;AAQH,iBAAO,SAAUyF,GAAGzF,GAAG;AAEnB+F,qBAASA,IAAK;AAAE,mBAAAC,cAAmBP;YAArB;AADdD,YAAAA,GAAcC,GAAGzF,CAAjB;AAEAyF,cAAAf,YAAoB,SAAN1E,IAAa0F,OAAAO,OAAcjG,CAAd,KAAoB+F,EAAArB,YAAe1E,EAAA0E,WAAa,IAAIqB;UAH5D;QAV8B,EAAb,GAgBxC1G,IAAUvB,GAAAuB,SACV2kB,IAAMlmB,GAAAkmB;AAEN5d,QAAAA,KAASrI,EAAAqI;AAAb,YACI5H,IAAOT,EAAAS;AAMPmpB,YAA6B,SAAUphB,IAAQ;AAE/CohB,mBAASA,IAAc;AACnB,mBAAkB,SAAXphB,MAAmBA,GAAA/I,MAAa,MAAMiJ,SAAnB,KAAiC;UADxC;AADnBlB,YAAUoiB,GAAaphB,EAAvB;AAaJohB,YAAAjjB,UAAAkjB,WAAiCC,WAAY;AACzCthB,YAAAA,GAAA7B,UAAAkjB,SAAApqB,MAAgC,MAAMiJ,SAAtC;AACI,iBAAAvI,MAAAsT,KAAA,KAEA,KAAAsW,OAAY,KAAAjO,aAAkB,IAA9B;UAJqC;AAU7C8N,YAAAjjB,UAAAE,UAAgCmjB,SAAU/C,GAAM;AAC5C,gBAAK,KAAA9mB,MAAAsT,KAAA,GAGA;AAAA,kBACG1D,IAAY,KAAAxP,QAAAwP;AAEZV,kBAAAA,KAAS,KAAAA;AAHZ,kBAIGlK,IAAQ,KAAAA,OACR+e,IAAc,KAAAA;AACd+B,oBACkB,SAAdlW,MACAA,IAAY,CAAA,IAGZkX,KAEA9hB,EAAA8kB,gBAAsBxpB,EAAK0E,EAAA8kB,eAAqB9kB,EAAAgf,UAA1B,GACtBhf,EAAA+kB,gBAAsBzpB,EAAK0E,EAAA+kB,eAAqB/kB,EAAAif,UAA1B,GACtBvf,KAAU,EACNsf,YAAY9U,GAAO,IACnB+U,YAAY/U,GAAO,IACnB8a,QAAQ,MACRC,QAAQ,KAJF,GAMVjlB,EAAAF,KAAWJ,EAAX,GACIqf,MACAA,EAAAmG,cAA0BllB,EAAAklB,aAC1BnG,EAAAjf,KAAiBJ,EAAjB,OAKJA,KAAU,EACNsf,YAAYhf,EAAA8kB,eACZ7F,YAAYjf,EAAA+kB,eACZC,QAAQ,GACRC,QAAQ,EAJF,GAMVjlB,EAAA0B,QAAchC,IAASkL,CAAvB,GACImU,KACAA,EAAArd,QAAoBhC,IAASkL,CAA7B;YArCX;AAFDvH,cAAAA,GAAA7B,UAAAE,QAAApH,MAA+B,MAAMiJ,SAArC;UAFwC;AAkDhDkhB,YAAAjjB,UAAA6gB,iBAAuC8C,WAAY;AAC/C,gBAAI,KAAAnqB,MAAAsT,KAAA,GAAmB;AACnB,kBAEI8W,IAFS7U,KACDvV,MACMI,QAAAJ,MAAAG;AAFLoV,mBAGbqN,KAAApe,QAAoB,SAAU7C,IAAO;AAAA,oBAC7B4E,IAAY5E,GAAA4E,WACZsK,KAAItK,EAAAsK,GAIJ4B,KAAOlM,EAAAqD,QAAkBrD,EAAAsD,OAAiB;AAC1CwgB,gBAAAA,KAAgB1oB,GAAA0oB;AAPa,oBAQ7BC,KAAqBD,GAAAC,mBACrBC,KAAW,CAAC1Z,MAAK,IAAIxP,KAAAC,KALdiF,EAAAnF,SAAmBgpB,EAAAhpB,SAAqBD,CAK1B,KAAgBE,KAAAE,IAASkR,CAAT,GACrC+V,KAAU3X,MAAKxP,KAAAC,KALRiF,EAAArF,QAAkBkpB,EAAAlpB,QAAoBC,CAK9B,IAAe,KAAKE,KAAAC,IAASmR,CAAT;AAEvC,iBACI4X,GAAAG,SACAF,GAAAG,SACAH,GAAAI,eAHJ,EAAAlmB,QAIU,SAAUtB,IAAa;AAC7BA,kBAAAA,GAAA1C,KAAiBgoB;AACjBtlB,kBAAAA,GAAAxC,KAAiB6pB;gBAFY,CAJjC;cAZiC,CAArC;YAJmB;AA0BvBliB,YAAAA,GAAA7B,UAAA6gB,eAAA/nB,MAAsC,MAAMiJ,SAA5C;UA3B+C;AAgCnDkhB,YAAAjjB,UAAA0e,eAAqCyF,SAAUhpB,GAAO;AAAA,gBAC9CmD,IAAOuD,GAAA7B,UAAA0e,aAAA5lB,MAAoC,MAC3CiJ,SADO,GAEPnI,KAAU,KAAAA;AACV,iBAAAJ,MAAAsT,KAAA,KAAqB,CAAC,KAAAtT,MAAA4E,eACtBE,EAAAqgB,SAAc/kB,GAAAglB,aAAqBzjB,EAAAgC,SAAe,KAAAA,OAClDmB,EAAK,kBAAkBxE,EAAKF,GAAAilB,WAAmB,CAAxB;AAE3B,mBAAOvgB;UAR2C;AAatD2kB,YAAAjjB,UAAAkQ,YAAkCkU,WAAY;AAC1CviB,YAAAA,GAAA7B,UAAAkQ,UAAApX,MAAiC,MAAMiJ,SAAvC;AAEA,gBAAK,KAAAvI,MAAAsT,KAAA,GAAL;AAH0C,kBAMtCiC,IAAS,MACT+M,IAAgB/M,EAAAnV,SAChBS,KAAQyhB,EAAAzhB,SAAuB,GAC/BV,IAAYoV,EAAAvV,MAAAI,QAAAJ,MAAAG,WACZiB,IAAQjB,EAAAiB,OACRF,KAAOf,EAAAe,MACPN,KAAI0hB,EAAA/F,YACC+F,EAAAI,SAAuB,KAAK7hB,KAC7B0U,EAAAmQ,KAAY7kB;AACpBD,cAAAA,MAAKC,KAAQ;AACkB,wBAA3ByhB,EAAAgE,aACA1lB,KAAI;AAER2U,gBAAAqN,KAAApe,QAAoB,SAAU7C,IAAO;AAAA,oBAC7B4E,KAAY5E,GAAA4E;AAEhB5E,gBAAAA,GAAAglB,YAAkB;AAClBpgB,gBAAAA,GAAA3F,IAAcA;AACd2F,gBAAAA,GAAA1F,QAA0B,OAARA;AAClB0F,gBAAAA,GAAAnF,QAAkBA;AAClBmF,gBAAAA,GAAArF,OAAiBA;AACjBqF,gBAAAA,GAAA2I,SAAmBqG,EAAArG;AACnBqC,gBAAAA,MAAShL,GAAAsD,MAAgBtD,GAAAqD,SAAmB;AAC5CjI,gBAAAA,GAAAkpB,oBAA0B,EACtB7G,YAAY3iB,KAAAqM,MAAWrM,KAAAC,IAASiQ,EAAT,IACnB+Q,EAAAwI,eACAzpB,KAAAC,IAASF,IAAQD,CAAjB,CAFQ,GAGZ8iB,YAAY5iB,KAAAqM,MAAWrM,KAAAE,IAASgQ,EAAT,IACnB+Q,EAAAwI,eACAzpB,KAAAC,IAASF,IAAQD,CAAjB,CAFQ,EAJU;cAVO,CAArC;YAhBA;UAH0C;AA0C9CsoB,YAAAjjB,UAAAukB,cAAoCC,WAAY;AAC5C3iB,YAAAA,GAAA7B,UAAAukB,YAAAzrB,MAAmC,MAAMiJ,SAAzC;AAEK,iBAAAvI,MAAAsT,KAAA,KAGL,KAAAvT,OAAAyE,QAAoB,SAAU7C,IAAO;AAC7BA,cAAAA,GAAAgkB,WACA,CAAC,OAAO,OAAO,SAAS,OAAxB,EAAAnhB,QAAyC,SAAUkK,GAAM;AACjD/M,gBAAAA,GAAAgkB,YACAhkB,GAAAgkB,QAAcjX,GAAdoR,QAAAne,QAAoCA;cAFa,CAAzD;YAF6B,CAArC;UAN4C;AAgBhD,iBAAO8nB;QAjLwC,EARnCpG,EAAAkB,YAAA6E,GAQiB;AAmLjClhB,QAAAA,GAAOuhB,EAAAjjB,WAAuB,EAC1BshB,YAAYyB,EADc,CAA9B;AAuBA;AAEA,eAAOE;MAlP2O,CAAtP;AAoPAzqB;QAAgBW;QAAU;QAAoC,CAACA,EAAS,+BAA+BA,EAAS,gCAAgCA,EAAS,gCAA3F;QAA8H,SAAU4pB,IAAYE,GAAapG,GAAgB;AAsB3OA,YAAAkB,YAAA6E,IAAA5iB,UAAAshB,WAAAthB,UAAA8iB,WACgBC,GAAA/iB,UAAA8iB;AAChBjG,YAAAkB,YAAA6E,MAAiCK;QAxB0M;MAA/O;AA2BAzqB,QAAgBW,GAAU,sCAAsC,CAACA,EAAS,oCAAoCA,EAAS,oBAAvD,GAA8E,SAAUsrB,IAAeprB,GAAG;AAYtK,YAAIwH,IAAa,QAAQ,KAAAA,aAAoB,WAAY;AACjD,cAAIC,KAAgBA,SAAUC,GAClCzF,GAAG;AACKwF,YAAAA,KAAgBE,OAAAC,kBACX,EAAEC,WAAW,CAAA,EAAb,aAA6BC,SAAS,SAAUJ,IAC7DzF,GAAG;AAAEyF,cAAAA,GAAAG,YAAc5F;YAAhB,KACS,SAAUyF,IACtBzF,GAAG;AAAE,uBAAS8F,KAAK9F;AAAOA,kBAAAzC,eAAiBuI,CAAjB,MAAqBL,GAAEK,KAAK9F,EAAE8F;YAArD;AACC,mBAAON,GAAcC,GAAGzF,CAAjB;UANR;AAQH,iBAAO,SAAUyF,GAAGzF,GAAG;AAEnB+F,qBAASA,KAAK;AAAE,mBAAAC,cAAmBP;YAArB;AADdD,YAAAA,GAAcC,GAAGzF,CAAjB;AAEAyF,cAAAf,YAAoB,SAAN1E,IAAa0F,OAAAO,OAAcjG,CAAd,KAAoB+F,GAAArB,YAAe1E,EAAA0E,WAAa,IAAIqB;UAH5D;QAV8B,EAAb,GAgBxChE,IAAUhE,EAAAgE;AAwCd,eAlCoC,SAAUwE,IAAQ;AAElD6iB,mBAASA,IAAiB;AAMtB,gBAAIhQ,IAAmB,SAAX7S,MAAmBA,GAAA/I,MAAa,MACxCiJ,SAD2B,KACb;AAClB2S,cAAA9a,UAAgB;AAChB8a,cAAA3F,SAAe;AACf,mBAAO2F;UAVe;AADtB7T,YAAU6jB,GAAgB7iB,EAA1B;AAkBJ6iB,YAAA1kB,UAAA2kB,eAAwCC,WAAY;AAChD/iB,YAAAA,GAAA7B,UAAA2kB,aAAA7rB,MAAoC,MAAMiJ,SAA1C;AACK1E,cAAQ,KAAAjD,CAAR,MACD,KAAAA,IAAS;AAEb,mBAAO;UALyC;AAOpD,iBAAOsqB;QA1B2C,EA2BpDD,GAAAzkB,UAAAshB,UA3BkCoD;MAlCkI,CAA1K;AAsEAlsB,QAAgBW,GAAU,uCAAuC;QAACA,EAAS;QAAmBA,EAAS;QAAuCA,EAAS;QAAoCA,EAAS;QAAkCA,EAAS;MAA9K,GAAqM,SAAUqD,IAAQkoB,GAAgBD,GAAe5H,IAAgBxjB,GAAG;AAYtU,YAAIwH,IAAa,QAAQ,KAAAA,aAAoB,WAAY;AACjD,cAAIC,KAAgBA,SAAUC,GAClCzF,GAAG;AACKwF,YAAAA,KAAgBE,OAAAC,kBACX,EAAEC,WAAW,CAAA,EAAb,aAA6BC,SAAS,SAAUJ,IAC7DzF,IAAG;AAAEyF,cAAAA,GAAAG,YAAc5F;YAAhB,KACS,SAAUyF,IACtBzF,IAAG;AAAE,uBAAS8F,KAAK9F;AAAOA,gBAAAA,GAAAzC,eAAiBuI,CAAjB,MAAqBL,GAAEK,KAAK9F,GAAE8F;YAArD;AACC,mBAAON,GAAcC,GAAGzF,CAAjB;UANR;AAQH,iBAAO,SAAUyF,GAAGzF,GAAG;AAEnB+F,qBAASA,IAAK;AAAE,mBAAAC,cAAmBP;YAArB;AADdD,YAAAA,GAAcC,GAAGzF,CAAjB;AAEAyF,cAAAf,YAAoB,SAAN1E,IAAa0F,OAAAO,OAAcjG,CAAd,KAAoB+F,EAAArB,YAAe1E,EAAA0E,WAAa,IAAIqB;UAH5D;QAV8B,EAAb,GAgBxC5E,IAAsBD,GAAAC;AACtBiF,QAAAA,KAASrI,EAAAqI;AAAb,YACIpE,IAAQjE,EAAAiE;AAaRunB,YAAiC,SAAUhjB,IAAQ;AAEnDgjB,mBAASA,IAAkB;AAMvB,gBAAInQ,IAAmB,SAAX7S,MAAmBA,GAAA/I,MAAa,MACxCiJ,SAD2B,KACb;AAMlB2S,cAAA0H,OAAa;AACb1H,cAAA9a,UAAgB;AAChB8a,cAAAnb,SAAe;AACf,mBAAOmb;UAhBgB;AADvB7T,YAAUgkB,GAAiBhjB,EAA3B;AAwBJgjB,YAAA7kB,UAAA0e,eAAyCoG,SAAU3pB,GAAO;AACtD,gBAAI+C,IAAU2D,GAAA7B,UAAA0e,aAAA5lB,MAAoC,MAC9CiJ,SADU;AAEV,iBAAAvI,MAAAsT,KAAA,KAAqB3R,MACrB+C,EAAAC,SACI1B,EAAoBtB,GAAO,KAAA3B,KAA3B;AAER,mBAAO0E;UAP+C;AAwB1D2mB,YAAAtY,iBAAiCjP,EAAMmnB,EAAAlY,gBAA8B,EACjEwY,SAAS,EACLC,aAAa,2EADR,EADwD,CAApC;AAKjC,iBAAOH;QAtD4C,EAuDrDJ,CAvDmC;AAwDrC/iB,QAAAA;UAAOmjB,EAAA7kB;UAA2B,EAC9BilB,WAAW,CAAC,SAAS,SAAS,OAAnB,GAIXC,aAAa,MACbC,gBAAgB,CAAC,KAAK,KAAK,GAAX,GAChBC,eAAe,CAAC,KAAK,KAAK,GAAX,GACf9D,YAAYoD,EARkB;QAAlC;AAUA7H,QAAAA,GAAAwI,mBAAkC,aAAaR,CAA/C;AAoFA;AAEA,eAAOA;MAnM+T,CAA1U;AAqMArsB,QAAgBW,GAAU,gCAAgC,CAACA,EAAS,oBAAoBA,EAAS,uCAAuCA,EAAS,0BAA0BA,EAAS,uBAAuBA,EAAS,mCAAmCA,EAAS,gCAAtM,GAAyO,SAAUb,IAAYwJ,GAAe6K,GAAS6H,IAAO8Q,GAAmBrH,GAAc;AAIrXnc,UAAAE,QAFQ1J,GAEcsI,WAAtB;AACA+L,UAAA3K,QAHQ1J,GAGQitB,OAHRjtB,GAGiBktB,EAAzB;AACAhR,QAAAA,GAAAxS,QAJQ1J,GAIMitB,KAAd;AACAD,UAAAtjB;UALQ1J,GAKkBgc;UALlBhc,GAK0BmtB;QAAlC;AACAxH,UAAAjc,QANQ1J,GAMaylB,YAAA3hB,IAArB;MARqX,CAAzX;IAh3KoB,CAbvB;;;",
  "names": ["factory", "module", "exports", "define", "amd", "Highcharts", "undefined", "_registerModule", "obj", "path", "args", "fn", "hasOwnProperty", "apply", "CustomEvent", "window", "dispatchEvent", "detail", "_modules", "H", "U", "perspective", "points", "chart", "insidePlotArea", "useInvertedPersp", "options3d", "options", "inverted", "pick", "origin", "x", "plotWidth", "y", "plotHeight", "z", "depth", "vd", "viewDistance", "scale", "scale3d", "beta", "deg2rad", "alpha", "Math", "cos", "sin", "plotLeft", "plotTop", "map", "point", "f", "c", "b", "cosB", "sinB", "sinA", "cosA", "coordinate", "perspective3D", "rotated", "distance", "projection", "Number", "POSITIVE_INFINITY", "shapeArea", "vertexes", "area", "i", "length", "j", "Math3D", "pointCameraDistance", "coordinates", "sqrt", "pow", "plotX", "plotY", "plotZ", "shapeArea3D", "Color", "SVGElement", "color", "parse", "defined", "merge", "objectEach", "SVGElement3D", "initArgs", "elem3d", "renderer", "paths", "pathType", "zIndexes", "parts", "forEach", "part", "attribs", "zIndex", "styledMode", "filter", "attr", "add", "group", "originalDestroy", "destroy", "destroyParts", "forcedSides", "singleSetterForParts", "prop", "val", "values", "verb", "duration", "complete", "newAttr", "optionsToApply", "hasZIndexes", "partVal", "processParts", "props", "partsProps", "cuboid", "base", "continueAnimation", "key", "shapeArgs", "prototype", "call", "animate", "fillSetter", "fill", "front", "top", "brighten", "indexOf", "get", "side", "A", "SVGRenderer", "__extends", "extendStatics", "d", "Object", "setPrototypeOf", "__proto__", "Array", "p", "__", "constructor", "create", "animObject", "charts", "extend", "PI", "dFactor", "_super", "SVGRenderer3D", "arguments", "compose", "SVGRenderer3D.compose", "SVGRendererClass", "svgRendererProto", "svgRenderer3dProto", "elements3d", "arc3d", "arc3dPath", "cuboidPath", "element3d", "face3d", "polyhedron", "toLinePath", "toLineSegments", "curveTo", "SVGRenderer3D.curveTo", "cx", "cy", "rx", "ry", "start", "end", "dx", "dy", "result", "arcAngle", "concat", "SVGRenderer3D.prototype.toLinePath", "closed", "push", "SVGRenderer3D.prototype.toLineSegments", "m", "SVGRenderer3D.prototype.face3d", "ret", "createElement", "enabled", "ret.attr", "hash", "vertexes2d", "chartIndex", "visibility", "ret.animate", "params", "SVGRenderer3D.prototype.polyhedron", "g", "faces", "result.destroy", "result.attr", "pop", "result.animate", "SVGRenderer3D.prototype.element3d", "type", "SVGRenderer3D.prototype.cuboid", "SVGRenderer3D.prototype.cuboidPath", "mapSidePath", "h", "pArr", "mapPath", "height", "w", "width", "pickShape", "verticesIndex1", "verticesIndex2", "face1", "face2", "dummyFace1", "dummyFace2", "shape", "back", "path1", "isFront", "bottom", "path2", "isTop", "right", "left", "path3", "isRight", "incrementX", "incrementY", "incrementZ", "round", "SVGRenderer3D.prototype.arc3d", "suckOutCustom", "hasCA", "ca", "customAttribs", "wrapper", "side1", "side2", "inn", "out", "onAdd", "wrapper.onAdd", "parent", "parentGroup", "className", "face", "setPaths", "wrapper.setPaths", "zTop", "zInn", "zOut", "zSide1", "zSide2", "center", "setRadialReference", "wrapper.fillSetter", "value", "darker", "setter", "el", "wrapper.attr", "paramArr", "wrapper.animate", "animation", "from", "randomProp", "random", "toString", "substring", "anim", "globalAnimation", "noop", "to", "step", "anim.step", "a", "fx", "interpolate", "pos", "elem", "r", "innerR", "wrapper.destroy", "hide", "wrapper.hide", "show", "wrapper.show", "inherit", "SVGRenderer3D.prototype.arc3dPath", "toZeroPIRange", "angle", "ir", "cs", "ss", "ce", "se", "irx", "iry", "start2", "end2", "midEnd", "angleCorr", "atan2", "angleEnd", "abs", "angleStart", "angleMid", "incPrecision", "a2", "max", "a1", "a3", "D", "genericDefaultOptions", "defaultOptions", "addEvent", "isArray", "wrap", "Chart3D", "onAddSeries", "e", "is3d", "onAfterDrawChartBox", "chart3d", "frame", "get3dFrame", "xm", "xp", "ym", "yp", "zp", "xmm", "visible", "size", "xpp", "ymm", "ypp", "zmm", "zm", "zpp", "hasRendered", "frame3d", "frameShapes", "frontFacing", "onAfterGetContainer", "name", "slope", "cfg", "definition", "tagName", "attributes", "id", "children", "onAfterInit", "series", "s", "defaultSeriesType", "onAfterSetChartSize", "clipBox", "margin", "chartWidth", "chartHeight", "fitToPlot", "getScale", "onBeforeRedraw", "isDirtyBox", "onBeforeRender", "onInit", "Composition", "wrapIsInsidePlot", "proceed", "slice", "wrapRenderSeries", "translate", "render", "wrapSetClassName", "container", "Composition.prototype.get3dFrame", "frameOptions", "faceOrientation", "bottomOrientation", "topOrientation", "leftOrientation", "rightOrientation", "frontOrientation", "backOrientation", "defaultShowBottom", "defaultShowTop", "defaultShowLeft", "defaultShowRight", "xAxis", "yAxis", "zAxis", "axis", "horiz", "opposite", "getFaceOptions", "sources", "defaultVisible", "faceAttrs", "isVisible", "axes", "defaultShowBack", "defaultShowFront", "axisLabelPosition", "isValidEdge", "yEdges", "xDir", "xBottomEdges", "xTopEdges", "zBottomEdges", "zTopEdges", "pickEdge", "edges", "mult", "projections", "best", "Composition.prototype.getScale", "plotRight", "plotBottom", "originX", "originY", "MAX_VALUE", "t", "corners", "corner", "minX", "min", "maxX", "minY", "maxY", "ChartClass", "FxClass", "chartProto", "fxProto", "chartProto.is3d", "propsRequireDirtyBox", "propsRequireUpdateSeries", "matrixSetter", "fxProto.matrixSetter", "interpolated", "Axis", "chartAddZAxis", "ZAxis", "onChartAfterGetAxes", "_this", "zAxisOptions", "splat", "axisOptions", "index", "isX", "addZAxis", "setScale", "composedClasses", "userOptions", "isZAxis", "ZAxis.compose", "collectionsWithInit", "collectionsWithUpdate", "getSeriesExtremes", "ZAxis.prototype.getSeriesExtremes", "hasVisibleSeries", "dataMin", "dataMax", "ignoreMinPadding", "ignoreMaxPadding", "stacking", "buildStacks", "ignoreHiddenSeries", "zData", "setAxisSize", "ZAxis.prototype.setAxisSize", "len", "setOptions", "ZAxis.prototype.setOptions", "offset", "lineWidth", "coll", "Axis3DDefaults", "labels", "position3d", "skew3d", "title", "onTickAfterGetLabelPosition", "axis3D", "fix3dPosition", "wrapTickGetMarkPath", "Tick3DAdditions", "TickClass", "Tick3D", "onAxisAfterSetOptions", "tickWidth", "gridLineWidth", "onAxisDrawCrosshair", "crosshairPos", "isXAxis", "axisXpos", "axisYpos", "onAxisInit", "Axis3DAdditions", "wrapAxisGetLinePath", "wrapAxisGetPlotBandPath", "fromPath", "getPlotLinePath", "toPath", "fromStartSeg", "fromEndSeg", "toStartSeg", "toEndSeg", "wrapAxisGetPlotLinePath", "startSegment", "endSegment", "pathSegments", "swapZ", "wrapAxisGetSlotWidth", "tick", "ticks", "gridGroup", "categories", "label", "firstGridLine", "element", "childNodes", "getBBox", "frame3DLeft", "origin_1", "tickId", "prevTick", "nextTick", "nextLabelPos", "prevLabelPos", "xy", "labelPos", "wrapAxisGetTitlePosition", "Axis3DAdditions.compose", "AxisClass", "keepProps", "axisProto", "Axis3DAdditions.prototype.fix3dPosition", "isTitle", "positionMode", "skew", "offsetY", "offsetX", "vecY", "reverseFlap", "vecX", "cosa", "sinb", "sina", "cosb", "projected", "pointsProjected", "matrix", "Axis3DAdditions.prototype.swapZ", "Series", "isNumber", "Series3D", "Series3D.prototype.translate", "translate3dPoints", "Series3D.prototype.translate3dPoints", "seriesOptions", "rawPoints", "rawPointsX", "zPadding", "stack", "groupZPadding", "data", "rawPoint", "zValue", "logarithmic", "val2lin", "isInside", "axisZpos", "projectedPoints", "projectedPoint", "SeriesRegistry", "wrapAreaSeriesGetGraphPath", "svgPath", "getGraphPath", "lineProto", "translatedThreshold", "getThreshold", "threshold", "bottomPoints", "yBottom", "markerGroup", "translateX", "translateY", "reversed", "bottomPath", "areaPath", "splice", "xMap", "seriesTypes", "line", "Area3DSeries", "AreaSeriesClass", "ColumnSeries", "StackItem", "retrieveStacks", "stacks", "totalStacks", "stackNumber", "position", "pointAttribs", "stroke", "edgeColor", "edgeWidth", "setState", "state", "inactiveOtherPoints", "hasNewShapeType", "_i", "graphic", "nodeName", "columnProto", "svg", "translate3dShapes", "outside3dPlot", "columnProto.translate3dPoints", "columnProto.translate3dShapes", "borderCrisp", "borderWidth", "point2dPos", "grouping", "shapeArgs_1", "tooltipPos", "borderlessBase_1", "dimensions", "shapeType", "clientX", "plot3d", "init", "yAxis_1", "series_1", "reversed_1", "shapey", "stackY", "negative", "drawDataLabels", "_name", "_visibility", "_zIndex", "columnGroup", "getPlotBox", "survive", "vis", "reversedStacks", "pointClass", "columnRange", "columnRangeProto", "columnrange", "plotGroup", "setVisible", "dataLabel", "alignTo", "is", "inside", "xOffset", "pointWidth", "dLPosition", "stackBoxProps", "stackBox", "xWidth", "stackItem", "baseSeriesInd", "split", "columnSeries", "column", "PiePoint", "pie", "superHaloPath", "haloPath", "Pie3DPoint", "Pie3DPoint.prototype.haloPath", "Pie3DSeries", "addPoint", "Pie3DSeries.prototype.addPoint", "update", "Pie3DSeries.prototype.animate", "oldtranslateX", "oldtranslateY", "scaleX", "scaleY", "attrSetters", "Pie3DSeries.prototype.drawDataLabels", "options3d_1", "labelPosition", "connectorPosition", "yOffset", "natural", "breakAt", "touchingSliceAt", "Pie3DSeries.prototype.pointAttribs", "Pie3DSeries.prototype.translate", "slicedTranslation", "slicedOffset", "drawTracker", "Pie3DSeries.prototype.drawTracker", "ScatterSeries", "Scatter3DPoint", "applyOptions", "Scatter3DPoint.prototype.applyOptions", "Scatter3DSeries", "Scatter3DSeries.prototype.pointAttribs", "tooltip", "pointFormat", "axisTypes", "directTouch", "parallelArrays", "pointArrayMap", "registerSeriesType", "Axis3DComposition", "Chart", "Fx", "Tick"]
}
