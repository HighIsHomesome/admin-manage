{
  "version": 3,
  "sources": ["../../highcharts/modules/accessibility.src.js"],
  "sourcesContent": ["/**\n * @license Highcharts JS v10.3.3 (2023-01-20)\n *\n * Accessibility module\n *\n * (c) 2010-2021 Highsoft AS\n * Author: Oystein Moseng\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/accessibility', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(\n                    new CustomEvent(\n                        'HighchartsModuleLoaded',\n                        { detail: { path: path, module: obj[path] }\n                    })\n                );\n            }\n        }\n    }\n    _registerModule(_modules, 'Accessibility/Utils/HTMLUtilities.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Utility functions for accessibility module.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc,\n            win = H.win;\n        var css = U.css;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var simulatedEventTarget = win.EventTarget && new win.EventTarget() || 'none';\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         * @param {Highcharts.HTMLDOMElement} el\n         * @param {string} className\n         * @return {void}\n         */\n        function addClass(el, className) {\n            if (el.classList) {\n                el.classList.add(className);\n            }\n            else if (el.className.indexOf(className) < 0) {\n                // Note: Dumb check for class name exists, should be fine for practical\n                // use cases, but will return false positives if the element has a class\n                // that contains the className.\n                el.className += ' ' + className;\n            }\n        }\n        /**\n         * @private\n         * @param {Highcharts.HTMLDOMElement} el\n         * @param {string} className\n         * @return {void}\n         */\n        function removeClass(el, className) {\n            if (el.classList) {\n                el.classList.remove(className);\n            }\n            else {\n                // Note: Dumb logic that will break if the element has a class name that\n                // consists of className plus something else.\n                el.className = el.className.replace(new RegExp(className, 'g'), '');\n            }\n        }\n        /**\n         * Utility function to clone a mouse event for re-dispatching.\n         * @private\n         */\n        function cloneMouseEvent(e) {\n            if (typeof win.MouseEvent === 'function') {\n                return new win.MouseEvent(e.type, e);\n            }\n            // No MouseEvent support, try using initMouseEvent\n            if (doc.createEvent) {\n                var evt = doc.createEvent('MouseEvent');\n                if (evt.initMouseEvent) {\n                    evt.initMouseEvent(e.type, e.bubbles, // #10561, #12161\n                    e.cancelable, e.view || win, e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n                    return evt;\n                }\n            }\n            return getFakeMouseEvent(e.type);\n        }\n        /**\n         * Utility function to clone a touch event for re-dispatching.\n         * @private\n         */\n        function cloneTouchEvent(e) {\n            var touchListToTouchArray = function (l) {\n                    var touchArray = [];\n                for (var i = 0; i < l.length; ++i) {\n                    var item = l.item(i);\n                    if (item) {\n                        touchArray.push(item);\n                    }\n                }\n                return touchArray;\n            };\n            if (typeof win.TouchEvent === 'function') {\n                var newEvent = new win.TouchEvent(e.type, {\n                        touches: touchListToTouchArray(e.touches),\n                        targetTouches: touchListToTouchArray(e.targetTouches),\n                        changedTouches: touchListToTouchArray(e.changedTouches),\n                        ctrlKey: e.ctrlKey,\n                        shiftKey: e.shiftKey,\n                        altKey: e.altKey,\n                        metaKey: e.metaKey,\n                        bubbles: e.bubbles,\n                        cancelable: e.cancelable,\n                        composed: e.composed,\n                        detail: e.detail,\n                        view: e.view\n                    });\n                if (e.defaultPrevented) {\n                    newEvent.preventDefault();\n                }\n                return newEvent;\n            }\n            var fakeEvt = cloneMouseEvent(e);\n            fakeEvt.touches = e.touches;\n            fakeEvt.changedTouches = e.changedTouches;\n            fakeEvt.targetTouches = e.targetTouches;\n            return fakeEvt;\n        }\n        /**\n         * @private\n         */\n        function escapeStringForHTML(str) {\n            return str\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#x27;')\n                .replace(/\\//g, '&#x2F;');\n        }\n        /**\n         * Get an element by ID\n         * @private\n         */\n        function getElement(id) {\n            return doc.getElementById(id);\n        }\n        /**\n         * Get a fake mouse event of a given type. If relatedTarget is not given,\n         * it will point to simulatedEventTarget, as an indicator that the event\n         * is fake.\n         * @private\n         */\n        function getFakeMouseEvent(type, position, relatedTarget) {\n            var pos = position || {\n                    x: 0,\n                    y: 0\n                };\n            if (typeof win.MouseEvent === 'function') {\n                return new win.MouseEvent(type, {\n                    bubbles: true,\n                    cancelable: true,\n                    composed: true,\n                    button: 0,\n                    buttons: 1,\n                    relatedTarget: relatedTarget || simulatedEventTarget,\n                    view: win,\n                    detail: type === 'click' ? 1 : 0,\n                    screenX: pos.x,\n                    screenY: pos.y,\n                    clientX: pos.x,\n                    clientY: pos.y\n                });\n            }\n            // No MouseEvent support, try using initMouseEvent\n            if (doc.createEvent) {\n                var evt = doc.createEvent('MouseEvent');\n                if (evt.initMouseEvent) {\n                    evt.initMouseEvent(type, true, // Bubble\n                    true, // Cancel\n                    win, // View\n                    type === 'click' ? 1 : 0, // Detail\n                    // Coords\n                    pos.x, pos.y, pos.x, pos.y, \n                    // Pressed keys\n                    false, false, false, false, 0, // button\n                    null // related target\n                    );\n                    return evt;\n                }\n            }\n            return { type: type };\n        }\n        /**\n         * Get an appropriate heading level for an element. Corresponds to the\n         * heading level below the previous heading in the DOM.\n         *\n         * Note: Only detects previous headings in the DOM that are siblings,\n         * ancestors, or previous siblings of ancestors. Headings that are nested below\n         * siblings of ancestors (cousins et.al) are not picked up. This is because it\n         * is ambiguous whether or not the nesting is for layout purposes or indicates a\n         * separate section.\n         *\n         * @private\n         * @param {Highcharts.HTMLDOMElement} [element]\n         * @return {string} The heading tag name (h1, h2 etc).\n         * If no nearest heading is found, \"p\" is returned.\n         */\n        function getHeadingTagNameForElement(element) {\n            var getIncreasedHeadingLevel = function (tagName) {\n                    var headingLevel = parseInt(tagName.slice(1), 10),\n                newLevel = Math.min(6,\n                headingLevel + 1);\n                return 'h' + newLevel;\n            };\n            var isHeading = function (tagName) { return /H[1-6]/.test(tagName); };\n            var getPreviousSiblingsHeading = function (el) {\n                    var sibling = el;\n                while (sibling = sibling.previousSibling) { // eslint-disable-line\n                    var tagName = sibling.tagName || '';\n                    if (isHeading(tagName)) {\n                        return tagName;\n                    }\n                }\n                return '';\n            };\n            var getHeadingRecursive = function (el) {\n                    var prevSiblingsHeading = getPreviousSiblingsHeading(el);\n                if (prevSiblingsHeading) {\n                    return getIncreasedHeadingLevel(prevSiblingsHeading);\n                }\n                // No previous siblings are headings, try parent node\n                var parent = el.parentElement;\n                if (!parent) {\n                    return 'p';\n                }\n                var parentTagName = parent.tagName;\n                if (isHeading(parentTagName)) {\n                    return getIncreasedHeadingLevel(parentTagName);\n                }\n                return getHeadingRecursive(parent);\n            };\n            return getHeadingRecursive(element);\n        }\n        /**\n         * Remove an element from the DOM.\n         * @private\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} [element]\n         * @return {void}\n         */\n        function removeElement(element) {\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n            }\n        }\n        /**\n         * Remove all child nodes from an element.\n         * @private\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} [element]\n         * @return {void}\n         */\n        function removeChildNodes(element) {\n            while (element.lastChild) {\n                element.removeChild(element.lastChild);\n            }\n        }\n        /**\n         * Utility function. Reverses child nodes of a DOM element.\n         * @private\n         */\n        function reverseChildNodes(node) {\n            var i = node.childNodes.length;\n            while (i--) {\n                node.appendChild(node.childNodes[i]);\n            }\n        }\n        /**\n         * Used for aria-label attributes, painting on a canvas will fail if the\n         * text contains tags.\n         * @private\n         */\n        function stripHTMLTagsFromString(str) {\n            return typeof str === 'string' ?\n                str.replace(/<\\/?[^>]+(>|$)/g, '') : str;\n        }\n        /**\n         * Utility function for hiding an element visually, but still keeping it\n         * available to screen reader users.\n         * @private\n         */\n        function visuallyHideElement(element) {\n            css(element, {\n                position: 'absolute',\n                width: '1px',\n                height: '1px',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                clip: 'rect(1px, 1px, 1px, 1px)',\n                marginTop: '-3px',\n                '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=1)',\n                filter: 'alpha(opacity=1)',\n                opacity: 0.01\n            });\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var HTMLUtilities = {\n                addClass: addClass,\n                cloneMouseEvent: cloneMouseEvent,\n                cloneTouchEvent: cloneTouchEvent,\n                escapeStringForHTML: escapeStringForHTML,\n                getElement: getElement,\n                getFakeMouseEvent: getFakeMouseEvent,\n                getHeadingTagNameForElement: getHeadingTagNameForElement,\n                removeChildNodes: removeChildNodes,\n                removeClass: removeClass,\n                removeElement: removeElement,\n                reverseChildNodes: reverseChildNodes,\n                simulatedEventTarget: simulatedEventTarget,\n                stripHTMLTagsFromString: stripHTMLTagsFromString,\n                visuallyHideElement: visuallyHideElement\n            };\n\n        return HTMLUtilities;\n    });\n    _registerModule(_modules, 'Accessibility/A11yI18n.js', [_modules['Core/FormatUtilities.js'], _modules['Core/Utilities.js']], function (F, U) {\n        /* *\n         *\n         *  Accessibility module - internationalization support\n         *\n         *  (c) 2010-2021 Highsoft AS\n         *  Author: \u00D8ystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var format = F.format;\n        var getNestedProperty = U.getNestedProperty,\n            pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var A11yI18nComposition;\n        (function (A11yI18nComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedClasses = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(ChartClass) {\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.langFormat = langFormat;\n                }\n                return ChartClass;\n            }\n            A11yI18nComposition.compose = compose;\n            /**\n             * i18n utility function.  Format a single array or plural statement in a\n             * format string.  If the statement is not an array or plural statement,\n             * returns the statement within brackets.  Invalid array statements return\n             * an empty string.\n             *\n             * @private\n             * @function formatExtendedStatement\n             * @param {string} statement\n             * @param {Highcharts.Dictionary<*>} ctx\n             * Context to apply to the format string.\n             */\n            function formatExtendedStatement(statement, ctx) {\n                var eachStart = statement.indexOf('#each('), pluralStart = statement.indexOf('#plural('), indexStart = statement.indexOf('['), indexEnd = statement.indexOf(']');\n                var arr,\n                    result;\n                // Dealing with an each-function?\n                if (eachStart > -1) {\n                    var eachEnd = statement.slice(eachStart).indexOf(')') + eachStart, preEach = statement.substring(0, eachStart), postEach = statement.substring(eachEnd + 1), eachStatement = statement.substring(eachStart + 6, eachEnd), eachArguments = eachStatement.split(',');\n                    var lenArg = Number(eachArguments[1]),\n                        len = void 0;\n                    result = '';\n                    arr = getNestedProperty(eachArguments[0], ctx);\n                    if (arr) {\n                        lenArg = isNaN(lenArg) ? arr.length : lenArg;\n                        len = lenArg < 0 ?\n                            arr.length + lenArg :\n                            Math.min(lenArg, arr.length); // Overshoot\n                        // Run through the array for the specified length\n                        for (var i = 0; i < len; ++i) {\n                            result += preEach + arr[i] + postEach;\n                        }\n                    }\n                    return result.length ? result : '';\n                }\n                // Dealing with a plural-function?\n                if (pluralStart > -1) {\n                    var pluralEnd = (statement.slice(pluralStart).indexOf(')') + pluralStart), pluralStatement = statement.substring(pluralStart + 8, pluralEnd), pluralArguments = pluralStatement.split(','), num = Number(getNestedProperty(pluralArguments[0], ctx));\n                    switch (num) {\n                        case 0:\n                            result = pick(pluralArguments[4], pluralArguments[1]);\n                            break;\n                        case 1:\n                            result = pick(pluralArguments[2], pluralArguments[1]);\n                            break;\n                        case 2:\n                            result = pick(pluralArguments[3], pluralArguments[1]);\n                            break;\n                        default:\n                            result = pluralArguments[1];\n                    }\n                    return result ? stringTrim(result) : '';\n                }\n                // Array index\n                if (indexStart > -1) {\n                    var arrayName = statement.substring(0,\n                        indexStart),\n                        ix = Number(statement.substring(indexStart + 1,\n                        indexEnd));\n                    var val = void 0;\n                    arr = getNestedProperty(arrayName, ctx);\n                    if (!isNaN(ix) && arr) {\n                        if (ix < 0) {\n                            val = arr[arr.length + ix];\n                            // Handle negative overshoot\n                            if (typeof val === 'undefined') {\n                                val = arr[0];\n                            }\n                        }\n                        else {\n                            val = arr[ix];\n                            // Handle positive overshoot\n                            if (typeof val === 'undefined') {\n                                val = arr[arr.length - 1];\n                            }\n                        }\n                    }\n                    return typeof val !== 'undefined' ? val : '';\n                }\n                // Standard substitution, delegate to format or similar\n                return '{' + statement + '}';\n            }\n            /* eslint-disable max-len */\n            /**\n             * i18n formatting function.  Extends Highcharts.format() functionality by\n             * also handling arrays and plural conditionals.  Arrays can be indexed as\n             * follows:\n             *\n             * - Format: 'This is the first index: {myArray[0]}. The last: {myArray[-1]}.'\n             *\n             * - Context: { myArray: [0, 1, 2, 3, 4, 5] }\n             *\n             * - Result: 'This is the first index: 0. The last: 5.'\n             *\n             *\n             * They can also be iterated using the #each() function.  This will repeat\n             * the contents of the bracket expression for each element.  Example:\n             *\n             * - Format: 'List contains: {#each(myArray)cm }'\n             *\n             * - Context: { myArray: [0, 1, 2] }\n             *\n             * - Result: 'List contains: 0cm 1cm 2cm '\n             *\n             *\n             * The #each() function optionally takes a length parameter.  If positive,\n             * this parameter specifies the max number of elements to iterate through.\n             * If negative, the function will subtract the number from the length of the\n             * array.  Use this to stop iterating before the array ends.  Example:\n             *\n             * - Format: 'List contains: {#each(myArray, -1) }and {myArray[-1]}.'\n             *\n             * - Context: { myArray: [0, 1, 2, 3] }\n             *\n             * - Result: 'List contains: 0, 1, 2, and 3.'\n             *\n             *\n             * Use the #plural() function to pick a string depending on whether or not a\n             * context object is 1.  Arguments are #plural(obj, plural, singular).\n             * Example:\n             *\n             * - Format: 'Has {numPoints} {#plural(numPoints, points, point}.'\n             *\n             * - Context: { numPoints: 5 }\n             *\n             * - Result: 'Has 5 points.'\n             *\n             *\n             * Optionally there are additional parameters for dual and none:\n             * #plural(obj, plural, singular, dual, none).  Example:\n             *\n             * - Format: 'Has {#plural(numPoints, many points, one point, two points,\n             *   none}.'\n             *\n             * - Context: { numPoints: 2 }\n             *\n             * - Result: 'Has two points.'\n             *\n             *\n             * The dual or none parameters will take precedence if they are supplied.\n             *\n             * @requires modules/accessibility\n             *\n             * @function Highcharts.i18nFormat\n             *\n             * @param {string} formatString\n             * The string to format.\n             *\n             * @param {Highcharts.Dictionary<*>} context\n             * Context to apply to the format string.\n             *\n             * @param {Highcharts.Chart} chart\n             * A `Chart` instance with a time object and numberFormatter, passed on to\n             * format().\n             *\n             * @return {string}\n             * The formatted string.\n             */\n            function i18nFormat(formatString, context, chart) {\n                var getFirstBracketStatement = function (sourceStr, offset) {\n                        var str = sourceStr.slice(offset || 0), startBracket = str.indexOf('{'), endBracket = str.indexOf('}');\n                    if (startBracket > -1 && endBracket > startBracket) {\n                        return {\n                            statement: str.substring(startBracket + 1, endBracket),\n                            begin: offset + startBracket + 1,\n                            end: offset + endBracket\n                        };\n                    }\n                }, tokens = [];\n                var bracketRes,\n                    constRes,\n                    cursor = 0;\n                // Tokenize format string into bracket statements and constants\n                do {\n                    bracketRes = getFirstBracketStatement(formatString, cursor);\n                    constRes = formatString.substring(cursor, bracketRes && bracketRes.begin - 1);\n                    // If we have constant content before this bracket statement, add it\n                    if (constRes.length) {\n                        tokens.push({\n                            value: constRes,\n                            type: 'constant'\n                        });\n                    }\n                    // Add the bracket statement\n                    if (bracketRes) {\n                        tokens.push({\n                            value: bracketRes.statement,\n                            type: 'statement'\n                        });\n                    }\n                    cursor = bracketRes ? bracketRes.end + 1 : cursor + 1;\n                } while (bracketRes);\n                // Perform the formatting.  The formatArrayStatement function returns\n                // the statement in brackets if it is not an array statement, which\n                // means it gets picked up by format below.\n                tokens.forEach(function (token) {\n                    if (token.type === 'statement') {\n                        token.value = formatExtendedStatement(token.value, context);\n                    }\n                });\n                // Join string back together and pass to format to pick up non-array\n                // statements.\n                return format(tokens.reduce(function (acc, cur) { return acc + cur.value; }, ''), context, chart);\n            }\n            A11yI18nComposition.i18nFormat = i18nFormat;\n            /* eslint-enable max-len */\n            /**\n             * Apply context to a format string from lang options of the chart.\n             *\n             * @requires modules/accessibility\n             *\n             * @function Highcharts.Chart#langFormat\n             *\n             * @param {string} langKey\n             * Key (using dot notation) into lang option structure.\n             *\n             * @param {Highcharts.Dictionary<*>} context\n             * Context to apply to the format string.\n             *\n             * @return {string}\n             * The formatted string.\n             */\n            function langFormat(langKey, context) {\n                var keys = langKey.split('.');\n                var formatString = this.options.lang,\n                    i = 0;\n                for (; i < keys.length; ++i) {\n                    formatString = formatString && formatString[keys[i]];\n                }\n                return typeof formatString === 'string' ?\n                    i18nFormat(formatString, context, this) : '';\n            }\n            /**\n             * String trim that works for IE6-8 as well.\n             *\n             * @private\n             * @function stringTrim\n             *\n             * @param {string} str\n             * The input string\n             *\n             * @return {string}\n             * The trimmed string\n             */\n            function stringTrim(str) {\n                return str.trim && str.trim() || str.replace(/^\\s+|\\s+$/g, '');\n            }\n        })(A11yI18nComposition || (A11yI18nComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return A11yI18nComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/ChartUtilities.js', [_modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Utils for dealing with charts.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc;\n        var stripHTMLTags = HU.stripHTMLTagsFromString;\n        var defined = U.defined,\n            find = U.find,\n            fireEvent = U.fireEvent;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Fire an event on an element that is either wrapped by Highcharts,\n         * or a DOM element.\n         * @private\n         */\n        function fireEventOnWrappedOrUnwrappedElement(el, eventObject) {\n            var type = eventObject.type;\n            var hcEvents = el.hcEvents;\n            if ((doc.createEvent) &&\n                (el.dispatchEvent || el.fireEvent)) {\n                if (el.dispatchEvent) {\n                    el.dispatchEvent(eventObject);\n                }\n                else {\n                    el.fireEvent(type, eventObject);\n                }\n            }\n            else if (hcEvents && hcEvents[type]) {\n                fireEvent(el, type, eventObject);\n            }\n            else if (el.element) {\n                fireEventOnWrappedOrUnwrappedElement(el.element, eventObject);\n            }\n        }\n        /**\n         * @private\n         */\n        function getChartTitle(chart) {\n            return stripHTMLTags(chart.options.title.text ||\n                chart.langFormat('accessibility.defaultChartTitle', { chart: chart }));\n        }\n        /**\n         * Return string with the axis name/title.\n         * @private\n         */\n        function getAxisDescription(axis) {\n            return axis && (axis.userOptions && axis.userOptions.accessibility &&\n                axis.userOptions.accessibility.description ||\n                axis.axisTitle && axis.axisTitle.textStr ||\n                axis.options.id ||\n                axis.categories && 'categories' ||\n                axis.dateTime && 'Time' ||\n                'values');\n        }\n        /**\n         * Return string with text description of the axis range.\n         * @private\n         * @param {Highcharts.Axis} axis\n         * The axis to get range desc of.\n         * @return {string}\n         * A string with the range description for the axis.\n         */\n        function getAxisRangeDescription(axis) {\n            var axisOptions = axis.options || {};\n            // Handle overridden range description\n            if (axisOptions.accessibility &&\n                typeof axisOptions.accessibility.rangeDescription !== 'undefined') {\n                return axisOptions.accessibility.rangeDescription;\n            }\n            // Handle category axes\n            if (axis.categories) {\n                return getCategoryAxisRangeDesc(axis);\n            }\n            // Use time range, not from-to?\n            if (axis.dateTime && (axis.min === 0 || axis.dataMin === 0)) {\n                return getAxisTimeLengthDesc(axis);\n            }\n            // Just use from and to.\n            // We have the range and the unit to use, find the desc format\n            return getAxisFromToDescription(axis);\n        }\n        /**\n         * Describe the range of a category axis.\n         * @private\n         */\n        function getCategoryAxisRangeDesc(axis) {\n            var chart = axis.chart;\n            if (axis.dataMax && axis.dataMin) {\n                return chart.langFormat('accessibility.axis.rangeCategories', {\n                    chart: chart,\n                    axis: axis,\n                    numCategories: axis.dataMax - axis.dataMin + 1\n                });\n            }\n            return '';\n        }\n        /**\n         * Describe the length of the time window shown on an axis.\n         * @private\n         */\n        function getAxisTimeLengthDesc(axis) {\n            var chart = axis.chart,\n                range = {},\n                min = axis.dataMin || axis.min || 0,\n                max = axis.dataMax || axis.max || 0;\n            var rangeUnit = 'Seconds';\n            range.Seconds = (max - min) / 1000;\n            range.Minutes = range.Seconds / 60;\n            range.Hours = range.Minutes / 60;\n            range.Days = range.Hours / 24;\n            ['Minutes', 'Hours', 'Days'].forEach(function (unit) {\n                if (range[unit] > 2) {\n                    rangeUnit = unit;\n                }\n            });\n            var rangeValue = range[rangeUnit].toFixed(rangeUnit !== 'Seconds' &&\n                    rangeUnit !== 'Minutes' ? 1 : 0 // Use decimals for days/hours\n                );\n            // We have the range and the unit to use, find the desc format\n            return chart.langFormat('accessibility.axis.timeRange' + rangeUnit, {\n                chart: chart,\n                axis: axis,\n                range: rangeValue.replace('.0', '')\n            });\n        }\n        /**\n         * Describe an axis from-to range.\n         * @private\n         */\n        function getAxisFromToDescription(axis) {\n            var chart = axis.chart,\n                options = chart.options,\n                dateRangeFormat = (options &&\n                    options.accessibility &&\n                    options.accessibility.screenReaderSection.axisRangeDateFormat ||\n                    ''),\n                extremes = {\n                    min: axis.dataMin || axis.min || 0,\n                    max: axis.dataMax || axis.max || 0\n                },\n                format = function (key) {\n                    return axis.dateTime ?\n                        chart.time.dateFormat(dateRangeFormat,\n                extremes[key]) :\n                        extremes[key].toString();\n            };\n            return chart.langFormat('accessibility.axis.rangeFromTo', {\n                chart: chart,\n                axis: axis,\n                rangeFrom: format('min'),\n                rangeTo: format('max')\n            });\n        }\n        /**\n         * Get the DOM element for the first point in the series.\n         * @private\n         * @param {Highcharts.Series} series\n         * The series to get element for.\n         * @return {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement|undefined}\n         * The DOM element for the point.\n         */\n        function getSeriesFirstPointElement(series) {\n            if (series.points && series.points.length) {\n                var firstPointWithGraphic = find(series.points,\n                    function (p) { return !!p.graphic; });\n                return (firstPointWithGraphic &&\n                    firstPointWithGraphic.graphic &&\n                    firstPointWithGraphic.graphic.element);\n            }\n        }\n        /**\n         * Get the DOM element for the series that we put accessibility info on.\n         * @private\n         * @param {Highcharts.Series} series\n         * The series to get element for.\n         * @return {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement|undefined}\n         * The DOM element for the series\n         */\n        function getSeriesA11yElement(series) {\n            var firstPointEl = getSeriesFirstPointElement(series);\n            return (firstPointEl &&\n                firstPointEl.parentNode || series.graph &&\n                series.graph.element || series.group &&\n                series.group.element); // Could be tracker series depending on series type\n        }\n        /**\n         * Remove aria-hidden from element. Also unhides parents of the element, and\n         * hides siblings that are not explicitly unhidden.\n         * @private\n         */\n        function unhideChartElementFromAT(chart, element) {\n            element.setAttribute('aria-hidden', false);\n            if (element === chart.renderTo ||\n                !element.parentNode ||\n                element.parentNode === doc.body // #16126: Full screen printing\n            ) {\n                return;\n            }\n            // Hide siblings unless their hidden state is already explicitly set\n            Array.prototype.forEach.call(element.parentNode.childNodes, function (node) {\n                if (!node.hasAttribute('aria-hidden')) {\n                    node.setAttribute('aria-hidden', true);\n                }\n            });\n            // Repeat for parent\n            unhideChartElementFromAT(chart, element.parentNode);\n        }\n        /**\n         * Hide series from screen readers.\n         * @private\n         */\n        function hideSeriesFromAT(series) {\n            var seriesEl = getSeriesA11yElement(series);\n            if (seriesEl) {\n                seriesEl.setAttribute('aria-hidden', true);\n            }\n        }\n        /**\n         * Get series objects by series name.\n         * @private\n         */\n        function getSeriesFromName(chart, name) {\n            if (!name) {\n                return chart.series;\n            }\n            return (chart.series || []).filter(function (s) {\n                return s.name === name;\n            });\n        }\n        /**\n         * Get point in a series from x/y values.\n         * @private\n         */\n        function getPointFromXY(series, x, y) {\n            var i = series.length,\n                res;\n            while (i--) {\n                res = find(series[i].points || [], function (p) {\n                    return p.x === x && p.y === y;\n                });\n                if (res) {\n                    return res;\n                }\n            }\n        }\n        /**\n         * Get relative position of point on an x/y axis from 0 to 1.\n         * @private\n         */\n        function getRelativePointAxisPosition(axis, point) {\n            if (!defined(axis.dataMin) || !defined(axis.dataMax)) {\n                return 0;\n            }\n            var axisStart = axis.toPixels(axis.dataMin),\n                axisEnd = axis.toPixels(axis.dataMax), \n                // We have to use pixel position because of axis breaks, log axis etc.\n                positionProp = axis.coll === 'xAxis' ? 'x' : 'y',\n                pointPos = axis.toPixels(point[positionProp] || 0);\n            return (pointPos - axisStart) / (axisEnd - axisStart);\n        }\n        /**\n         * Get relative position of point on an x/y axis from 0 to 1.\n         * @private\n         */\n        function scrollToPoint(point) {\n            var xAxis = point.series.xAxis,\n                yAxis = point.series.yAxis,\n                axis = (xAxis && xAxis.scrollbar ? xAxis : yAxis),\n                scrollbar = (axis && axis.scrollbar);\n            if (scrollbar && defined(scrollbar.to) && defined(scrollbar.from)) {\n                var range = scrollbar.to - scrollbar.from;\n                var pos = getRelativePointAxisPosition(axis,\n                    point);\n                scrollbar.updatePosition(pos - range / 2, pos + range / 2);\n                fireEvent(scrollbar, 'changed', {\n                    from: scrollbar.from,\n                    to: scrollbar.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: null\n                });\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ChartUtilities = {\n                fireEventOnWrappedOrUnwrappedElement: fireEventOnWrappedOrUnwrappedElement,\n                getChartTitle: getChartTitle,\n                getAxisDescription: getAxisDescription,\n                getAxisRangeDescription: getAxisRangeDescription,\n                getPointFromXY: getPointFromXY,\n                getSeriesFirstPointElement: getSeriesFirstPointElement,\n                getSeriesFromName: getSeriesFromName,\n                getSeriesA11yElement: getSeriesA11yElement,\n                unhideChartElementFromAT: unhideChartElementFromAT,\n                hideSeriesFromAT: hideSeriesFromAT,\n                scrollToPoint: scrollToPoint\n            };\n\n        return ChartUtilities;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/DOMElementProvider.js', [_modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, HU) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Class that can keep track of elements added to DOM and clean them up on\n         *  destroy.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc;\n        var removeElement = HU.removeElement;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        var DOMElementProvider = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function DOMElementProvider() {\n                    this.elements = [];\n            }\n            /**\n             * Create an element and keep track of it for later removal.\n             * Same args as document.createElement\n             * @private\n             */\n            DOMElementProvider.prototype.createElement = function () {\n                var el = doc.createElement.apply(doc,\n                    arguments);\n                this.elements.push(el);\n                return el;\n            };\n            /**\n             * Destroy all created elements, removing them from the DOM.\n             * @private\n             */\n            DOMElementProvider.prototype.destroyCreatedElements = function () {\n                this.elements.forEach(function (element) {\n                    removeElement(element);\n                });\n                this.elements = [];\n            };\n            return DOMElementProvider;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DOMElementProvider;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/EventProvider.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Class that can keep track of events added, and clean them up on destroy.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        var EventProvider = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function EventProvider() {\n                    this.eventRemovers = [];\n            }\n            /**\n             * Add an event to an element and keep track of it for later removal.\n             * Same args as Highcharts.addEvent.\n             * @private\n             */\n            EventProvider.prototype.addEvent = function () {\n                var remover = addEvent.apply(H,\n                    arguments);\n                this.eventRemovers.push(remover);\n                return remover;\n            };\n            /**\n             * Remove all added events.\n             * @private\n             */\n            EventProvider.prototype.removeAddedEvents = function () {\n                this.eventRemovers.forEach(function (remover) { return remover(); });\n                this.eventRemovers = [];\n            };\n            return EventProvider;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return EventProvider;\n    });\n    _registerModule(_modules, 'Accessibility/AccessibilityComponent.js', [_modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (CU, DOMElementProvider, EventProvider, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Accessibility component class definition\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var fireEventOnWrappedOrUnwrappedElement = CU.fireEventOnWrappedOrUnwrappedElement;\n        var getFakeMouseEvent = HU.getFakeMouseEvent;\n        var extend = U.extend;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AccessibilityComponent base class, representing a part of the chart that\n         * has accessibility logic connected to it. This class can be inherited from to\n         * create a custom accessibility component for a chart.\n         *\n         * Components should take care to destroy added elements and unregister event\n         * handlers on destroy. This is handled automatically if using this.addEvent and\n         * this.createElement.\n         *\n         * @sample highcharts/accessibility/custom-component\n         *         Custom accessibility component\n         *\n         * @requires module:modules/accessibility\n         * @class\n         * @name Highcharts.AccessibilityComponent\n         */\n        var AccessibilityComponent = /** @class */ (function () {\n                function AccessibilityComponent() {\n                    /* *\n                     *\n                     *  Properties\n                     *\n                     * */\n                    this.chart = void 0;\n                this.domElementProvider = void 0;\n                this.eventProvider = void 0;\n                this.keyCodes = void 0;\n                this.proxyProvider = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Initialize the class\n             * @private\n             * @param {Highcharts.Chart} chart The chart object\n             * @param {Highcharts.ProxyProvider} proxyProvider The proxy provider of the accessibility module\n             */\n            AccessibilityComponent.prototype.initBase = function (chart, proxyProvider) {\n                this.chart = chart;\n                this.eventProvider = new EventProvider();\n                this.domElementProvider = new DOMElementProvider();\n                this.proxyProvider = proxyProvider;\n                // Key code enum for common keys\n                this.keyCodes = {\n                    left: 37,\n                    right: 39,\n                    up: 38,\n                    down: 40,\n                    enter: 13,\n                    space: 32,\n                    esc: 27,\n                    tab: 9,\n                    pageUp: 33,\n                    pageDown: 34,\n                    end: 35,\n                    home: 36\n                };\n            };\n            /**\n             * Add an event to an element and keep track of it for later removal.\n             * See EventProvider for details.\n             * @private\n             */\n            AccessibilityComponent.prototype.addEvent = function (el, type, fn, options) {\n                return this.eventProvider.addEvent(el, type, fn, options);\n            };\n            /**\n             * Create an element and keep track of it for later removal.\n             * See DOMElementProvider for details.\n             * @private\n             */\n            AccessibilityComponent.prototype.createElement = function (tagName, options) {\n                return this.domElementProvider.createElement(tagName, options);\n            };\n            /**\n             * Fire a fake click event on an element. It is useful to have this on\n             * AccessibilityComponent for users of custom components.\n             */\n            AccessibilityComponent.prototype.fakeClickEvent = function (el) {\n                var fakeEvent = getFakeMouseEvent('click');\n                fireEventOnWrappedOrUnwrappedElement(el, fakeEvent);\n            };\n            /**\n             * Remove traces of the component.\n             * @private\n             */\n            AccessibilityComponent.prototype.destroyBase = function () {\n                this.domElementProvider.destroyCreatedElements();\n                this.eventProvider.removeAddedEvents();\n            };\n            return AccessibilityComponent;\n        }());\n        extend(AccessibilityComponent.prototype, \n        /** @lends Highcharts.AccessibilityComponent */\n        {\n            /**\n             * Called on component initialization.\n             */\n            init: function () { },\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation: function () { },\n            /**\n             * Called on updates to the chart, including options changes.\n             * Note that this is also called on first render of chart.\n             */\n            onChartUpdate: function () { },\n            /**\n             * Called on every chart render.\n             */\n            onChartRender: function () { },\n            /**\n             * Called when accessibility is disabled or chart is destroyed.\n             */\n            destroy: function () { }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return AccessibilityComponent;\n    });\n    _registerModule(_modules, 'Accessibility/KeyboardNavigationHandler.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Keyboard navigation handler base class definition\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var find = U.find;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Define a keyboard navigation handler for use with a\n         * Highcharts.AccessibilityComponent instance. This functions as an abstraction\n         * layer for keyboard navigation, and defines a map of keyCodes to handler\n         * functions.\n         *\n         * @requires module:modules/accessibility\n         *\n         * @sample highcharts/accessibility/custom-component\n         *         Custom accessibility component\n         *\n         * @class\n         * @name Highcharts.KeyboardNavigationHandler\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart this module should act on.\n         *\n         * @param {Highcharts.KeyboardNavigationHandlerOptionsObject} options\n         * Options for the keyboard navigation handler.\n         */\n        var KeyboardNavigationHandler = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function KeyboardNavigationHandler(chart, options) {\n                    this.chart = chart;\n                this.keyCodeMap = options.keyCodeMap || [];\n                this.validate = options.validate;\n                this.init = options.init;\n                this.terminate = options.terminate;\n                // Response enum\n                this.response = {\n                    success: 1,\n                    prev: 2,\n                    next: 3,\n                    noHandler: 4,\n                    fail: 5 // Handler failed\n                };\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Find handler function(s) for key code in the keyCodeMap and run it.\n             *\n             * @function KeyboardNavigationHandler#run\n             * @param {global.KeyboardEvent} e\n             * @return {number} Returns a response code indicating whether the run was\n             *      a success/fail/unhandled, or if we should move to next/prev module.\n             */\n            KeyboardNavigationHandler.prototype.run = function (e) {\n                var keyCode = e.which || e.keyCode;\n                var response = this.response.noHandler;\n                var handlerCodeSet = find(this.keyCodeMap,\n                    function (codeSet) {\n                        return codeSet[0].indexOf(keyCode) > -1;\n                });\n                if (handlerCodeSet) {\n                    response = handlerCodeSet[1].call(this, keyCode, e);\n                }\n                else if (keyCode === 9) {\n                    // Default tab handler, move to next/prev module\n                    response = this.response[e.shiftKey ? 'prev' : 'next'];\n                }\n                return response;\n            };\n            return KeyboardNavigationHandler;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Options for the keyboard navigation handler.\n         *\n         * @interface Highcharts.KeyboardNavigationHandlerOptionsObject\n         */ /**\n        * An array containing pairs of an array of keycodes, mapped to a handler\n        * function. When the keycode is received, the handler is called with the\n        * keycode as parameter.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#keyCodeMap\n        * @type {Array<Array<Array<number>, Function>>}\n        */ /**\n        * Function to run on initialization of module.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#init\n        * @type {Function}\n        */ /**\n        * Function to run before moving to next/prev module. Receives moving direction\n        * as parameter: +1 for next, -1 for previous.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#terminate\n        * @type {Function|undefined}\n        */ /**\n        * Function to run to validate module. Should return false if module should not\n        * run, true otherwise. Receives chart as parameter.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#validate\n        * @type {Function|undefined}\n        */\n        (''); // keeps doclets above in JS file\n\n        return KeyboardNavigationHandler;\n    });\n    _registerModule(_modules, 'Accessibility/Components/ContainerComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (AccessibilityComponent, KeyboardNavigationHandler, CU, H, HU) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Accessibility component for chart container.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var unhideChartElementFromAT = CU.unhideChartElementFromAT,\n            getChartTitle = CU.getChartTitle;\n        var doc = H.doc;\n        var stripHTMLTags = HU.stripHTMLTagsFromString;\n        /**\n         * The ContainerComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.ContainerComponent\n         */\n        var ContainerComponent = /** @class */ (function (_super) {\n                __extends(ContainerComponent, _super);\n            function ContainerComponent() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Called on first render/updates to the chart, including options changes.\n             */\n            ContainerComponent.prototype.onChartUpdate = function () {\n                this.handleSVGTitleElement();\n                this.setSVGContainerLabel();\n                this.setGraphicContainerAttrs();\n                this.setRenderToAttrs();\n                this.makeCreditsAccessible();\n            };\n            /**\n             * @private\n             */\n            ContainerComponent.prototype.handleSVGTitleElement = function () {\n                var chart = this.chart, titleId = 'highcharts-title-' + chart.index, titleContents = stripHTMLTags(chart.langFormat('accessibility.svgContainerTitle', {\n                        chartTitle: getChartTitle(chart)\n                    }));\n                if (titleContents.length) {\n                    var titleElement = this.svgTitleElement =\n                            this.svgTitleElement || doc.createElementNS('http://www.w3.org/2000/svg', 'title');\n                    titleElement.textContent = titleContents;\n                    titleElement.id = titleId;\n                    chart.renderTo.insertBefore(titleElement, chart.renderTo.firstChild);\n                }\n            };\n            /**\n             * @private\n             */\n            ContainerComponent.prototype.setSVGContainerLabel = function () {\n                var chart = this.chart,\n                    svgContainerLabel = chart.langFormat('accessibility.svgContainerLabel', {\n                        chartTitle: getChartTitle(chart)\n                    });\n                if (chart.renderer.box && svgContainerLabel.length) {\n                    chart.renderer.box.setAttribute('aria-label', svgContainerLabel);\n                }\n            };\n            /**\n             * @private\n             */\n            ContainerComponent.prototype.setGraphicContainerAttrs = function () {\n                var chart = this.chart,\n                    label = chart.langFormat('accessibility.graphicContainerLabel', {\n                        chartTitle: getChartTitle(chart)\n                    });\n                if (label.length) {\n                    chart.container.setAttribute('aria-label', label);\n                }\n            };\n            /**\n             * Set attributes on the chart container element.\n             * @private\n             */\n            ContainerComponent.prototype.setRenderToAttrs = function () {\n                var chart = this.chart, shouldHaveLandmark = chart.options.accessibility\n                        .landmarkVerbosity !== 'disabled', containerLabel = chart.langFormat('accessibility.chartContainerLabel', {\n                        title: getChartTitle(chart),\n                        chart: chart\n                    });\n                if (containerLabel) {\n                    chart.renderTo.setAttribute('role', shouldHaveLandmark ? 'region' : 'group');\n                    chart.renderTo.setAttribute('aria-label', containerLabel);\n                }\n            };\n            /**\n             * @private\n             */\n            ContainerComponent.prototype.makeCreditsAccessible = function () {\n                var chart = this.chart,\n                    credits = chart.credits;\n                if (credits) {\n                    if (credits.textStr) {\n                        credits.element.setAttribute('aria-label', chart.langFormat('accessibility.credits', { creditsStr: stripHTMLTags(credits.textStr) }));\n                    }\n                    unhideChartElementFromAT(chart, credits.element);\n                }\n            };\n            /**\n             * Empty handler to just set focus on chart\n             * @private\n             */\n            ContainerComponent.prototype.getKeyboardNavigation = function () {\n                var chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [],\n                    validate: function () {\n                        return true;\n                    },\n                    init: function () {\n                        var a11y = chart.accessibility;\n                        if (a11y) {\n                            a11y.keyboardNavigation.tabindexContainer.focus();\n                        }\n                    }\n                });\n            };\n            /**\n             * Accessibility disabled/chart destroyed.\n             */\n            ContainerComponent.prototype.destroy = function () {\n                this.chart.renderTo.setAttribute('aria-hidden', true);\n            };\n            return ContainerComponent;\n        }(AccessibilityComponent));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ContainerComponent;\n    });\n    _registerModule(_modules, 'Accessibility/FocusBorder.js', [_modules['Core/Renderer/SVG/SVGLabel.js'], _modules['Core/Utilities.js']], function (SVGLabel, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Extend SVG and Chart classes with focus border capabilities.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent,\n            pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var FocusBorderComposition;\n        (function (FocusBorderComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedClasses = [];\n            // Attributes that trigger a focus border update\n            var svgElementBorderUpdateTriggers = [\n                    'x', 'y', 'transform', 'width', 'height', 'r', 'd', 'stroke-width'\n                ];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(ChartClass, SVGElementClass) {\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.renderFocusBorder = chartRenderFocusBorder;\n                    chartProto.setFocusToElement = chartSetFocusToElement;\n                }\n                if (composedClasses.indexOf(SVGElementClass) === -1) {\n                    composedClasses.push(SVGElementClass);\n                    var svgElementProto = SVGElementClass.prototype;\n                    svgElementProto.addFocusBorder = svgElementAddFocusBorder;\n                    svgElementProto.removeFocusBorder = svgElementRemoveFocusBorder;\n                }\n            }\n            FocusBorderComposition.compose = compose;\n            /**\n             * Redraws the focus border on the currently focused element.\n             *\n             * @private\n             * @function Highcharts.Chart#renderFocusBorder\n             */\n            function chartRenderFocusBorder() {\n                var focusElement = this.focusElement,\n                    focusBorderOptions = this.options.accessibility.keyboardNavigation.focusBorder;\n                if (focusElement) {\n                    focusElement.removeFocusBorder();\n                    if (focusBorderOptions.enabled) {\n                        focusElement.addFocusBorder(focusBorderOptions.margin, {\n                            stroke: focusBorderOptions.style.color,\n                            strokeWidth: focusBorderOptions.style.lineWidth,\n                            r: focusBorderOptions.style.borderRadius\n                        });\n                    }\n                }\n            }\n            /**\n             * Set chart's focus to an SVGElement. Calls focus() on it, and draws the\n             * focus border. This is used by multiple components.\n             *\n             * @private\n             * @function Highcharts.Chart#setFocusToElement\n             *\n             * @param {Highcharts.SVGElement} svgElement\n             * Element to draw the border around.\n             *\n             * @param {SVGDOMElement|HTMLDOMElement} [focusElement]\n             * If supplied, it draws the border around svgElement and sets the focus to\n             * focusElement.\n             */\n            function chartSetFocusToElement(svgElement, focusElement) {\n                var focusBorderOptions = this.options.accessibility.keyboardNavigation.focusBorder,\n                    browserFocusElement = focusElement || svgElement.element;\n                // Set browser focus if possible\n                if (browserFocusElement &&\n                    browserFocusElement.focus) {\n                    // If there is no focusin-listener, add one to work around Edge\n                    // where Narrator is not reading out points despite calling focus().\n                    if (!(browserFocusElement.hcEvents &&\n                        browserFocusElement.hcEvents.focusin)) {\n                        addEvent(browserFocusElement, 'focusin', function () { });\n                    }\n                    browserFocusElement.focus();\n                    // Hide default focus ring\n                    if (focusBorderOptions.hideBrowserFocusOutline) {\n                        browserFocusElement.style.outline = 'none';\n                    }\n                }\n                if (this.focusElement) {\n                    this.focusElement.removeFocusBorder();\n                }\n                this.focusElement = svgElement;\n                this.renderFocusBorder();\n            }\n            /**\n             * Add hook to destroy focus border if SVG element is destroyed, unless\n             * hook already exists.\n             * @private\n             * @param el Element to add destroy hook to\n             */\n            function svgElementAddDestroyFocusBorderHook(el) {\n                if (el.focusBorderDestroyHook) {\n                    return;\n                }\n                var origDestroy = el.destroy;\n                el.destroy = function () {\n                    if (el.focusBorder && el.focusBorder.destroy) {\n                        el.focusBorder.destroy();\n                    }\n                    return origDestroy.apply(el, arguments);\n                };\n                el.focusBorderDestroyHook = origDestroy;\n            }\n            /**\n             * Add focus border functionality to SVGElements. Draws a new rect on top of\n             * element around its bounding box. This is used by multiple components.\n             *\n             * @private\n             * @function Highcharts.SVGElement#addFocusBorder\n             *\n             * @param {number} margin\n             *\n             * @param {SVGAttributes} attribs\n             */\n            function svgElementAddFocusBorder(margin, attribs) {\n                // Allow updating by just adding new border\n                if (this.focusBorder) {\n                    this.removeFocusBorder();\n                }\n                // Add the border rect\n                var bb = this.getBBox(),\n                    pad = pick(margin, 3),\n                    parent = this.parentGroup,\n                    scaleX = this.scaleX || parent && parent.scaleX,\n                    scaleY = this.scaleY || parent && parent.scaleY,\n                    oneDefined = scaleX ? !scaleY : scaleY,\n                    scaleBoth = oneDefined ? Math.abs(scaleX || scaleY || 1) :\n                        (Math.abs(scaleX || 1) + Math.abs(scaleY || 1)) / 2;\n                bb.x += this.translateX ? this.translateX : 0;\n                bb.y += this.translateY ? this.translateY : 0;\n                var borderPosX = bb.x - pad,\n                    borderPosY = bb.y - pad,\n                    borderWidth = bb.width + 2 * pad,\n                    borderHeight = bb.height + 2 * pad;\n                /**\n                 * For text elements, apply x and y offset, #11397.\n                 * @private\n                 */\n                function getTextAnchorCorrection(text) {\n                    var posXCorrection = 0,\n                        posYCorrection = 0;\n                    if (text.attr('text-anchor') === 'middle') {\n                        posXCorrection = posYCorrection = 0.5;\n                    }\n                    else if (!text.rotation) {\n                        posYCorrection = 0.75;\n                    }\n                    else {\n                        posXCorrection = 0.25;\n                    }\n                    return {\n                        x: posXCorrection,\n                        y: posYCorrection\n                    };\n                }\n                var isLabel = this instanceof SVGLabel;\n                if (this.element.nodeName === 'text' || isLabel) {\n                    var isRotated = !!this.rotation;\n                    var correction = !isLabel ? getTextAnchorCorrection(this) :\n                            {\n                                x: isRotated ? 1 : 0,\n                                y: 0\n                            };\n                    var attrX = +this.attr('x');\n                    var attrY = +this.attr('y');\n                    if (!isNaN(attrX)) {\n                        borderPosX = attrX - (bb.width * correction.x) - pad;\n                    }\n                    if (!isNaN(attrY)) {\n                        borderPosY = attrY - (bb.height * correction.y) - pad;\n                    }\n                    if (isLabel && isRotated) {\n                        var temp = borderWidth;\n                        borderWidth = borderHeight;\n                        borderHeight = temp;\n                        if (!isNaN(attrX)) {\n                            borderPosX = attrX - (bb.height * correction.x) - pad;\n                        }\n                        if (!isNaN(attrY)) {\n                            borderPosY = attrY - (bb.width * correction.y) - pad;\n                        }\n                    }\n                }\n                this.focusBorder = this.renderer.rect(borderPosX, borderPosY, borderWidth, borderHeight, parseInt((attribs && attribs.r || 0).toString(), 10) / scaleBoth)\n                    .addClass('highcharts-focus-border')\n                    .attr({\n                    zIndex: 99\n                })\n                    .add(parent);\n                if (!this.renderer.styledMode) {\n                    this.focusBorder.attr({\n                        stroke: attribs && attribs.stroke,\n                        'stroke-width': (attribs && attribs.strokeWidth || 0) / scaleBoth\n                    });\n                }\n                avgElementAddUpdateFocusBorderHooks(this, margin, attribs);\n                svgElementAddDestroyFocusBorderHook(this);\n            }\n            /**\n             * Add hooks to update the focus border of an element when the element\n             * size/position is updated, unless already added.\n             * @private\n             * @param el Element to add update hooks to\n             * @param updateParams Parameters to pass through to addFocusBorder when updating.\n             */\n            function avgElementAddUpdateFocusBorderHooks(el) {\n                var updateParams = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    updateParams[_i - 1] = arguments[_i];\n                }\n                if (el.focusBorderUpdateHooks) {\n                    return;\n                }\n                el.focusBorderUpdateHooks = {};\n                svgElementBorderUpdateTriggers.forEach(function (trigger) {\n                    var setterKey = trigger + 'Setter';\n                    var origSetter = el[setterKey] || el._defaultSetter;\n                    el.focusBorderUpdateHooks[setterKey] = origSetter;\n                    el[setterKey] = function () {\n                        var ret = origSetter.apply(el,\n                            arguments);\n                        el.addFocusBorder.apply(el, updateParams);\n                        return ret;\n                    };\n                });\n            }\n            /**\n             * Remove hook from SVG element added by addDestroyFocusBorderHook, if\n             * existing.\n             * @private\n             * @param el Element to remove destroy hook from\n             */\n            function svgElementRemoveDestroyFocusBorderHook(el) {\n                if (!el.focusBorderDestroyHook) {\n                    return;\n                }\n                el.destroy = el.focusBorderDestroyHook;\n                delete el.focusBorderDestroyHook;\n            }\n            /**\n             * Add focus border functionality to SVGElements. Draws a new rect on top of\n             * element around its bounding box. This is used by multiple components.\n             * @private\n             * @function Highcharts.SVGElement#removeFocusBorder\n             */\n            function svgElementRemoveFocusBorder() {\n                svgElementRemoveUpdateFocusBorderHooks(this);\n                svgElementRemoveDestroyFocusBorderHook(this);\n                if (this.focusBorder) {\n                    this.focusBorder.destroy();\n                    delete this.focusBorder;\n                }\n            }\n            /**\n             * Remove hooks from SVG element added by addUpdateFocusBorderHooks, if\n             * existing.\n             * @private\n             * @param el Element to remove update hooks from\n             */\n            function svgElementRemoveUpdateFocusBorderHooks(el) {\n                if (!el.focusBorderUpdateHooks) {\n                    return;\n                }\n                Object.keys(el.focusBorderUpdateHooks).forEach(function (setterKey) {\n                    var origSetter = el.focusBorderUpdateHooks[setterKey];\n                    if (origSetter === el._defaultSetter) {\n                        delete el[setterKey];\n                    }\n                    else {\n                        el[setterKey] = origSetter;\n                    }\n                });\n                delete el.focusBorderUpdateHooks;\n            }\n        })(FocusBorderComposition || (FocusBorderComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FocusBorderComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/Announcer.js', [_modules['Core/Renderer/HTML/AST.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (AST, DOMElementProvider, H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Create announcer to speak messages to screen readers and other AT.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc;\n        var addClass = HU.addClass,\n            visuallyHideElement = HU.visuallyHideElement;\n        var attr = U.attr;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Announcer = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function Announcer(chart, type) {\n                    this.chart = chart;\n                this.domElementProvider = new DOMElementProvider();\n                this.announceRegion = this.addAnnounceRegion(type);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            Announcer.prototype.destroy = function () {\n                this.domElementProvider.destroyCreatedElements();\n            };\n            Announcer.prototype.announce = function (message) {\n                var _this = this;\n                AST.setElementHTML(this.announceRegion, message);\n                // Delete contents after a little while to avoid user finding the live\n                // region in the DOM.\n                if (this.clearAnnouncementRegionTimer) {\n                    clearTimeout(this.clearAnnouncementRegionTimer);\n                }\n                this.clearAnnouncementRegionTimer = setTimeout(function () {\n                    _this.announceRegion.innerHTML = AST.emptyHTML;\n                    delete _this.clearAnnouncementRegionTimer;\n                }, 1000);\n            };\n            Announcer.prototype.addAnnounceRegion = function (type) {\n                var chartContainer = (this.chart.announcerContainer || this.createAnnouncerContainer()),\n                    div = this.domElementProvider.createElement('div');\n                attr(div, {\n                    'aria-hidden': false,\n                    'aria-live': type\n                });\n                if (this.chart.styledMode) {\n                    addClass(div, 'highcharts-visually-hidden');\n                }\n                else {\n                    visuallyHideElement(div);\n                }\n                chartContainer.appendChild(div);\n                return div;\n            };\n            Announcer.prototype.createAnnouncerContainer = function () {\n                var chart = this.chart,\n                    container = doc.createElement('div');\n                attr(container, {\n                    'aria-hidden': false,\n                    'class': 'highcharts-announcer-container'\n                });\n                container.style.position = 'relative';\n                chart.renderTo.insertBefore(container, chart.renderTo.firstChild);\n                chart.announcerContainer = container;\n                return container;\n            };\n            return Announcer;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Announcer;\n    });\n    _registerModule(_modules, 'Accessibility/Components/AnnotationsA11y.js', [_modules['Accessibility/Utils/HTMLUtilities.js']], function (HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Annotations accessibility code.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var escapeStringForHTML = HTMLUtilities.escapeStringForHTML,\n            stripHTMLTagsFromString = HTMLUtilities.stripHTMLTagsFromString;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get list of all annotation labels in the chart.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {Array<object>} The labels, or empty array if none.\n         */\n        function getChartAnnotationLabels(chart) {\n            var annotations = chart.annotations || [];\n            return annotations.reduce(function (acc, cur) {\n                if (cur.options &&\n                    cur.options.visible !== false) {\n                    acc = acc.concat(cur.labels);\n                }\n                return acc;\n            }, []);\n        }\n        /**\n         * Get the text of an annotation label.\n         *\n         * @private\n         * @param {Object} label The annotation label object\n         * @return {string} The text in the label.\n         */\n        function getLabelText(label) {\n            return ((label.options &&\n                label.options.accessibility &&\n                label.options.accessibility.description) ||\n                (label.graphic &&\n                    label.graphic.text &&\n                    label.graphic.text.textStr) ||\n                '');\n        }\n        /**\n         * Describe an annotation label.\n         *\n         * @private\n         * @param {Object} label The annotation label object to describe\n         * @return {string} The description for the label.\n         */\n        function getAnnotationLabelDescription(label) {\n            var a11yDesc = (label.options &&\n                    label.options.accessibility &&\n                    label.options.accessibility.description);\n            if (a11yDesc) {\n                return a11yDesc;\n            }\n            var chart = label.chart;\n            var labelText = getLabelText(label);\n            var points = label.points;\n            var getAriaLabel = function (point) { return (point.graphic &&\n                    point.graphic.element &&\n                    point.graphic.element.getAttribute('aria-label') ||\n                    ''); };\n            var getValueDesc = function (point) {\n                    var valDesc = (point.accessibility &&\n                        point.accessibility.valueDescription ||\n                        getAriaLabel(point));\n                var seriesName = (point &&\n                        point.series.name ||\n                        '');\n                return (seriesName ? seriesName + ', ' : '') + 'data point ' + valDesc;\n            };\n            var pointValueDescriptions = points\n                    .filter(function (p) { return !!p.graphic; }) // Filter out mock points\n                    .map(getValueDesc)\n                    // Filter out points we can't describe\n                    .filter(function (desc) { return !!desc; });\n            var numPoints = pointValueDescriptions.length;\n            var pointsSelector = numPoints > 1 ?\n                    'MultiplePoints' : numPoints ?\n                    'SinglePoint' : 'NoPoints';\n            var langFormatStr = ('accessibility.screenReaderSection.annotations.description' +\n                    pointsSelector);\n            var context = {\n                    annotationText: labelText,\n                    annotation: label,\n                    numPoints: numPoints,\n                    annotationPoint: pointValueDescriptions[0],\n                    additionalAnnotationPoints: pointValueDescriptions.slice(1)\n                };\n            return chart.langFormat(langFormatStr, context);\n        }\n        /**\n         * Return array of HTML strings for each annotation label in the chart.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {Array<string>} Array of strings with HTML content for each annotation label.\n         */\n        function getAnnotationListItems(chart) {\n            var labels = getChartAnnotationLabels(chart);\n            return labels.map(function (label) {\n                var desc = escapeStringForHTML(stripHTMLTagsFromString(getAnnotationLabelDescription(label)));\n                return desc ? \"<li>\".concat(desc, \"</li>\") : '';\n            });\n        }\n        /**\n         * Return the annotation info for a chart as string.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {string} String with HTML content or empty string if no annotations.\n         */\n        function getAnnotationsInfoHTML(chart) {\n            var annotations = chart.annotations;\n            if (!(annotations && annotations.length)) {\n                return '';\n            }\n            var annotationItems = getAnnotationListItems(chart);\n            return \"<ul style=\\\"list-style-type: none\\\">\".concat(annotationItems.join(' '), \"</ul>\");\n        }\n        /**\n         * Return the texts for the annotation(s) connected to a point, or empty array\n         * if none.\n         *\n         * @private\n         * @param {Highcharts.Point} point The data point to get the annotation info from.\n         * @return {Array<string>} Annotation texts\n         */\n        function getPointAnnotationTexts(point) {\n            var labels = getChartAnnotationLabels(point.series.chart);\n            var pointLabels = labels\n                    .filter(function (label) { return label.points.indexOf(point) > -1; });\n            if (!pointLabels.length) {\n                return [];\n            }\n            return pointLabels.map(function (label) { return \"\".concat(getLabelText(label)); });\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var AnnotationsA11y = {\n                getAnnotationsInfoHTML: getAnnotationsInfoHTML,\n                getAnnotationLabelDescription: getAnnotationLabelDescription,\n                getAnnotationListItems: getAnnotationListItems,\n                getPointAnnotationTexts: getPointAnnotationTexts\n            };\n\n        return AnnotationsA11y;\n    });\n    _registerModule(_modules, 'Accessibility/Components/InfoRegionsComponent.js', [_modules['Accessibility/A11yI18n.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Components/AnnotationsA11y.js'], _modules['Core/Renderer/HTML/AST.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/FormatUtilities.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (A11yI18n, AccessibilityComponent, Announcer, AnnotationsA11y, AST, CU, F, H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Accessibility component for chart info region and table.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var getAnnotationsInfoHTML = AnnotationsA11y.getAnnotationsInfoHTML;\n        var getAxisDescription = CU.getAxisDescription,\n            getAxisRangeDescription = CU.getAxisRangeDescription,\n            getChartTitle = CU.getChartTitle,\n            unhideChartElementFromAT = CU.unhideChartElementFromAT;\n        var format = F.format;\n        var doc = H.doc;\n        var addClass = HU.addClass,\n            getElement = HU.getElement,\n            getHeadingTagNameForElement = HU.getHeadingTagNameForElement,\n            stripHTMLTagsFromString = HU.stripHTMLTagsFromString,\n            visuallyHideElement = HU.visuallyHideElement;\n        var attr = U.attr,\n            pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function getTableSummary(chart) {\n            return chart.langFormat('accessibility.table.tableSummary', { chart: chart });\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForMapChart(chart, formatContext) {\n            return formatContext.mapTitle ?\n                chart.langFormat('accessibility.chartTypes.mapTypeDescription', formatContext) :\n                chart.langFormat('accessibility.chartTypes.unknownMap', formatContext);\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForCombinationChart(chart, formatContext) {\n            return chart.langFormat('accessibility.chartTypes.combinationChart', formatContext);\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForEmptyChart(chart, formatContext) {\n            return chart.langFormat('accessibility.chartTypes.emptyChart', formatContext);\n        }\n        /**\n         * @private\n         */\n        function buildTypeDescriptionFromSeries(chart, types, context) {\n            var firstType = types[0], typeExplaination = chart.langFormat('accessibility.seriesTypeDescriptions.' + firstType, context), multi = chart.series && chart.series.length < 2 ? 'Single' : 'Multiple';\n            return (chart.langFormat('accessibility.chartTypes.' + firstType + multi, context) ||\n                chart.langFormat('accessibility.chartTypes.default' + multi, context)) + (typeExplaination ? ' ' + typeExplaination : '');\n        }\n        /**\n         * Return simplified explaination of chart type. Some types will not be\n         * familiar to most users, but in those cases we try to add an explaination\n         * of the type.\n         *\n         * @private\n         * @function Highcharts.Chart#getTypeDescription\n         * @param {Array<string>} types The series types in this chart.\n         * @return {string} The text description of the chart type.\n         */\n        function getTypeDescription(chart, types) {\n            var firstType = types[0],\n                firstSeries = chart.series && chart.series[0] || {},\n                mapTitle = chart.mapView && chart.mapView.geoMap &&\n                    chart.mapView.geoMap.title,\n                formatContext = {\n                    numSeries: chart.series.length,\n                    numPoints: firstSeries.points && firstSeries.points.length,\n                    chart: chart,\n                    mapTitle: mapTitle\n                };\n            if (!firstType) {\n                return getTypeDescForEmptyChart(chart, formatContext);\n            }\n            if (firstType === 'map') {\n                return getTypeDescForMapChart(chart, formatContext);\n            }\n            if (chart.types.length > 1) {\n                return getTypeDescForCombinationChart(chart, formatContext);\n            }\n            return buildTypeDescriptionFromSeries(chart, types, formatContext);\n        }\n        /**\n         * @private\n         */\n        function stripEmptyHTMLTags(str) {\n            return str.replace(/<(\\w+)[^>]*?>\\s*<\\/\\1>/g, '');\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The InfoRegionsComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.InfoRegionsComponent\n         */\n        var InfoRegionsComponent = /** @class */ (function (_super) {\n                __extends(InfoRegionsComponent, _super);\n            function InfoRegionsComponent() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.announcer = void 0;\n                _this.screenReaderSections = {};\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             * @private\n             */\n            InfoRegionsComponent.prototype.init = function () {\n                var chart = this.chart;\n                var component = this;\n                this.initRegionsDefinitions();\n                this.addEvent(chart, 'aftergetTableAST', function (e) {\n                    component.onDataTableCreated(e);\n                });\n                this.addEvent(chart, 'afterViewData', function (e) {\n                    if (e.wasHidden) {\n                        component.dataTableDiv = e.element;\n                        // Use a small delay to give browsers & AT time to\n                        // register the new table.\n                        setTimeout(function () {\n                            component.focusDataTable();\n                        }, 300);\n                    }\n                });\n                this.announcer = new Announcer(chart, 'assertive');\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.initRegionsDefinitions = function () {\n                var component = this;\n                this.screenReaderSections = {\n                    before: {\n                        element: null,\n                        buildContent: function (chart) {\n                            var formatter = chart.options.accessibility\n                                    .screenReaderSection.beforeChartFormatter;\n                            return formatter ? formatter(chart) :\n                                component.defaultBeforeChartFormatter(chart);\n                        },\n                        insertIntoDOM: function (el, chart) {\n                            chart.renderTo.insertBefore(el, chart.renderTo.firstChild);\n                        },\n                        afterInserted: function () {\n                            if (typeof component.sonifyButtonId !== 'undefined') {\n                                component.initSonifyButton(component.sonifyButtonId);\n                            }\n                            if (typeof component.dataTableButtonId !== 'undefined') {\n                                component.initDataTableButton(component.dataTableButtonId);\n                            }\n                        }\n                    },\n                    after: {\n                        element: null,\n                        buildContent: function (chart) {\n                            var formatter = chart.options.accessibility\n                                    .screenReaderSection\n                                    .afterChartFormatter;\n                            return formatter ? formatter(chart) :\n                                component.defaultAfterChartFormatter();\n                        },\n                        insertIntoDOM: function (el, chart) {\n                            chart.renderTo.insertBefore(el, chart.container.nextSibling);\n                        },\n                        afterInserted: function () {\n                            if (component.chart.accessibility) {\n                                component.chart.accessibility\n                                    .keyboardNavigation.updateExitAnchor(); // #15986\n                            }\n                        }\n                    }\n                };\n            };\n            /**\n             * Called on chart render. Have to update the sections on render, in order\n             * to get a11y info from series.\n             */\n            InfoRegionsComponent.prototype.onChartRender = function () {\n                var component = this;\n                this.linkedDescriptionElement = this.getLinkedDescriptionElement();\n                this.setLinkedDescriptionAttrs();\n                Object.keys(this.screenReaderSections).forEach(function (regionKey) {\n                    component.updateScreenReaderSection(regionKey);\n                });\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.getLinkedDescriptionElement = function () {\n                var chartOptions = this.chart.options,\n                    linkedDescOption = chartOptions.accessibility.linkedDescription;\n                if (!linkedDescOption) {\n                    return;\n                }\n                if (typeof linkedDescOption !== 'string') {\n                    return linkedDescOption;\n                }\n                var query = format(linkedDescOption,\n                    this.chart),\n                    queryMatch = doc.querySelectorAll(query);\n                if (queryMatch.length === 1) {\n                    return queryMatch[0];\n                }\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.setLinkedDescriptionAttrs = function () {\n                var el = this.linkedDescriptionElement;\n                if (el) {\n                    el.setAttribute('aria-hidden', 'true');\n                    addClass(el, 'highcharts-linked-description');\n                }\n            };\n            /**\n             * @private\n             * @param {string} regionKey\n             * The name/key of the region to update\n             */\n            InfoRegionsComponent.prototype.updateScreenReaderSection = function (regionKey) {\n                var chart = this.chart;\n                var region = this.screenReaderSections[regionKey];\n                var content = region.buildContent(chart);\n                var sectionDiv = region.element = (region.element || this.createElement('div'));\n                var hiddenDiv = (sectionDiv.firstChild || this.createElement('div'));\n                if (content) {\n                    this.setScreenReaderSectionAttribs(sectionDiv, regionKey);\n                    AST.setElementHTML(hiddenDiv, content);\n                    sectionDiv.appendChild(hiddenDiv);\n                    region.insertIntoDOM(sectionDiv, chart);\n                    if (chart.styledMode) {\n                        addClass(hiddenDiv, 'highcharts-visually-hidden');\n                    }\n                    else {\n                        visuallyHideElement(hiddenDiv);\n                    }\n                    unhideChartElementFromAT(chart, hiddenDiv);\n                    if (region.afterInserted) {\n                        region.afterInserted();\n                    }\n                }\n                else {\n                    if (sectionDiv.parentNode) {\n                        sectionDiv.parentNode.removeChild(sectionDiv);\n                    }\n                    region.element = null;\n                }\n            };\n            /**\n             * Apply a11y attributes to a screen reader info section\n             * @private\n             * @param {Highcharts.HTMLDOMElement} sectionDiv The section element\n             * @param {string} regionKey Name/key of the region we are setting attrs for\n             */\n            InfoRegionsComponent.prototype.setScreenReaderSectionAttribs = function (sectionDiv, regionKey) {\n                var chart = this.chart, labelText = chart.langFormat('accessibility.screenReaderSection.' + regionKey +\n                        'RegionLabel', { chart: chart, chartTitle: getChartTitle(chart) }), sectionId = \"highcharts-screen-reader-region-\".concat(regionKey, \"-\").concat(chart.index);\n                attr(sectionDiv, {\n                    id: sectionId,\n                    'aria-label': labelText || void 0\n                });\n                // Sections are wrapped to be positioned relatively to chart in case\n                // elements inside are tabbed to.\n                sectionDiv.style.position = 'relative';\n                if (labelText) {\n                    sectionDiv.setAttribute('role', chart.options.accessibility.landmarkVerbosity === 'all' ?\n                        'region' : 'group');\n                }\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.defaultBeforeChartFormatter = function () {\n                var chart = this.chart,\n                    format = chart.options.accessibility.screenReaderSection\n                        .beforeChartFormat;\n                if (!format) {\n                    return '';\n                }\n                var axesDesc = this.getAxesDescription(),\n                    shouldHaveSonifyBtn = (chart.sonify &&\n                        chart.options.sonification &&\n                        chart.options.sonification.enabled),\n                    sonifyButtonId = 'highcharts-a11y-sonify-data-btn-' +\n                        chart.index,\n                    dataTableButtonId = 'hc-linkto-highcharts-data-table-' +\n                        chart.index,\n                    annotationsList = getAnnotationsInfoHTML(chart),\n                    annotationsTitleStr = chart.langFormat('accessibility.screenReaderSection.annotations.heading', { chart: chart }),\n                    context = {\n                        headingTagName: getHeadingTagNameForElement(chart.renderTo),\n                        chartTitle: getChartTitle(chart),\n                        typeDescription: this.getTypeDescriptionText(),\n                        chartSubtitle: this.getSubtitleText(),\n                        chartLongdesc: this.getLongdescText(),\n                        xAxisDescription: axesDesc.xAxis,\n                        yAxisDescription: axesDesc.yAxis,\n                        playAsSoundButton: shouldHaveSonifyBtn ?\n                            this.getSonifyButtonText(sonifyButtonId) : '',\n                        viewTableButton: chart.getCSV ?\n                            this.getDataTableButtonText(dataTableButtonId) : '',\n                        annotationsTitle: annotationsList ? annotationsTitleStr : '',\n                        annotationsList: annotationsList\n                    },\n                    formattedString = A11yI18n.i18nFormat(format,\n                    context,\n                    chart);\n                this.dataTableButtonId = dataTableButtonId;\n                this.sonifyButtonId = sonifyButtonId;\n                return stripEmptyHTMLTags(formattedString);\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.defaultAfterChartFormatter = function () {\n                var chart = this.chart;\n                var format = chart.options.accessibility.screenReaderSection\n                        .afterChartFormat;\n                if (!format) {\n                    return '';\n                }\n                var context = { endOfChartMarker: this.getEndOfChartMarkerText() };\n                var formattedString = A11yI18n.i18nFormat(format,\n                    context,\n                    chart);\n                return stripEmptyHTMLTags(formattedString);\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.getLinkedDescription = function () {\n                var el = this.linkedDescriptionElement,\n                    content = el && el.innerHTML || '';\n                return stripHTMLTagsFromString(content);\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.getLongdescText = function () {\n                var chartOptions = this.chart.options,\n                    captionOptions = chartOptions.caption,\n                    captionText = captionOptions && captionOptions.text,\n                    linkedDescription = this.getLinkedDescription();\n                return (chartOptions.accessibility.description ||\n                    linkedDescription ||\n                    captionText ||\n                    '');\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.getTypeDescriptionText = function () {\n                var chart = this.chart;\n                return chart.types ?\n                    chart.options.accessibility.typeDescription ||\n                        getTypeDescription(chart, chart.types) : '';\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.getDataTableButtonText = function (buttonId) {\n                var chart = this.chart,\n                    buttonText = chart.langFormat('accessibility.table.viewAsDataTableButtonText', { chart: chart,\n                    chartTitle: getChartTitle(chart) });\n                return '<button id=\"' + buttonId + '\">' + buttonText + '</button>';\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.getSonifyButtonText = function (buttonId) {\n                var chart = this.chart;\n                if (chart.options.sonification &&\n                    chart.options.sonification.enabled === false) {\n                    return '';\n                }\n                var buttonText = chart.langFormat('accessibility.sonification.playAsSoundButtonText', { chart: chart,\n                    chartTitle: getChartTitle(chart) });\n                return '<button id=\"' + buttonId + '\">' + buttonText + '</button>';\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.getSubtitleText = function () {\n                var subtitle = (this.chart.options.subtitle);\n                return stripHTMLTagsFromString(subtitle && subtitle.text || '');\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.getEndOfChartMarkerText = function () {\n                var chart = this.chart, markerText = chart.langFormat('accessibility.screenReaderSection.endOfChartMarker', { chart: chart }), id = 'highcharts-end-of-chart-marker-' + chart.index;\n                return '<div id=\"' + id + '\">' + markerText + '</div>';\n            };\n            /**\n             * @private\n             * @param {Highcharts.Dictionary<string>} e\n             */\n            InfoRegionsComponent.prototype.onDataTableCreated = function (e) {\n                var chart = this.chart;\n                if (chart.options.accessibility.enabled) {\n                    if (this.viewDataTableButton) {\n                        this.viewDataTableButton.setAttribute('aria-expanded', 'true');\n                    }\n                    var attributes = e.tree.attributes || {};\n                    attributes.tabindex = -1;\n                    attributes.summary = getTableSummary(chart);\n                    e.tree.attributes = attributes;\n                }\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.focusDataTable = function () {\n                var tableDiv = this.dataTableDiv,\n                    table = tableDiv && tableDiv.getElementsByTagName('table')[0];\n                if (table && table.focus) {\n                    table.focus();\n                }\n            };\n            /**\n             * @private\n             * @param {string} sonifyButtonId\n             */\n            InfoRegionsComponent.prototype.initSonifyButton = function (sonifyButtonId) {\n                var _this = this;\n                var el = this.sonifyButton = getElement(sonifyButtonId);\n                var chart = this.chart;\n                var defaultHandler = function (e) {\n                        if (el) {\n                            el.setAttribute('aria-hidden', 'true');\n                        el.setAttribute('aria-label', '');\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                    var announceMsg = chart.langFormat('accessibility.sonification.playAsSoundClickAnnouncement', { chart: chart });\n                    _this.announcer.announce(announceMsg);\n                    setTimeout(function () {\n                        if (el) {\n                            el.removeAttribute('aria-hidden');\n                            el.removeAttribute('aria-label');\n                        }\n                        if (chart.sonify) {\n                            chart.sonify();\n                        }\n                    }, 1000); // Delay to let screen reader speak the button press\n                };\n                if (el && chart) {\n                    el.setAttribute('tabindex', -1);\n                    el.onclick = function (e) {\n                        var onPlayAsSoundClick = (chart.options.accessibility &&\n                                chart.options.accessibility.screenReaderSection\n                                    .onPlayAsSoundClick);\n                        (onPlayAsSoundClick || defaultHandler).call(this, e, chart);\n                    };\n                }\n            };\n            /**\n             * Set attribs and handlers for default viewAsDataTable button if exists.\n             * @private\n             * @param {string} tableButtonId\n             */\n            InfoRegionsComponent.prototype.initDataTableButton = function (tableButtonId) {\n                var el = this.viewDataTableButton = getElement(tableButtonId), chart = this.chart, tableId = tableButtonId.replace('hc-linkto-', '');\n                if (el) {\n                    attr(el, {\n                        tabindex: -1,\n                        'aria-expanded': !!getElement(tableId)\n                    });\n                    el.onclick = chart.options.accessibility\n                        .screenReaderSection.onViewDataTableClick ||\n                        function () {\n                            chart.viewData();\n                        };\n                }\n            };\n            /**\n             * Return object with text description of each of the chart's axes.\n             * @private\n             */\n            InfoRegionsComponent.prototype.getAxesDescription = function () {\n                var chart = this.chart,\n                    shouldDescribeColl = function (collectionKey,\n                    defaultCondition) {\n                        var axes = chart[collectionKey];\n                    return axes.length > 1 || axes[0] &&\n                        pick(axes[0].options.accessibility &&\n                            axes[0].options.accessibility.enabled, defaultCondition);\n                }, hasNoMap = !!chart.types &&\n                    chart.types.indexOf('map') < 0 &&\n                    chart.types.indexOf('treemap') < 0 &&\n                    chart.types.indexOf('tilemap') < 0, hasCartesian = !!chart.hasCartesianSeries, showXAxes = shouldDescribeColl('xAxis', !chart.angular && hasCartesian && hasNoMap), showYAxes = shouldDescribeColl('yAxis', hasCartesian && hasNoMap), desc = {};\n                if (showXAxes) {\n                    desc.xAxis = this.getAxisDescriptionText('xAxis');\n                }\n                if (showYAxes) {\n                    desc.yAxis = this.getAxisDescriptionText('yAxis');\n                }\n                return desc;\n            };\n            /**\n             * @private\n             */\n            InfoRegionsComponent.prototype.getAxisDescriptionText = function (collectionKey) {\n                var chart = this.chart;\n                var axes = chart[collectionKey];\n                return chart.langFormat('accessibility.axis.' + collectionKey + 'Description' + (axes.length > 1 ? 'Plural' : 'Singular'), {\n                    chart: chart,\n                    names: axes.map(function (axis) {\n                        return getAxisDescription(axis);\n                    }),\n                    ranges: axes.map(function (axis) {\n                        return getAxisRangeDescription(axis);\n                    }),\n                    numAxes: axes.length\n                });\n            };\n            /**\n             * Remove component traces\n             */\n            InfoRegionsComponent.prototype.destroy = function () {\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            };\n            return InfoRegionsComponent;\n        }(AccessibilityComponent));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return InfoRegionsComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/MenuComponent.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Utilities.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (Chart, U, AccessibilityComponent, KeyboardNavigationHandler, ChartUtilities, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Accessibility component for exporting menu.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var attr = U.attr;\n        var getChartTitle = ChartUtilities.getChartTitle,\n            unhideChartElementFromAT = ChartUtilities.unhideChartElementFromAT;\n        var getFakeMouseEvent = HTMLUtilities.getFakeMouseEvent;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Get the wrapped export button element of a chart.\n         * @private\n         */\n        function getExportMenuButtonElement(chart) {\n            return chart.exportSVGElements && chart.exportSVGElements[0];\n        }\n        /**\n         * @private\n         */\n        function exportingShouldHaveA11y(chart) {\n            var exportingOpts = chart.options.exporting,\n                exportButton = getExportMenuButtonElement(chart);\n            return !!(exportingOpts &&\n                exportingOpts.enabled !== false &&\n                exportingOpts.accessibility &&\n                exportingOpts.accessibility.enabled &&\n                exportButton &&\n                exportButton.element);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MenuComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.MenuComponent\n         */\n        var MenuComponent = /** @class */ (function (_super) {\n                __extends(MenuComponent, _super);\n            function MenuComponent() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             */\n            MenuComponent.prototype.init = function () {\n                var chart = this.chart,\n                    component = this;\n                this.addEvent(chart, 'exportMenuShown', function () {\n                    component.onMenuShown();\n                });\n                this.addEvent(chart, 'exportMenuHidden', function () {\n                    component.onMenuHidden();\n                });\n                this.createProxyGroup();\n            };\n            /**\n             * @private\n             */\n            MenuComponent.prototype.onMenuHidden = function () {\n                var menu = this.chart.exportContextMenu;\n                if (menu) {\n                    menu.setAttribute('aria-hidden', 'true');\n                }\n                this.setExportButtonExpandedState('false');\n            };\n            /**\n             * @private\n             */\n            MenuComponent.prototype.onMenuShown = function () {\n                var chart = this.chart,\n                    menu = chart.exportContextMenu;\n                if (menu) {\n                    this.addAccessibleContextMenuAttribs();\n                    unhideChartElementFromAT(chart, menu);\n                }\n                this.setExportButtonExpandedState('true');\n            };\n            /**\n             * @private\n             * @param {string} stateStr\n             */\n            MenuComponent.prototype.setExportButtonExpandedState = function (stateStr) {\n                if (this.exportButtonProxy) {\n                    this.exportButtonProxy.buttonElement.setAttribute('aria-expanded', stateStr);\n                }\n            };\n            /**\n             * Called on each render of the chart. We need to update positioning of the\n             * proxy overlay.\n             */\n            MenuComponent.prototype.onChartRender = function () {\n                var chart = this.chart,\n                    focusEl = chart.focusElement,\n                    a11y = chart.accessibility;\n                this.proxyProvider.clearGroup('chartMenu');\n                this.proxyMenuButton();\n                if (this.exportButtonProxy &&\n                    focusEl &&\n                    focusEl === chart.exportingGroup) {\n                    if (focusEl.focusBorder) {\n                        chart.setFocusToElement(focusEl, this.exportButtonProxy.buttonElement);\n                    }\n                    else if (a11y) {\n                        a11y.keyboardNavigation.tabindexContainer.focus();\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            MenuComponent.prototype.proxyMenuButton = function () {\n                var chart = this.chart;\n                var proxyProvider = this.proxyProvider;\n                var buttonEl = getExportMenuButtonElement(chart);\n                if (exportingShouldHaveA11y(chart) && buttonEl) {\n                    this.exportButtonProxy = proxyProvider.addProxyElement('chartMenu', { click: buttonEl }, {\n                        'aria-label': chart.langFormat('accessibility.exporting.menuButtonLabel', {\n                            chart: chart,\n                            chartTitle: getChartTitle(chart)\n                        }),\n                        'aria-expanded': false,\n                        title: chart.options.lang.contextButtonTitle || null\n                    });\n                }\n            };\n            /**\n             * @private\n             */\n            MenuComponent.prototype.createProxyGroup = function () {\n                var chart = this.chart;\n                if (chart && this.proxyProvider) {\n                    this.proxyProvider.addGroup('chartMenu', 'div');\n                }\n            };\n            /**\n             * @private\n             */\n            MenuComponent.prototype.addAccessibleContextMenuAttribs = function () {\n                var chart = this.chart,\n                    exportList = chart.exportDivElements;\n                if (exportList && exportList.length) {\n                    // Set tabindex on the menu items to allow focusing by script\n                    // Set role to give screen readers a chance to pick up the contents\n                    exportList.forEach(function (item) {\n                        if (item) {\n                            if (item.tagName === 'LI' &&\n                                !(item.children && item.children.length)) {\n                                item.setAttribute('tabindex', -1);\n                            }\n                            else {\n                                item.setAttribute('aria-hidden', 'true');\n                            }\n                        }\n                    });\n                    // Set accessibility properties on parent div\n                    var parentDiv = (exportList[0] && exportList[0].parentNode);\n                    if (parentDiv) {\n                        attr(parentDiv, {\n                            'aria-hidden': void 0,\n                            'aria-label': chart.langFormat('accessibility.exporting.chartMenuLabel', { chart: chart }),\n                            role: 'list' // Needed for webkit/VO\n                        });\n                    }\n                }\n            };\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            MenuComponent.prototype.getKeyboardNavigation = function () {\n                var keys = this.keyCodes,\n                    chart = this.chart,\n                    component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        // Arrow prev handler\n                        [\n                            [keys.left, keys.up],\n                            function () {\n                                return component.onKbdPrevious(this);\n                            }\n                        ],\n                        // Arrow next handler\n                        [\n                            [keys.right, keys.down],\n                            function () {\n                                return component.onKbdNext(this);\n                            }\n                        ],\n                        // Click handler\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onKbdClick(this);\n                            }\n                        ]\n                    ],\n                    // Only run exporting navigation if exporting support exists and is\n                    // enabled on chart\n                    validate: function () {\n                        return !!chart.exporting &&\n                            chart.options.exporting.enabled !== false &&\n                            chart.options.exporting.accessibility.enabled !==\n                                false;\n                    },\n                    // Focus export menu button\n                    init: function () {\n                        var proxy = component.exportButtonProxy;\n                        var svgEl = component.chart.exportingGroup;\n                        if (proxy && svgEl) {\n                            chart.setFocusToElement(svgEl, proxy.buttonElement);\n                        }\n                    },\n                    // Hide the menu\n                    terminate: function () {\n                        chart.hideExportMenu();\n                    }\n                });\n            };\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            MenuComponent.prototype.onKbdPrevious = function (keyboardNavigationHandler) {\n                var chart = this.chart;\n                var a11yOptions = chart.options.accessibility;\n                var response = keyboardNavigationHandler.response;\n                // Try to highlight prev item in list. Highlighting e.g.\n                // separators will fail.\n                var i = chart.highlightedExportItemIx || 0;\n                while (i--) {\n                    if (chart.highlightExportItem(i)) {\n                        return response.success;\n                    }\n                }\n                // We failed, so wrap around or move to prev module\n                if (a11yOptions.keyboardNavigation.wrapAround) {\n                    chart.highlightLastExportItem();\n                    return response.success;\n                }\n                return response.prev;\n            };\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            MenuComponent.prototype.onKbdNext = function (keyboardNavigationHandler) {\n                var chart = this.chart;\n                var a11yOptions = chart.options.accessibility;\n                var response = keyboardNavigationHandler.response;\n                // Try to highlight next item in list. Highlighting e.g.\n                // separators will fail.\n                for (var i = (chart.highlightedExportItemIx || 0) + 1; i < chart.exportDivElements.length; ++i) {\n                    if (chart.highlightExportItem(i)) {\n                        return response.success;\n                    }\n                }\n                // We failed, so wrap around or move to next module\n                if (a11yOptions.keyboardNavigation.wrapAround) {\n                    chart.highlightExportItem(0);\n                    return response.success;\n                }\n                return response.next;\n            };\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            MenuComponent.prototype.onKbdClick = function (keyboardNavigationHandler) {\n                var chart = this.chart;\n                var curHighlightedItem = chart.exportDivElements[chart.highlightedExportItemIx];\n                var exportButtonElement = getExportMenuButtonElement(chart).element;\n                if (chart.openMenu) {\n                    this.fakeClickEvent(curHighlightedItem);\n                }\n                else {\n                    this.fakeClickEvent(exportButtonElement);\n                    chart.highlightExportItem(0);\n                }\n                return keyboardNavigationHandler.response.success;\n            };\n            return MenuComponent;\n        }(AccessibilityComponent));\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (MenuComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedClasses = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(ChartClass) {\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    var chartProto = Chart.prototype;\n                    chartProto.hideExportMenu = chartHideExportMenu;\n                    chartProto.highlightExportItem = chartHighlightExportItem;\n                    chartProto.highlightLastExportItem = chartHighlightLastExportItem;\n                    chartProto.showExportMenu = chartShowExportMenu;\n                }\n            }\n            MenuComponent.compose = compose;\n            /**\n             * Show the export menu and focus the first item (if exists).\n             *\n             * @private\n             * @function Highcharts.Chart#showExportMenu\n             */\n            function chartShowExportMenu() {\n                var exportButton = getExportMenuButtonElement(this);\n                if (exportButton) {\n                    var el = exportButton.element;\n                    if (el.onclick) {\n                        el.onclick(getFakeMouseEvent('click'));\n                    }\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.Chart#hideExportMenu\n             */\n            function chartHideExportMenu() {\n                var chart = this,\n                    exportList = chart.exportDivElements;\n                if (exportList && chart.exportContextMenu && chart.openMenu) {\n                    // Reset hover states etc.\n                    exportList.forEach(function (el) {\n                        if (el &&\n                            el.className === 'highcharts-menu-item' &&\n                            el.onmouseout) {\n                            el.onmouseout(getFakeMouseEvent('mouseout'));\n                        }\n                    });\n                    chart.highlightedExportItemIx = 0;\n                    // Hide the menu div\n                    chart.exportContextMenu.hideMenu();\n                    // Make sure the chart has focus and can capture keyboard events\n                    chart.container.focus();\n                }\n            }\n            /**\n             * Highlight export menu item by index.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightExportItem\n             */\n            function chartHighlightExportItem(ix) {\n                var listItem = this.exportDivElements && this.exportDivElements[ix];\n                var curHighlighted = this.exportDivElements &&\n                        this.exportDivElements[this.highlightedExportItemIx];\n                if (listItem &&\n                    listItem.tagName === 'LI' &&\n                    !(listItem.children && listItem.children.length)) {\n                    // Test if we have focus support for SVG elements\n                    var hasSVGFocusSupport = !!(this.renderTo.getElementsByTagName('g')[0] || {}).focus;\n                    // Only focus if we can set focus back to the elements after\n                    // destroying the menu (#7422)\n                    if (listItem.focus && hasSVGFocusSupport) {\n                        listItem.focus();\n                    }\n                    if (curHighlighted && curHighlighted.onmouseout) {\n                        curHighlighted.onmouseout(getFakeMouseEvent('mouseout'));\n                    }\n                    if (listItem.onmouseover) {\n                        listItem.onmouseover(getFakeMouseEvent('mouseover'));\n                    }\n                    this.highlightedExportItemIx = ix;\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * Try to highlight the last valid export menu item.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightLastExportItem\n             */\n            function chartHighlightLastExportItem() {\n                var chart = this;\n                if (chart.exportDivElements) {\n                    var i = chart.exportDivElements.length;\n                    while (i--) {\n                        if (chart.highlightExportItem(i)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        })(MenuComponent || (MenuComponent = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return MenuComponent;\n    });\n    _registerModule(_modules, 'Accessibility/KeyboardNavigation.js', [_modules['Core/Globals.js'], _modules['Accessibility/Components/MenuComponent.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, MenuComponent, U, EventProvider, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Main keyboard navigation handling.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc,\n            win = H.win;\n        var addEvent = U.addEvent,\n            fireEvent = U.fireEvent;\n        var getElement = HTMLUtilities.getElement,\n            simulatedEventTarget = HTMLUtilities.simulatedEventTarget;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The KeyboardNavigation class, containing the overall keyboard navigation\n         * logic for the chart.\n         *\n         * @requires module:modules/accessibility\n         *\n         * @private\n         * @class\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         * @param {Object} components\n         *        Map of component names to AccessibilityComponent objects.\n         * @name Highcharts.KeyboardNavigation\n         */\n        var KeyboardNavigation = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function KeyboardNavigation(chart, components) {\n                    /* *\n                     *\n                     *  Properties\n                     *\n                     * */\n                    this.chart = void 0;\n                this.components = void 0;\n                this.currentModuleIx = NaN;\n                this.eventProvider = void 0;\n                this.exitAnchor = void 0;\n                this.modules = [];\n                this.tabindexContainer = void 0;\n                this.init(chart, components);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Initialize the class\n             * @private\n             * @param {Highcharts.Chart} chart\n             *        Chart object\n             * @param {Object} components\n             *        Map of component names to AccessibilityComponent objects.\n             */\n            KeyboardNavigation.prototype.init = function (chart, components) {\n                var _this = this;\n                var ep = this.eventProvider = new EventProvider();\n                this.chart = chart;\n                this.components = components;\n                this.modules = [];\n                this.currentModuleIx = 0;\n                this.update();\n                ep.addEvent(this.tabindexContainer, 'keydown', function (e) { return _this.onKeydown(e); });\n                ep.addEvent(this.tabindexContainer, 'focus', function (e) { return _this.onFocus(e); });\n                ['mouseup', 'touchend'].forEach(function (eventName) {\n                    return ep.addEvent(doc, eventName, function (e) { return _this.onMouseUp(e); });\n                });\n                ['mousedown', 'touchstart'].forEach(function (eventName) {\n                    return ep.addEvent(chart.renderTo, eventName, function () {\n                        _this.isClickingChart = true;\n                    });\n                });\n                ep.addEvent(chart.renderTo, 'mouseover', function () {\n                    _this.pointerIsOverChart = true;\n                });\n                ep.addEvent(chart.renderTo, 'mouseout', function () {\n                    _this.pointerIsOverChart = false;\n                });\n            };\n            /**\n             * Update the modules for the keyboard navigation.\n             * @param {Array<string>} [order]\n             *        Array specifying the tab order of the components.\n             */\n            KeyboardNavigation.prototype.update = function (order) {\n                var a11yOptions = this.chart.options.accessibility,\n                    keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation,\n                    components = this.components;\n                this.updateContainerTabindex();\n                if (keyboardOptions &&\n                    keyboardOptions.enabled &&\n                    order &&\n                    order.length) {\n                    // We (still) have keyboard navigation. Update module list\n                    this.modules = order.reduce(function (modules, componentName) {\n                        var navModules = components[componentName]\n                                .getKeyboardNavigation();\n                        return modules.concat(navModules);\n                    }, []);\n                    this.updateExitAnchor();\n                }\n                else {\n                    this.modules = [];\n                    this.currentModuleIx = 0;\n                    this.removeExitAnchor();\n                }\n            };\n            /**\n             * We use an exit anchor to move focus out of chart whenever we want, by\n             * setting focus to this div and not preventing the default tab action. We\n             * also use this when users come back into the chart by tabbing back, in\n             * order to navigate from the end of the chart.\n             * @private\n             */\n            KeyboardNavigation.prototype.updateExitAnchor = function () {\n                var endMarkerId = \"highcharts-end-of-chart-marker-\".concat(this.chart.index),\n                    endMarker = getElement(endMarkerId);\n                this.removeExitAnchor();\n                if (endMarker) {\n                    this.makeElementAnExitAnchor(endMarker);\n                    this.exitAnchor = endMarker;\n                }\n                else {\n                    this.createExitAnchor();\n                }\n            };\n            /**\n             * Move to prev/next module.\n             * @private\n             * @param {number} direction\n             * Direction to move. +1 for next, -1 for prev.\n             * @return {boolean}\n             * True if there was a valid module in direction.\n             */\n            KeyboardNavigation.prototype.move = function (direction) {\n                var curModule = this.modules && this.modules[this.currentModuleIx];\n                if (curModule && curModule.terminate) {\n                    curModule.terminate(direction);\n                }\n                // Remove existing focus border if any\n                if (this.chart.focusElement) {\n                    this.chart.focusElement.removeFocusBorder();\n                }\n                this.currentModuleIx += direction;\n                var newModule = this.modules && this.modules[this.currentModuleIx];\n                if (newModule) {\n                    if (newModule.validate && !newModule.validate()) {\n                        return this.move(direction); // Invalid module, recurse\n                    }\n                    if (newModule.init) {\n                        newModule.init(direction); // Valid module, init it\n                        return true;\n                    }\n                }\n                // No module\n                this.currentModuleIx = 0; // Reset counter\n                // Set focus to chart or exit anchor depending on direction\n                this.exiting = true;\n                if (direction > 0) {\n                    this.exitAnchor && this.exitAnchor.focus();\n                }\n                else {\n                    this.tabindexContainer.focus();\n                }\n                return false;\n            };\n            /**\n             * Function to run on container focus\n             * @private\n             * @param {global.FocusEvent} e Browser focus event.\n             */\n            KeyboardNavigation.prototype.onFocus = function (e) {\n                var chart = this.chart;\n                var focusComesFromChart = (e.relatedTarget &&\n                        chart.container.contains(e.relatedTarget));\n                // Init keyboard nav if tabbing into chart\n                if (!this.exiting &&\n                    !this.tabbingInBackwards &&\n                    !this.isClickingChart &&\n                    !focusComesFromChart) {\n                    var ix = this.getFirstValidModuleIx();\n                    if (ix !== null) {\n                        this.currentModuleIx = ix;\n                        this.modules[ix].init(1);\n                    }\n                }\n                this.exiting = false;\n            };\n            /**\n             * Reset chart navigation state if we mouse click and it's not already\n             * reset. Reset fully if outside the chart, otherwise just hide focus\n             * indicator.\n             * @private\n             */\n            KeyboardNavigation.prototype.onMouseUp = function (e) {\n                delete this.isClickingChart;\n                if (!this.keyboardReset &&\n                    e.relatedTarget !== simulatedEventTarget) {\n                    var chart = this.chart;\n                    if (!this.pointerIsOverChart) {\n                        var curMod = this.modules &&\n                                this.modules[this.currentModuleIx || 0];\n                        if (curMod && curMod.terminate) {\n                            curMod.terminate();\n                        }\n                        this.currentModuleIx = 0;\n                    }\n                    if (chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                        delete chart.focusElement;\n                    }\n                    this.keyboardReset = true;\n                }\n            };\n            /**\n             * Function to run on keydown\n             * @private\n             * @param {global.KeyboardEvent} ev Browser keydown event.\n             */\n            KeyboardNavigation.prototype.onKeydown = function (ev) {\n                var e = ev || win.event,\n                    curNavModule = (this.modules &&\n                        this.modules.length &&\n                        this.modules[this.currentModuleIx]);\n                var preventDefault;\n                // Used for resetting nav state when clicking outside chart\n                this.keyboardReset = false;\n                // Used for sending focus out of the chart by the modules.\n                this.exiting = false;\n                // If there is a nav module for the current index, run it.\n                // Otherwise, we are outside of the chart in some direction.\n                if (curNavModule) {\n                    var response = curNavModule.run(e);\n                    if (response === curNavModule.response.success) {\n                        preventDefault = true;\n                    }\n                    else if (response === curNavModule.response.prev) {\n                        preventDefault = this.move(-1);\n                    }\n                    else if (response === curNavModule.response.next) {\n                        preventDefault = this.move(1);\n                    }\n                    if (preventDefault) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n            };\n            /**\n             * Chart container should have tabindex if navigation is enabled.\n             * @private\n             */\n            KeyboardNavigation.prototype.updateContainerTabindex = function () {\n                var a11yOptions = this.chart.options.accessibility,\n                    keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation,\n                    shouldHaveTabindex = !(keyboardOptions && keyboardOptions.enabled === false),\n                    chart = this.chart,\n                    container = chart.container;\n                var tabindexContainer;\n                if (chart.renderTo.hasAttribute('tabindex')) {\n                    container.removeAttribute('tabindex');\n                    tabindexContainer = chart.renderTo;\n                }\n                else {\n                    tabindexContainer = container;\n                }\n                this.tabindexContainer = tabindexContainer;\n                var curTabindex = tabindexContainer.getAttribute('tabindex');\n                if (shouldHaveTabindex && !curTabindex) {\n                    tabindexContainer.setAttribute('tabindex', '0');\n                }\n                else if (!shouldHaveTabindex) {\n                    chart.container.removeAttribute('tabindex');\n                }\n            };\n            /**\n             * Add new exit anchor to the chart.\n             * @private\n             */\n            KeyboardNavigation.prototype.createExitAnchor = function () {\n                var chart = this.chart,\n                    exitAnchor = this.exitAnchor = doc.createElement('div');\n                chart.renderTo.appendChild(exitAnchor);\n                this.makeElementAnExitAnchor(exitAnchor);\n            };\n            /**\n             * Add attributes and events to an element to make it function as an\n             * exit anchor.\n             * @private\n             */\n            KeyboardNavigation.prototype.makeElementAnExitAnchor = function (el) {\n                var chartTabindex = this.tabindexContainer.getAttribute('tabindex') || 0;\n                el.setAttribute('class', 'highcharts-exit-anchor');\n                el.setAttribute('tabindex', chartTabindex);\n                el.setAttribute('aria-hidden', false);\n                // Handle focus\n                this.addExitAnchorEventsToEl(el);\n            };\n            /**\n             * Destroy the exit anchor and remove from DOM.\n             * @private\n             */\n            KeyboardNavigation.prototype.removeExitAnchor = function () {\n                if (this.exitAnchor && this.exitAnchor.parentNode) {\n                    this.exitAnchor.parentNode.removeChild(this.exitAnchor);\n                    delete this.exitAnchor;\n                }\n            };\n            /**\n             * Add focus handler to exit anchor element.\n             * @private\n             */\n            KeyboardNavigation.prototype.addExitAnchorEventsToEl = function (element) {\n                var chart = this.chart,\n                    keyboardNavigation = this;\n                this.eventProvider.addEvent(element, 'focus', function (ev) {\n                    var e = ev || win.event,\n                        focusComesFromChart = (e.relatedTarget &&\n                            chart.container.contains(e.relatedTarget)),\n                        comingInBackwards = !(focusComesFromChart || keyboardNavigation.exiting);\n                    if (chart.focusElement) {\n                        delete chart.focusElement;\n                    }\n                    if (comingInBackwards) {\n                        // Focus the container instead\n                        keyboardNavigation.tabbingInBackwards = true;\n                        keyboardNavigation.tabindexContainer.focus();\n                        delete keyboardNavigation.tabbingInBackwards;\n                        e.preventDefault();\n                        // Move to last valid keyboard nav module\n                        // Note the we don't run it, just set the index\n                        if (keyboardNavigation.modules &&\n                            keyboardNavigation.modules.length) {\n                            keyboardNavigation.currentModuleIx =\n                                keyboardNavigation.modules.length - 1;\n                            var curModule = keyboardNavigation.modules[keyboardNavigation.currentModuleIx];\n                            // Validate the module\n                            if (curModule &&\n                                curModule.validate && !curModule.validate()) {\n                                // Invalid. Try moving backwards to find next valid.\n                                keyboardNavigation.move(-1);\n                            }\n                            else if (curModule) {\n                                // We have a valid module, init it\n                                curModule.init(-1);\n                            }\n                        }\n                    }\n                    else {\n                        // Don't skip the next focus, we only skip once.\n                        keyboardNavigation.exiting = false;\n                    }\n                });\n            };\n            /**\n             * Get the ix of the first module that either does not require validation or\n             * validates positively.\n             * @private\n             */\n            KeyboardNavigation.prototype.getFirstValidModuleIx = function () {\n                var len = this.modules.length;\n                for (var i = 0; i < len; ++i) {\n                    var mod = this.modules[i];\n                    if (!mod.validate || mod.validate()) {\n                        return i;\n                    }\n                }\n                return null;\n            };\n            /**\n             * Remove all traces of keyboard navigation.\n             * @private\n             */\n            KeyboardNavigation.prototype.destroy = function () {\n                this.removeExitAnchor();\n                this.eventProvider.removeAddedEvents();\n                this.chart.container.removeAttribute('tabindex');\n            };\n            return KeyboardNavigation;\n        }());\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (KeyboardNavigation) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Construction\n             *\n             * */\n            var composedItems = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Composition function.\n             * @private\n             */\n            function compose(ChartClass) {\n                MenuComponent.compose(ChartClass);\n                if (composedItems.indexOf(ChartClass) === -1) {\n                    composedItems.push(ChartClass);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.dismissPopupContent = chartDismissPopupContent;\n                }\n                if (composedItems.indexOf(doc) === -1) {\n                    composedItems.push(doc);\n                    addEvent(doc, 'keydown', documentOnKeydown);\n                }\n                return ChartClass;\n            }\n            KeyboardNavigation.compose = compose;\n            /**\n             * Dismiss popup content in chart, including export menu and tooltip.\n             * @private\n             */\n            function chartDismissPopupContent() {\n                var chart = this;\n                fireEvent(this, 'dismissPopupContent', {}, function () {\n                    if (chart.tooltip) {\n                        chart.tooltip.hide(0);\n                    }\n                    chart.hideExportMenu();\n                });\n            }\n            /**\n             * Add event listener to document to detect ESC key press and dismiss\n             * hover/popup content.\n             * @private\n             */\n            function documentOnKeydown(e) {\n                var keycode = e.which || e.keyCode;\n                var esc = 27;\n                if (keycode === esc && H.charts) {\n                    H.charts.forEach(function (chart) {\n                        if (chart && chart.dismissPopupContent) {\n                            chart.dismissPopupContent();\n                        }\n                    });\n                }\n            }\n        })(KeyboardNavigation || (KeyboardNavigation = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return KeyboardNavigation;\n    });\n    _registerModule(_modules, 'Accessibility/Components/LegendComponent.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Globals.js'], _modules['Core/Legend/Legend.js'], _modules['Core/Utilities.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (A, H, Legend, U, AccessibilityComponent, KeyboardNavigationHandler, CU, HU) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Accessibility component for chart legend.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var animObject = A.animObject;\n        var doc = H.doc;\n        var addEvent = U.addEvent,\n            fireEvent = U.fireEvent,\n            isNumber = U.isNumber,\n            pick = U.pick,\n            syncTimeout = U.syncTimeout;\n        var getChartTitle = CU.getChartTitle;\n        var stripHTMLTags = HU.stripHTMLTagsFromString,\n            addClass = HU.addClass,\n            removeClass = HU.removeClass;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function scrollLegendToItem(legend, itemIx) {\n            var itemPage = (legend.allItems[itemIx].legendItem || {}).pageIx,\n                curPage = legend.currentPage;\n            if (typeof itemPage !== 'undefined' && itemPage + 1 !== curPage) {\n                legend.scroll(1 + itemPage - curPage);\n            }\n        }\n        /**\n         * @private\n         */\n        function shouldDoLegendA11y(chart) {\n            var items = chart.legend && chart.legend.allItems,\n                legendA11yOptions = (chart.options.legend.accessibility || {}),\n                unsupportedColorAxis = chart.colorAxis && chart.colorAxis.some(function (c) { return !c.dataClasses || !c.dataClasses.length; });\n            return !!(items && items.length &&\n                !unsupportedColorAxis &&\n                legendA11yOptions.enabled !== false);\n        }\n        /**\n         * @private\n         */\n        function setLegendItemHoverState(hoverActive, item) {\n            var legendItem = item.legendItem || {};\n            item.setState(hoverActive ? 'hover' : '', true);\n            for (var _i = 0, _a = ['group', 'label', 'symbol']; _i < _a.length; _i++) {\n                var key = _a[_i];\n                var svgElement = legendItem[key];\n                var element = svgElement && svgElement.element || svgElement;\n                if (element) {\n                    fireEvent(element, hoverActive ? 'mouseover' : 'mouseout');\n                }\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The LegendComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.LegendComponent\n         */\n        var LegendComponent = /** @class */ (function (_super) {\n                __extends(LegendComponent, _super);\n            function LegendComponent() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.highlightedLegendItemIx = NaN;\n                _this.proxyGroup = null;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Init the component\n             * @private\n             */\n            LegendComponent.prototype.init = function () {\n                var component = this;\n                this.recreateProxies();\n                // Note: Chart could create legend dynamically, so events cannot be\n                // tied to the component's chart's current legend.\n                // @todo 1. attach component to created legends\n                // @todo 2. move listeners to composition and access `this.component`\n                this.addEvent(Legend, 'afterScroll', function () {\n                    if (this.chart === component.chart) {\n                        component.proxyProvider.updateGroupProxyElementPositions('legend');\n                        component.updateLegendItemProxyVisibility();\n                        if (component.highlightedLegendItemIx > -1) {\n                            this.chart.highlightLegendItem(component.highlightedLegendItemIx);\n                        }\n                    }\n                });\n                this.addEvent(Legend, 'afterPositionItem', function (e) {\n                    if (this.chart === component.chart && this.chart.renderer) {\n                        component.updateProxyPositionForItem(e.item);\n                    }\n                });\n                this.addEvent(Legend, 'afterRender', function () {\n                    if (this.chart === component.chart &&\n                        this.chart.renderer &&\n                        component.recreateProxies()) {\n                        syncTimeout(function () { return component.proxyProvider\n                            .updateGroupProxyElementPositions('legend'); }, animObject(pick(this.chart.renderer.globalAnimation, true)).duration);\n                    }\n                });\n            };\n            /**\n             * Update visibility of legend items when using paged legend\n             * @private\n             */\n            LegendComponent.prototype.updateLegendItemProxyVisibility = function () {\n                var chart = this.chart;\n                var legend = chart.legend;\n                var items = legend.allItems || [];\n                var curPage = legend.currentPage || 1;\n                var clipHeight = legend.clipHeight || 0;\n                var legendItem;\n                items.forEach(function (item) {\n                    if (item.a11yProxyElement) {\n                        var hasPages = legend.pages && legend.pages.length;\n                        var proxyEl = item.a11yProxyElement.element;\n                        var hide = false;\n                        legendItem = item.legendItem || {};\n                        if (hasPages) {\n                            var itemPage = legendItem.pageIx || 0;\n                            var y = legendItem.y || 0;\n                            var h = legendItem.label ?\n                                    Math.round(legendItem.label.getBBox().height) :\n                                    0;\n                            hide = y + h - legend.pages[itemPage] > clipHeight ||\n                                itemPage !== curPage - 1;\n                        }\n                        if (hide) {\n                            if (chart.styledMode) {\n                                addClass(proxyEl, 'highcharts-a11y-invisible');\n                            }\n                            else {\n                                proxyEl.style.visibility = 'hidden';\n                            }\n                        }\n                        else {\n                            removeClass(proxyEl, 'highcharts-a11y-invisible');\n                            proxyEl.style.visibility = '';\n                        }\n                    }\n                });\n            };\n            /**\n             * @private\n             */\n            LegendComponent.prototype.onChartRender = function () {\n                if (!shouldDoLegendA11y(this.chart)) {\n                    this.removeProxies();\n                }\n            };\n            /**\n             * @private\n             */\n            LegendComponent.prototype.highlightAdjacentLegendPage = function (direction) {\n                var chart = this.chart;\n                var legend = chart.legend;\n                var curPageIx = legend.currentPage || 1;\n                var newPageIx = curPageIx + direction;\n                var pages = legend.pages || [];\n                if (newPageIx > 0 && newPageIx <= pages.length) {\n                    var i = 0,\n                        res = void 0;\n                    for (var _i = 0, _a = legend.allItems; _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        if (((item.legendItem || {}).pageIx || 0) + 1 === newPageIx) {\n                            res = chart.highlightLegendItem(i);\n                            if (res) {\n                                this.highlightedLegendItemIx = i;\n                            }\n                        }\n                        ++i;\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            LegendComponent.prototype.updateProxyPositionForItem = function (item) {\n                if (item.a11yProxyElement) {\n                    item.a11yProxyElement.refreshPosition();\n                }\n            };\n            /**\n             * Returns false if legend a11y is disabled and proxies were not created,\n             * true otherwise.\n             * @private\n             */\n            LegendComponent.prototype.recreateProxies = function () {\n                var focusedElement = doc.activeElement;\n                var proxyGroup = this.proxyGroup;\n                var shouldRestoreFocus = focusedElement && proxyGroup &&\n                        proxyGroup.contains(focusedElement);\n                this.removeProxies();\n                if (shouldDoLegendA11y(this.chart)) {\n                    this.addLegendProxyGroup();\n                    this.proxyLegendItems();\n                    this.updateLegendItemProxyVisibility();\n                    this.updateLegendTitle();\n                    if (shouldRestoreFocus) {\n                        this.chart.highlightLegendItem(this.highlightedLegendItemIx);\n                    }\n                    return true;\n                }\n                return false;\n            };\n            /**\n             * @private\n             */\n            LegendComponent.prototype.removeProxies = function () {\n                this.proxyProvider.removeGroup('legend');\n            };\n            /**\n             * @private\n             */\n            LegendComponent.prototype.updateLegendTitle = function () {\n                var chart = this.chart;\n                var legendTitle = stripHTMLTags((chart.legend &&\n                        chart.legend.options.title &&\n                        chart.legend.options.title.text ||\n                        '').replace(/<br ?\\/?>/g, ' '));\n                var legendLabel = chart.langFormat('accessibility.legend.legendLabel' + (legendTitle ? '' : 'NoTitle'), {\n                        chart: chart,\n                        legendTitle: legendTitle,\n                        chartTitle: getChartTitle(chart)\n                    });\n                this.proxyProvider.updateGroupAttrs('legend', {\n                    'aria-label': legendLabel\n                });\n            };\n            /**\n             * @private\n             */\n            LegendComponent.prototype.addLegendProxyGroup = function () {\n                var a11yOptions = this.chart.options.accessibility;\n                var groupRole = a11yOptions.landmarkVerbosity === 'all' ?\n                        'region' : null;\n                this.proxyGroup = this.proxyProvider.addGroup('legend', 'ul', {\n                    // Filled by updateLegendTitle, to keep up to date without\n                    // recreating group\n                    'aria-label': '_placeholder_',\n                    role: groupRole\n                });\n            };\n            /**\n             * @private\n             */\n            LegendComponent.prototype.proxyLegendItems = function () {\n                var component = this,\n                    items = (this.chart.legend || {}).allItems || [];\n                var legendItem;\n                items.forEach(function (item) {\n                    legendItem = item.legendItem || {};\n                    if (legendItem.label && legendItem.label.element) {\n                        component.proxyLegendItem(item);\n                    }\n                });\n            };\n            /**\n             * @private\n             * @param {Highcharts.BubbleLegendItem|Point|Highcharts.Series} item\n             */\n            LegendComponent.prototype.proxyLegendItem = function (item) {\n                var legendItem = item.legendItem || {};\n                if (!legendItem.label || !legendItem.group) {\n                    return;\n                }\n                var itemLabel = this.chart.langFormat('accessibility.legend.legendItem', {\n                        chart: this.chart,\n                        itemName: stripHTMLTags(item.name),\n                        item: item\n                    });\n                var attribs = {\n                        tabindex: -1,\n                        'aria-pressed': item.visible,\n                        'aria-label': itemLabel\n                    };\n                // Considers useHTML\n                var proxyPositioningElement = legendItem.group.div ?\n                        legendItem.label :\n                        legendItem.group;\n                item.a11yProxyElement = this.proxyProvider.addProxyElement('legend', {\n                    click: legendItem.label,\n                    visual: proxyPositioningElement.element\n                }, attribs);\n            };\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            LegendComponent.prototype.getKeyboardNavigation = function () {\n                var keys = this.keyCodes,\n                    component = this,\n                    chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                return component.onKbdArrowKey(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onKbdClick(this);\n                            }\n                        ],\n                        [\n                            [keys.pageDown, keys.pageUp],\n                            function (keyCode) {\n                                var direction = keyCode === keys.pageDown ? 1 : -1;\n                                component.highlightAdjacentLegendPage(direction);\n                                return this.response.success;\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return component.shouldHaveLegendNavigation();\n                    },\n                    init: function () {\n                        chart.highlightLegendItem(0);\n                        component.highlightedLegendItemIx = 0;\n                    },\n                    terminate: function () {\n                        component.highlightedLegendItemIx = -1;\n                        chart.legend.allItems.forEach(function (item) { return setLegendItemHoverState(false, item); });\n                    }\n                });\n            };\n            /**\n             * Arrow key navigation\n             * @private\n             */\n            LegendComponent.prototype.onKbdArrowKey = function (keyboardNavigationHandler, keyCode) {\n                var keys = this.keyCodes,\n                    response = keyboardNavigationHandler.response,\n                    chart = this.chart,\n                    a11yOptions = chart.options.accessibility,\n                    numItems = chart.legend.allItems.length,\n                    direction = (keyCode === keys.left || keyCode === keys.up) ? -1 : 1;\n                var res = chart.highlightLegendItem(this.highlightedLegendItemIx + direction);\n                if (res) {\n                    this.highlightedLegendItemIx += direction;\n                    return response.success;\n                }\n                if (numItems > 1 &&\n                    a11yOptions.keyboardNavigation.wrapAround) {\n                    keyboardNavigationHandler.init(direction);\n                    return response.success;\n                }\n                return response.success;\n            };\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            LegendComponent.prototype.onKbdClick = function (keyboardNavigationHandler) {\n                var legendItem = this.chart.legend.allItems[this.highlightedLegendItemIx];\n                if (legendItem && legendItem.a11yProxyElement) {\n                    legendItem.a11yProxyElement.click();\n                }\n                return keyboardNavigationHandler.response.success;\n            };\n            /**\n             * @private\n             */\n            LegendComponent.prototype.shouldHaveLegendNavigation = function () {\n                if (!shouldDoLegendA11y(this.chart)) {\n                    return false;\n                }\n                var chart = this.chart,\n                    legendOptions = chart.options.legend || {},\n                    legendA11yOptions = (legendOptions.accessibility || {});\n                return !!(chart.legend.display &&\n                    legendA11yOptions.keyboardNavigation &&\n                    legendA11yOptions.keyboardNavigation.enabled);\n            };\n            return LegendComponent;\n        }(AccessibilityComponent));\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (LegendComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedClasses = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Highlight legend item by index.\n             * @private\n             */\n            function chartHighlightLegendItem(ix) {\n                var items = this.legend.allItems;\n                var oldIx = this.accessibility &&\n                        this.accessibility.components.legend.highlightedLegendItemIx;\n                var itemToHighlight = items[ix],\n                    legendItem = itemToHighlight.legendItem || {};\n                if (itemToHighlight) {\n                    if (isNumber(oldIx) && items[oldIx]) {\n                        setLegendItemHoverState(false, items[oldIx]);\n                    }\n                    scrollLegendToItem(this.legend, ix);\n                    var legendItemProp = legendItem.label;\n                    var proxyBtn = itemToHighlight.a11yProxyElement &&\n                            itemToHighlight.a11yProxyElement.buttonElement;\n                    if (legendItemProp && legendItemProp.element && proxyBtn) {\n                        this.setFocusToElement(legendItemProp, proxyBtn);\n                    }\n                    setLegendItemHoverState(true, itemToHighlight);\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, LegendClass) {\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.highlightLegendItem = chartHighlightLegendItem;\n                }\n                if (composedClasses.indexOf(LegendClass) === -1) {\n                    composedClasses.push(LegendClass);\n                    addEvent(LegendClass, 'afterColorizeItem', legendOnAfterColorizeItem);\n                }\n            }\n            LegendComponent.compose = compose;\n            /**\n             * Keep track of pressed state for legend items.\n             * @private\n             */\n            function legendOnAfterColorizeItem(e) {\n                var chart = this.chart,\n                    a11yOptions = chart.options.accessibility,\n                    legendItem = e.item;\n                if (a11yOptions.enabled && legendItem && legendItem.a11yProxyElement) {\n                    legendItem.a11yProxyElement.buttonElement.setAttribute('aria-pressed', e.visible ? 'true' : 'false');\n                }\n            }\n        })(LegendComponent || (LegendComponent = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return LegendComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesDescriber.js', [_modules['Accessibility/Components/AnnotationsA11y.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/FormatUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (AnnotationsA11y, ChartUtilities, F, HTMLUtilities, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Place desriptions on a series and its points.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getPointAnnotationTexts = AnnotationsA11y.getPointAnnotationTexts;\n        var getAxisDescription = ChartUtilities.getAxisDescription,\n            getSeriesFirstPointElement = ChartUtilities.getSeriesFirstPointElement,\n            getSeriesA11yElement = ChartUtilities.getSeriesA11yElement,\n            unhideChartElementFromAT = ChartUtilities.unhideChartElementFromAT;\n        var format = F.format,\n            numberFormat = F.numberFormat;\n        var reverseChildNodes = HTMLUtilities.reverseChildNodes,\n            stripHTMLTags = HTMLUtilities.stripHTMLTagsFromString;\n        var find = U.find,\n            isNumber = U.isNumber,\n            pick = U.pick,\n            defined = U.defined;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function findFirstPointWithGraphic(point) {\n            var sourcePointIndex = point.index;\n            if (!point.series || !point.series.data || !defined(sourcePointIndex)) {\n                return null;\n            }\n            return find(point.series.data, function (p) {\n                return !!(p &&\n                    typeof p.index !== 'undefined' &&\n                    p.index > sourcePointIndex &&\n                    p.graphic &&\n                    p.graphic.element);\n            }) || null;\n        }\n        /**\n         * Whether or not we should add a mock point element in\n         * order to describe a point that has no graphic.\n         * @private\n         */\n        function shouldAddMockPoint(point) {\n            // Note: Sunburst series use isNull for hidden points on drilldown.\n            // Ignore these.\n            var series = point.series,\n                chart = series && series.chart,\n                isSunburst = series && series.is('sunburst'),\n                isNull = point.isNull,\n                shouldDescribeNull = chart &&\n                    chart\n                        .options.accessibility.point.describeNull;\n            return isNull && !isSunburst && shouldDescribeNull;\n        }\n        /**\n         * @private\n         */\n        function makeMockElement(point, pos) {\n            var renderer = point.series.chart.renderer,\n                mock = renderer.rect(pos.x,\n                pos.y, 1, 1);\n            mock.attr({\n                'class': 'highcharts-a11y-mock-point',\n                fill: 'none',\n                opacity: 0,\n                'fill-opacity': 0,\n                'stroke-opacity': 0\n            });\n            return mock;\n        }\n        /**\n         * @private\n         */\n        function addMockPointElement(point) {\n            var series = point.series,\n                firstPointWithGraphic = findFirstPointWithGraphic(point),\n                firstGraphic = firstPointWithGraphic && firstPointWithGraphic.graphic,\n                parentGroup = firstGraphic ?\n                    firstGraphic.parentGroup :\n                    series.graph || series.group,\n                mockPos = firstPointWithGraphic ? {\n                    x: pick(point.plotX,\n                firstPointWithGraphic.plotX, 0),\n                    y: pick(point.plotY,\n                firstPointWithGraphic.plotY, 0)\n                } : {\n                    x: pick(point.plotX, 0),\n                    y: pick(point.plotY, 0)\n                },\n                mockElement = makeMockElement(point,\n                mockPos);\n            if (parentGroup && parentGroup.element) {\n                point.graphic = mockElement;\n                point.hasMockGraphic = true;\n                mockElement.add(parentGroup);\n                // Move to correct pos in DOM\n                parentGroup.element.insertBefore(mockElement.element, firstGraphic ? firstGraphic.element : null);\n                return mockElement.element;\n            }\n        }\n        /**\n         * @private\n         */\n        function hasMorePointsThanDescriptionThreshold(series) {\n            var chartA11yOptions = series.chart.options.accessibility,\n                threshold = (chartA11yOptions.series.pointDescriptionEnabledThreshold);\n            return !!(threshold !== false &&\n                series.points &&\n                series.points.length >= threshold);\n        }\n        /**\n         * @private\n         */\n        function shouldSetScreenReaderPropsOnPoints(series) {\n            var seriesA11yOptions = series.options.accessibility || {};\n            return !hasMorePointsThanDescriptionThreshold(series) &&\n                !seriesA11yOptions.exposeAsGroupOnly;\n        }\n        /**\n         * @private\n         */\n        function shouldSetKeyboardNavPropsOnPoints(series) {\n            var chartA11yOptions = series.chart.options.accessibility,\n                seriesNavOptions = chartA11yOptions.keyboardNavigation.seriesNavigation;\n            return !!(series.points && (series.points.length <\n                seriesNavOptions.pointNavigationEnabledThreshold ||\n                seriesNavOptions.pointNavigationEnabledThreshold === false));\n        }\n        /**\n         * @private\n         */\n        function shouldDescribeSeriesElement(series) {\n            var chart = series.chart,\n                chartOptions = chart.options.chart,\n                chartHas3d = chartOptions.options3d && chartOptions.options3d.enabled,\n                hasMultipleSeries = chart.series.length > 1,\n                describeSingleSeriesOption = chart.options.accessibility.series.describeSingleSeries,\n                exposeAsGroupOnlyOption = (series.options.accessibility || {}).exposeAsGroupOnly,\n                noDescribe3D = chartHas3d && hasMultipleSeries;\n            return !noDescribe3D && (hasMultipleSeries || describeSingleSeriesOption ||\n                exposeAsGroupOnlyOption || hasMorePointsThanDescriptionThreshold(series));\n        }\n        /**\n         * @private\n         */\n        function pointNumberToString(point, value) {\n            var series = point.series,\n                chart = series.chart,\n                a11yPointOptions = chart.options.accessibility.point || {},\n                seriesA11yPointOptions = series.options.accessibility &&\n                    series.options.accessibility.point || {},\n                tooltipOptions = series.tooltipOptions || {},\n                lang = chart.options.lang;\n            if (isNumber(value)) {\n                return numberFormat(value, seriesA11yPointOptions.valueDecimals ||\n                    a11yPointOptions.valueDecimals ||\n                    tooltipOptions.valueDecimals ||\n                    -1, lang.decimalPoint, lang.accessibility.thousandsSep || lang.thousandsSep);\n            }\n            return value;\n        }\n        /**\n         * @private\n         */\n        function getSeriesDescriptionText(series) {\n            var seriesA11yOptions = series.options.accessibility || {},\n                descOpt = seriesA11yOptions.description;\n            return descOpt && series.chart.langFormat('accessibility.series.description', {\n                description: descOpt,\n                series: series\n            }) || '';\n        }\n        /**\n         * @private\n         */\n        function getSeriesAxisDescriptionText(series, axisCollection) {\n            var axis = series[axisCollection];\n            return series.chart.langFormat('accessibility.series.' + axisCollection + 'Description', {\n                name: getAxisDescription(axis),\n                series: series\n            });\n        }\n        /**\n         * Get accessible time description for a point on a datetime axis.\n         *\n         * @private\n         */\n        function getPointA11yTimeDescription(point) {\n            var series = point.series,\n                chart = series.chart,\n                seriesA11yOptions = series.options.accessibility &&\n                    series.options.accessibility.point || {},\n                a11yOptions = chart.options.accessibility.point || {},\n                dateXAxis = series.xAxis && series.xAxis.dateTime;\n            if (dateXAxis) {\n                var tooltipDateFormat = dateXAxis.getXDateFormat(point.x || 0,\n                    chart.options.tooltip.dateTimeLabelFormats),\n                    dateFormat = seriesA11yOptions.dateFormatter &&\n                        seriesA11yOptions.dateFormatter(point) ||\n                        a11yOptions.dateFormatter && a11yOptions.dateFormatter(point) ||\n                        seriesA11yOptions.dateFormat ||\n                        a11yOptions.dateFormat ||\n                        tooltipDateFormat;\n                return chart.time.dateFormat(dateFormat, point.x || 0, void 0);\n            }\n        }\n        /**\n         * @private\n         */\n        function getPointXDescription(point) {\n            var timeDesc = getPointA11yTimeDescription(point), xAxis = point.series.xAxis || {}, pointCategory = xAxis.categories && defined(point.category) &&\n                    ('' + point.category).replace('<br/>', ' '), canUseId = defined(point.id) &&\n                    ('' + point.id).indexOf('highcharts-') < 0, fallback = 'x, ' + point.x;\n            return point.name || timeDesc || pointCategory ||\n                (canUseId ? point.id : fallback);\n        }\n        /**\n         * @private\n         */\n        function getPointArrayMapValueDescription(point, prefix, suffix) {\n            var pre = prefix || '', suf = suffix || '', keyToValStr = function (key) {\n                    var num = pointNumberToString(point, pick(point[key], point.options[key]));\n                return key + ': ' + pre + num + suf;\n            }, pointArrayMap = point.series.pointArrayMap;\n            return pointArrayMap.reduce(function (desc, key) {\n                return desc + (desc.length ? ', ' : '') + keyToValStr(key);\n            }, '');\n        }\n        /**\n         * @private\n         */\n        function getPointValue(point) {\n            var series = point.series,\n                a11yPointOpts = series.chart.options.accessibility.point || {},\n                seriesA11yPointOpts = series.chart.options.accessibility &&\n                    series.chart.options.accessibility.point || {},\n                tooltipOptions = series.tooltipOptions || {},\n                valuePrefix = seriesA11yPointOpts.valuePrefix ||\n                    a11yPointOpts.valuePrefix ||\n                    tooltipOptions.valuePrefix ||\n                    '',\n                valueSuffix = seriesA11yPointOpts.valueSuffix ||\n                    a11yPointOpts.valueSuffix ||\n                    tooltipOptions.valueSuffix ||\n                    '',\n                fallbackKey = (typeof point.value !==\n                    'undefined' ?\n                    'value' : 'y'),\n                fallbackDesc = pointNumberToString(point,\n                point[fallbackKey]);\n            if (point.isNull) {\n                return series.chart.langFormat('accessibility.series.nullPointValue', {\n                    point: point\n                });\n            }\n            if (series.pointArrayMap) {\n                return getPointArrayMapValueDescription(point, valuePrefix, valueSuffix);\n            }\n            return valuePrefix + fallbackDesc + valueSuffix;\n        }\n        /**\n         * Return the description for the annotation(s) connected to a point, or\n         * empty string if none.\n         *\n         * @private\n         * @param {Highcharts.Point} point\n         * The data point to get the annotation info from.\n         * @return {string}\n         * Annotation description\n         */\n        function getPointAnnotationDescription(point) {\n            var chart = point.series.chart;\n            var langKey = 'accessibility.series.pointAnnotationsDescription';\n            var annotations = getPointAnnotationTexts(point);\n            var context = { point: point,\n                annotations: annotations };\n            return annotations.length ? chart.langFormat(langKey, context) : '';\n        }\n        /**\n         * Return string with information about point.\n         * @private\n         */\n        function getPointValueDescription(point) {\n            var series = point.series, chart = series.chart, seriesA11yOptions = series.options.accessibility, seriesValueDescFormat = seriesA11yOptions && seriesA11yOptions.point &&\n                    seriesA11yOptions.point.valueDescriptionFormat, pointValueDescriptionFormat = seriesValueDescFormat ||\n                    chart.options.accessibility.point.valueDescriptionFormat, showXDescription = pick(series.xAxis &&\n                    series.xAxis.options.accessibility &&\n                    series.xAxis.options.accessibility.enabled, !chart.angular), xDesc = showXDescription ? getPointXDescription(point) : '', context = {\n                    point: point,\n                    index: defined(point.index) ? (point.index + 1) : '',\n                    xDescription: xDesc,\n                    value: getPointValue(point),\n                    separator: showXDescription ? ', ' : ''\n                };\n            return format(pointValueDescriptionFormat, context, chart);\n        }\n        /**\n         * Return string with information about point.\n         * @private\n         */\n        function defaultPointDescriptionFormatter(point) {\n            var series = point.series, shouldExposeSeriesName = series.chart.series.length > 1 ||\n                    series.options.name, valText = getPointValueDescription(point), description = point.options && point.options.accessibility &&\n                    point.options.accessibility.description, userDescText = description ? ' ' + description : '', seriesNameText = shouldExposeSeriesName ? ' ' + series.name + '.' : '', annotationsDesc = getPointAnnotationDescription(point), pointAnnotationsText = annotationsDesc ? ' ' + annotationsDesc : '';\n            point.accessibility = point.accessibility || {};\n            point.accessibility.valueDescription = valText;\n            return valText + userDescText + seriesNameText + pointAnnotationsText;\n        }\n        /**\n         * Set a11y props on a point element\n         * @private\n         * @param {Highcharts.Point} point\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} pointElement\n         */\n        function setPointScreenReaderAttribs(point, pointElement) {\n            var series = point.series,\n                a11yPointOptions = series.chart.options.accessibility.point || {},\n                seriesPointA11yOptions = series.options.accessibility &&\n                    series.options.accessibility.point || {},\n                label = stripHTMLTags(seriesPointA11yOptions.descriptionFormatter &&\n                    seriesPointA11yOptions.descriptionFormatter(point) ||\n                    a11yPointOptions.descriptionFormatter &&\n                        a11yPointOptions.descriptionFormatter(point) ||\n                    defaultPointDescriptionFormatter(point));\n            pointElement.setAttribute('role', 'img');\n            pointElement.setAttribute('aria-label', label);\n        }\n        /**\n         * Add accessible info to individual point elements of a series\n         * @private\n         * @param {Highcharts.Series} series\n         */\n        function describePointsInSeries(series) {\n            var setScreenReaderProps = shouldSetScreenReaderPropsOnPoints(series),\n                setKeyboardProps = shouldSetKeyboardNavPropsOnPoints(series),\n                shouldDescribeNullPoints = series.chart.options.accessibility\n                    .point.describeNull;\n            if (setScreenReaderProps || setKeyboardProps) {\n                series.points.forEach(function (point) {\n                    var pointEl = point.graphic && point.graphic.element ||\n                            shouldAddMockPoint(point) && addMockPointElement(point),\n                        pointA11yDisabled = (point.options &&\n                            point.options.accessibility &&\n                            point.options.accessibility.enabled === false);\n                    if (pointEl) {\n                        if (point.isNull && !shouldDescribeNullPoints) {\n                            pointEl.setAttribute('aria-hidden', true);\n                            return;\n                        }\n                        // We always set tabindex, as long as we are setting props.\n                        // When setting tabindex, also remove default outline to\n                        // avoid ugly border on click.\n                        pointEl.setAttribute('tabindex', '-1');\n                        if (!series.chart.styledMode) {\n                            pointEl.style.outline = 'none';\n                        }\n                        if (setScreenReaderProps && !pointA11yDisabled) {\n                            setPointScreenReaderAttribs(point, pointEl);\n                        }\n                        else {\n                            pointEl.setAttribute('aria-hidden', true);\n                        }\n                    }\n                });\n            }\n        }\n        /**\n         * Return string with information about series.\n         * @private\n         */\n        function defaultSeriesDescriptionFormatter(series) {\n            var chart = series.chart,\n                chartTypes = chart.types || [],\n                description = getSeriesDescriptionText(series),\n                shouldDescribeAxis = function (coll) {\n                    return chart[coll] && chart[coll].length > 1 && series[coll];\n            }, seriesNumber = series.index + 1, xAxisInfo = getSeriesAxisDescriptionText(series, 'xAxis'), yAxisInfo = getSeriesAxisDescriptionText(series, 'yAxis'), summaryContext = {\n                seriesNumber: seriesNumber,\n                series: series,\n                chart: chart\n            }, combinationSuffix = chartTypes.length > 1 ? 'Combination' : '', summary = chart.langFormat('accessibility.series.summary.' + series.type + combinationSuffix, summaryContext) || chart.langFormat('accessibility.series.summary.default' + combinationSuffix, summaryContext), axisDescription = (shouldDescribeAxis('yAxis') ? ' ' + yAxisInfo + '.' : '') + (shouldDescribeAxis('xAxis') ? ' ' + xAxisInfo + '.' : ''), formatStr = chart.options.accessibility.series.descriptionFormat || '';\n            return format(formatStr, {\n                seriesDescription: summary,\n                authorDescription: (description ? ' ' + description : ''),\n                axisDescription: axisDescription,\n                series: series,\n                chart: chart,\n                seriesNumber: seriesNumber\n            }, void 0);\n        }\n        /**\n         * Set a11y props on a series element\n         * @private\n         * @param {Highcharts.Series} series\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} seriesElement\n         */\n        function describeSeriesElement(series, seriesElement) {\n            var seriesA11yOptions = series.options.accessibility || {},\n                a11yOptions = series.chart.options.accessibility,\n                landmarkVerbosity = a11yOptions.landmarkVerbosity;\n            // Handle role attribute\n            if (seriesA11yOptions.exposeAsGroupOnly) {\n                seriesElement.setAttribute('role', 'img');\n            }\n            else if (landmarkVerbosity === 'all') {\n                seriesElement.setAttribute('role', 'region');\n            }\n            else {\n                seriesElement.setAttribute('role', 'group');\n            }\n            seriesElement.setAttribute('tabindex', '-1');\n            if (!series.chart.styledMode) {\n                // Don't show browser outline on click, despite tabindex\n                seriesElement.style.outline = 'none';\n            }\n            seriesElement.setAttribute('aria-label', stripHTMLTags(a11yOptions.series.descriptionFormatter &&\n                a11yOptions.series.descriptionFormatter(series) ||\n                defaultSeriesDescriptionFormatter(series)));\n        }\n        /**\n         * Put accessible info on series and points of a series.\n         * @param {Highcharts.Series} series The series to add info on.\n         */\n        function describeSeries(series) {\n            var chart = series.chart,\n                firstPointEl = getSeriesFirstPointElement(series),\n                seriesEl = getSeriesA11yElement(series),\n                is3d = chart.is3d && chart.is3d();\n            if (seriesEl) {\n                // For some series types the order of elements do not match the\n                // order of points in series. In that case we have to reverse them\n                // in order for AT to read them out in an understandable order.\n                // Due to z-index issues we cannot do this for 3D charts.\n                if (seriesEl.lastChild === firstPointEl && !is3d) {\n                    reverseChildNodes(seriesEl);\n                }\n                describePointsInSeries(series);\n                unhideChartElementFromAT(chart, seriesEl);\n                if (shouldDescribeSeriesElement(series)) {\n                    describeSeriesElement(series, seriesEl);\n                }\n                else {\n                    seriesEl.removeAttribute('aria-label');\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var SeriesDescriber = {\n                defaultPointDescriptionFormatter: defaultPointDescriptionFormatter,\n                defaultSeriesDescriptionFormatter: defaultSeriesDescriptionFormatter,\n                describeSeries: describeSeries\n            };\n\n        return SeriesDescriber;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/NewDataAnnouncer.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js']], function (H, U, Announcer, ChartUtilities, EventProvider, SeriesDescriber) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Handle announcing new data for a chart.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent,\n            defined = U.defined;\n        var getChartTitle = ChartUtilities.getChartTitle;\n        var defaultPointDescriptionFormatter = SeriesDescriber.defaultPointDescriptionFormatter,\n            defaultSeriesDescriptionFormatter = SeriesDescriber.defaultSeriesDescriptionFormatter;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function chartHasAnnounceEnabled(chart) {\n            return !!chart.options.accessibility.announceNewData.enabled;\n        }\n        /**\n         * @private\n         */\n        function findPointInDataArray(point) {\n            var candidates = point.series.data.filter(function (candidate) { return (point.x === candidate.x && point.y === candidate.y); });\n            return candidates.length === 1 ? candidates[0] : point;\n        }\n        /**\n         * Get array of unique series from two arrays\n         * @private\n         */\n        function getUniqueSeries(arrayA, arrayB) {\n            var uniqueSeries = (arrayA || []).concat(arrayB || []).reduce(function (acc,\n                cur) {\n                    acc[cur.name + cur.index] = cur;\n                return acc;\n            }, {});\n            return Object\n                .keys(uniqueSeries)\n                .map(function (ix) { return uniqueSeries[ix]; });\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NewDataAnnouncer = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function NewDataAnnouncer(chart) {\n                    /* *\n                     *\n                     *  Public\n                     *\n                     * */\n                    this.announcer = void 0;\n                this.dirty = {\n                    allSeries: {}\n                };\n                this.eventProvider = void 0;\n                this.lastAnnouncementTime = 0;\n                this.chart = chart;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Initialize the new data announcer.\n             * @private\n             */\n            NewDataAnnouncer.prototype.init = function () {\n                var chart = this.chart;\n                var announceOptions = (chart.options.accessibility.announceNewData);\n                var announceType = announceOptions.interruptUser ?\n                        'assertive' : 'polite';\n                this.lastAnnouncementTime = 0;\n                this.dirty = {\n                    allSeries: {}\n                };\n                this.eventProvider = new EventProvider();\n                this.announcer = new Announcer(chart, announceType);\n                this.addEventListeners();\n            };\n            /**\n             * Remove traces of announcer.\n             * @private\n             */\n            NewDataAnnouncer.prototype.destroy = function () {\n                this.eventProvider.removeAddedEvents();\n                this.announcer.destroy();\n            };\n            /**\n             * Add event listeners for the announcer\n             * @private\n             */\n            NewDataAnnouncer.prototype.addEventListeners = function () {\n                var announcer = this,\n                    chart = this.chart,\n                    e = this.eventProvider;\n                e.addEvent(chart, 'afterApplyDrilldown', function () {\n                    announcer.lastAnnouncementTime = 0;\n                });\n                e.addEvent(chart, 'afterAddSeries', function (e) {\n                    announcer.onSeriesAdded(e.series);\n                });\n                e.addEvent(chart, 'redraw', function () {\n                    announcer.announceDirtyData();\n                });\n            };\n            /**\n             * On new data series added, update dirty list.\n             * @private\n             * @param {Highcharts.Series} series\n             */\n            NewDataAnnouncer.prototype.onSeriesAdded = function (series) {\n                if (chartHasAnnounceEnabled(this.chart)) {\n                    this.dirty.hasDirty = true;\n                    this.dirty.allSeries[series.name + series.index] = series;\n                    // Add it to newSeries storage unless we already have one\n                    this.dirty.newSeries = defined(this.dirty.newSeries) ?\n                        void 0 : series;\n                }\n            };\n            /**\n             * Gather what we know and announce the data to user.\n             * @private\n             */\n            NewDataAnnouncer.prototype.announceDirtyData = function () {\n                var chart = this.chart,\n                    announcer = this;\n                if (chart.options.accessibility.announceNewData &&\n                    this.dirty.hasDirty) {\n                    var newPoint = this.dirty.newPoint;\n                    // If we have a single new point, see if we can find it in the\n                    // data array. Otherwise we can only pass through options to\n                    // the description builder, and it is a bit sparse in info.\n                    if (newPoint) {\n                        newPoint = findPointInDataArray(newPoint);\n                    }\n                    this.queueAnnouncement(Object\n                        .keys(this.dirty.allSeries)\n                        .map(function (ix) {\n                        return announcer.dirty.allSeries[ix];\n                    }), this.dirty.newSeries, newPoint);\n                    // Reset\n                    this.dirty = {\n                        allSeries: {}\n                    };\n                }\n            };\n            /**\n             * Announce to user that there is new data.\n             * @private\n             * @param {Array<Highcharts.Series>} dirtySeries\n             *          Array of series with new data.\n             * @param {Highcharts.Series} [newSeries]\n             *          If a single new series was added, a reference to this series.\n             * @param {Highcharts.Point} [newPoint]\n             *          If a single point was added, a reference to this point.\n             */\n            NewDataAnnouncer.prototype.queueAnnouncement = function (dirtySeries, newSeries, newPoint) {\n                var _this = this;\n                var chart = this.chart;\n                var annOptions = chart.options.accessibility.announceNewData;\n                if (annOptions.enabled) {\n                    var now = +new Date();\n                    var dTime = now - this.lastAnnouncementTime;\n                    var time = Math.max(0,\n                        annOptions.minAnnounceInterval - dTime);\n                    // Add series from previously queued announcement.\n                    var allSeries = getUniqueSeries(this.queuedAnnouncement && this.queuedAnnouncement.series,\n                        dirtySeries);\n                    // Build message and announce\n                    var message = this.buildAnnouncementMessage(allSeries,\n                        newSeries,\n                        newPoint);\n                    if (message) {\n                        // Is there already one queued?\n                        if (this.queuedAnnouncement) {\n                            clearTimeout(this.queuedAnnouncementTimer);\n                        }\n                        // Build the announcement\n                        this.queuedAnnouncement = {\n                            time: now,\n                            message: message,\n                            series: allSeries\n                        };\n                        // Queue the announcement\n                        this.queuedAnnouncementTimer = setTimeout(function () {\n                            if (_this && _this.announcer) {\n                                _this.lastAnnouncementTime = +new Date();\n                                _this.announcer.announce(_this.queuedAnnouncement.message);\n                                delete _this.queuedAnnouncement;\n                                delete _this.queuedAnnouncementTimer;\n                            }\n                        }, time);\n                    }\n                }\n            };\n            /**\n             * Get announcement message for new data.\n             * @private\n             * @param {Array<Highcharts.Series>} dirtySeries\n             *          Array of series with new data.\n             * @param {Highcharts.Series} [newSeries]\n             *          If a single new series was added, a reference to this series.\n             * @param {Highcharts.Point} [newPoint]\n             *          If a single point was added, a reference to this point.\n             *\n             * @return {string|null}\n             * The announcement message to give to user.\n             */\n            NewDataAnnouncer.prototype.buildAnnouncementMessage = function (dirtySeries, newSeries, newPoint) {\n                var chart = this.chart,\n                    annOptions = chart.options.accessibility.announceNewData;\n                // User supplied formatter?\n                if (annOptions.announcementFormatter) {\n                    var formatterRes = annOptions.announcementFormatter(dirtySeries,\n                        newSeries,\n                        newPoint);\n                    if (formatterRes !== false) {\n                        return formatterRes.length ? formatterRes : null;\n                    }\n                }\n                // Default formatter - use lang options\n                var multiple = H.charts && H.charts.length > 1 ?\n                        'Multiple' : 'Single', langKey = newSeries ? 'newSeriesAnnounce' + multiple :\n                        newPoint ? 'newPointAnnounce' + multiple : 'newDataAnnounce', chartTitle = getChartTitle(chart);\n                return chart.langFormat('accessibility.announceNewData.' + langKey, {\n                    chartTitle: chartTitle,\n                    seriesDesc: newSeries ?\n                        defaultSeriesDescriptionFormatter(newSeries) :\n                        null,\n                    pointDesc: newPoint ?\n                        defaultPointDescriptionFormatter(newPoint) :\n                        null,\n                    point: newPoint,\n                    series: newSeries\n                });\n            };\n            return NewDataAnnouncer;\n        }());\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (NewDataAnnouncer) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            NewDataAnnouncer.composedClasses = [];\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (NewDataAnnouncer.composedClasses.indexOf(SeriesClass) === -1) {\n                    NewDataAnnouncer.composedClasses.push(SeriesClass);\n                    addEvent(SeriesClass, 'addPoint', seriesOnAddPoint);\n                    addEvent(SeriesClass, 'updatedData', seriesOnUpdatedData);\n                }\n            }\n            NewDataAnnouncer.compose = compose;\n            /**\n             * On new point added, update dirty list.\n             * @private\n             * @param {Highcharts.Point} point\n             */\n            function seriesOnAddPoint(e) {\n                var chart = this.chart,\n                    newDataAnnouncer = this.newDataAnnouncer;\n                if (newDataAnnouncer &&\n                    newDataAnnouncer.chart === chart &&\n                    chartHasAnnounceEnabled(chart)) {\n                    // Add it to newPoint storage unless we already have one\n                    newDataAnnouncer.dirty.newPoint = (defined(newDataAnnouncer.dirty.newPoint) ?\n                        void 0 :\n                        e.point);\n                }\n            }\n            /**\n             * On new data in the series, make sure we add it to the dirty list.\n             * @private\n             * @param {Highcharts.Series} series\n             */\n            function seriesOnUpdatedData() {\n                var chart = this.chart,\n                    newDataAnnouncer = this.newDataAnnouncer;\n                if (newDataAnnouncer &&\n                    newDataAnnouncer.chart === chart &&\n                    chartHasAnnounceEnabled(chart)) {\n                    newDataAnnouncer.dirty.hasDirty = true;\n                    newDataAnnouncer.dirty.allSeries[this.name + this.index] = this;\n                }\n            }\n        })(NewDataAnnouncer || (NewDataAnnouncer = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NewDataAnnouncer;\n    });\n    _registerModule(_modules, 'Accessibility/ProxyElement.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, U, EventProvider, ChartUtilities, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Proxy elements are used to shadow SVG elements in HTML for assistive\n         *  technology, such as screen readers or voice input software.\n         *\n         *  The ProxyElement class represents such an element, and deals with\n         *  overlay positioning and mirroring events for the target.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc;\n        var attr = U.attr,\n            css = U.css,\n            merge = U.merge;\n        var fireEventOnWrappedOrUnwrappedElement = ChartUtilities.fireEventOnWrappedOrUnwrappedElement;\n        var cloneMouseEvent = HTMLUtilities.cloneMouseEvent,\n            cloneTouchEvent = HTMLUtilities.cloneTouchEvent,\n            getFakeMouseEvent = HTMLUtilities.getFakeMouseEvent,\n            removeElement = HTMLUtilities.removeElement;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Represents a proxy element that overlays a target and relays events\n         * to its target.\n         *\n         * @private\n         * @class\n         */\n        var ProxyElement = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function ProxyElement(chart, target, groupType, attributes) {\n                    this.chart = chart;\n                this.target = target;\n                this.groupType = groupType;\n                var isListItem = groupType === 'ul';\n                this.eventProvider = new EventProvider();\n                var wrapperEl = isListItem ? doc.createElement('li') : null;\n                var btnEl = this.buttonElement = doc.createElement('button');\n                if (!chart.styledMode) {\n                    this.hideButtonVisually(btnEl);\n                }\n                if (wrapperEl) {\n                    if (isListItem && !chart.styledMode) {\n                        wrapperEl.style.listStyle = 'none';\n                    }\n                    wrapperEl.appendChild(btnEl);\n                    this.element = wrapperEl;\n                }\n                else {\n                    this.element = btnEl;\n                }\n                this.updateTarget(target, attributes);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Fake a click event on the target.\n             */\n            ProxyElement.prototype.click = function () {\n                var pos = this.getTargetPosition();\n                pos.x += pos.width / 2;\n                pos.y += pos.height / 2;\n                var fakeEventObject = getFakeMouseEvent('click',\n                    pos);\n                fireEventOnWrappedOrUnwrappedElement(this.target.click, fakeEventObject);\n            };\n            /**\n             * Update the target to be proxied. The position and events are updated to\n             * match the new target.\n             * @param target The new target definition\n             * @param attributes New HTML attributes to apply to the button. Set an\n             * attribute to null to remove.\n             */\n            ProxyElement.prototype.updateTarget = function (target, attributes) {\n                this.target = target;\n                this.updateCSSClassName();\n                var attrs = attributes || {};\n                Object.keys(attrs).forEach(function (a) {\n                    if (attrs[a] === null) {\n                        delete attrs[a];\n                    }\n                });\n                attr(this.buttonElement, merge({\n                    'aria-label': this.getTargetAttr(target.click, 'aria-label')\n                }, attrs));\n                this.eventProvider.removeAddedEvents();\n                this.addProxyEventsToButton(this.buttonElement, target.click);\n                this.refreshPosition();\n            };\n            /**\n             * Refresh the position of the proxy element to match the current target\n             */\n            ProxyElement.prototype.refreshPosition = function () {\n                var bBox = this.getTargetPosition();\n                css(this.buttonElement, {\n                    width: (bBox.width || 1) + 'px',\n                    height: (bBox.height || 1) + 'px',\n                    left: (Math.round(bBox.x) || 0) + 'px',\n                    top: (Math.round(bBox.y) || 0) + 'px'\n                });\n            };\n            /**\n             * Remove button from DOM, and clear events.\n             */\n            ProxyElement.prototype.remove = function () {\n                this.eventProvider.removeAddedEvents();\n                removeElement(this.element);\n            };\n            // -------------------------- private ------------------------------------\n            /**\n             * Update the CSS class name to match target\n             */\n            ProxyElement.prototype.updateCSSClassName = function () {\n                var stringHasNoTooltip = function (s) { return (s.indexOf('highcharts-no-tooltip') > -1); };\n                var legend = this.chart.legend;\n                var groupDiv = legend.group && legend.group.div;\n                var noTooltipOnGroup = stringHasNoTooltip(groupDiv && groupDiv.className || '');\n                var targetClassName = this.getTargetAttr(this.target.click, 'class') || '';\n                var noTooltipOnTarget = stringHasNoTooltip(targetClassName);\n                this.buttonElement.className = noTooltipOnGroup || noTooltipOnTarget ?\n                    'highcharts-a11y-proxy-button highcharts-no-tooltip' :\n                    'highcharts-a11y-proxy-button';\n            };\n            /**\n             * Mirror events for a proxy button to a target\n             */\n            ProxyElement.prototype.addProxyEventsToButton = function (button, target) {\n                var _this = this;\n                [\n                    'click', 'touchstart', 'touchend', 'touchcancel', 'touchmove',\n                    'mouseover', 'mouseenter', 'mouseleave', 'mouseout'\n                ].forEach(function (evtType) {\n                    var isTouchEvent = evtType.indexOf('touch') === 0;\n                    _this.eventProvider.addEvent(button, evtType, function (e) {\n                        var clonedEvent = isTouchEvent ?\n                                cloneTouchEvent(e) :\n                                cloneMouseEvent(e);\n                        if (target) {\n                            fireEventOnWrappedOrUnwrappedElement(target, clonedEvent);\n                        }\n                        e.stopPropagation();\n                        // #9682, #15318: Touch scrolling didnt work when touching\n                        // proxy\n                        if (!isTouchEvent) {\n                            e.preventDefault();\n                        }\n                    }, { passive: false });\n                });\n            };\n            /**\n             * Set visually hidden style on a proxy button\n             */\n            ProxyElement.prototype.hideButtonVisually = function (button) {\n                css(button, {\n                    borderWidth: 0,\n                    backgroundColor: 'transparent',\n                    cursor: 'pointer',\n                    outline: 'none',\n                    opacity: 0.001,\n                    filter: 'alpha(opacity=1)',\n                    zIndex: 999,\n                    overflow: 'hidden',\n                    padding: 0,\n                    margin: 0,\n                    display: 'block',\n                    position: 'absolute',\n                    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=1)'\n                });\n            };\n            /**\n             * Get the position relative to chart container for the target\n             */\n            ProxyElement.prototype.getTargetPosition = function () {\n                var clickTarget = this.target.click;\n                // We accept both DOM elements and wrapped elements as click targets.\n                var clickTargetElement = clickTarget.element ?\n                        clickTarget.element :\n                        clickTarget;\n                var posElement = this.target.visual || clickTargetElement;\n                var chartDiv = this.chart.renderTo;\n                if (chartDiv && posElement && posElement.getBoundingClientRect) {\n                    var rectEl = posElement.getBoundingClientRect(),\n                        chartPos = this.chart.pointer.getChartPosition();\n                    return {\n                        x: (rectEl.left - chartPos.left) / chartPos.scaleX,\n                        y: (rectEl.top - chartPos.top) / chartPos.scaleY,\n                        width: rectEl.right / chartPos.scaleX -\n                            rectEl.left / chartPos.scaleX,\n                        height: rectEl.bottom / chartPos.scaleY -\n                            rectEl.top / chartPos.scaleY\n                    };\n                }\n                return { x: 0, y: 0, width: 1, height: 1 };\n            };\n            /**\n             * Get an attribute value of a target\n             */\n            ProxyElement.prototype.getTargetAttr = function (target, key) {\n                if (target.element) {\n                    return target.element.getAttribute(key);\n                }\n                return target.getAttribute(key);\n            };\n            return ProxyElement;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ProxyElement;\n    });\n    _registerModule(_modules, 'Accessibility/ProxyProvider.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/ProxyElement.js']], function (H, U, CU, DOMElementProvider, HU, ProxyElement) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Proxy elements are used to shadow SVG elements in HTML for assistive\n         *  technology, such as screen readers or voice input software.\n         *\n         *  The ProxyProvider keeps track of all proxy elements of the a11y module,\n         *  and updating their order and positioning.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc;\n        var attr = U.attr,\n            css = U.css;\n        var unhideChartElementFromAT = CU.unhideChartElementFromAT;\n        var removeElement = HU.removeElement,\n            removeChildNodes = HU.removeChildNodes;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Keeps track of all proxy elements and proxy groups.\n         *\n         * @private\n         * @class\n         */\n        var ProxyProvider = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function ProxyProvider(chart) {\n                    this.chart = chart;\n                this.domElementProvider = new DOMElementProvider();\n                this.groups = {};\n                this.groupOrder = [];\n                this.beforeChartProxyPosContainer = this.createProxyPosContainer('before');\n                this.afterChartProxyPosContainer = this.createProxyPosContainer('after');\n                this.update();\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable */\n            /**\n             * Add a new proxy element to a group, proxying a target control.\n             */\n            ProxyProvider.prototype.addProxyElement = function (groupKey, target, attributes) {\n                var group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.addProxyElement: Invalid group key ' + groupKey);\n                }\n                var proxy = new ProxyElement(this.chart,\n                    target,\n                    group.type,\n                    attributes);\n                group.proxyContainerElement.appendChild(proxy.element);\n                group.proxyElements.push(proxy);\n                return proxy;\n            };\n            /**\n             * Create a group that will contain proxy elements. The group order is\n             * automatically updated according to the last group order keys.\n             *\n             * Returns the added group.\n             */\n            ProxyProvider.prototype.addGroup = function (groupKey, groupType, attributes) {\n                var existingGroup = this.groups[groupKey];\n                if (existingGroup) {\n                    return existingGroup.groupElement;\n                }\n                var proxyContainer = this.domElementProvider.createElement(groupType);\n                // If we want to add a role to the group, and still use e.g.\n                // a list group, we need a wrapper div.\n                var groupElement;\n                if (attributes && attributes.role && groupType !== 'div') {\n                    groupElement = this.domElementProvider.createElement('div');\n                    groupElement.appendChild(proxyContainer);\n                }\n                else {\n                    groupElement = proxyContainer;\n                }\n                groupElement.className = 'highcharts-a11y-proxy-group highcharts-a11y-proxy-group-' +\n                    groupKey.replace(/\\W/g, '-');\n                this.groups[groupKey] = {\n                    proxyContainerElement: proxyContainer,\n                    groupElement: groupElement,\n                    type: groupType,\n                    proxyElements: []\n                };\n                attr(groupElement, attributes || {});\n                if (groupType === 'ul') {\n                    proxyContainer.setAttribute('role', 'list'); // Needed for webkit\n                }\n                // Add the group to the end by default, and perhaps then we\n                // won't have to reorder the whole set of groups.\n                this.afterChartProxyPosContainer.appendChild(groupElement);\n                this.updateGroupOrder(this.groupOrder);\n                return groupElement;\n            };\n            /**\n             * Update HTML attributes of a group.\n             */\n            ProxyProvider.prototype.updateGroupAttrs = function (groupKey, attributes) {\n                var group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.updateGroupAttrs: Invalid group key ' + groupKey);\n                }\n                attr(group.groupElement, attributes);\n            };\n            /**\n             * Reorder the proxy groups.\n             *\n             * The group key \"series\" refers to the chart's data points / <svg> element.\n             * This is so that the keyboardNavigation.order option can be used to\n             * determine the proxy group order.\n             */\n            ProxyProvider.prototype.updateGroupOrder = function (groupKeys) {\n                var _this = this;\n                // Store so that we can update order when a new group is created\n                this.groupOrder = groupKeys.slice();\n                // Don't unnecessarily reorder, because keyboard focus is lost\n                if (this.isDOMOrderGroupOrder()) {\n                    return;\n                }\n                var seriesIx = groupKeys.indexOf('series');\n                var beforeKeys = seriesIx > -1 ? groupKeys.slice(0,\n                    seriesIx) : groupKeys;\n                var afterKeys = seriesIx > -1 ? groupKeys.slice(seriesIx + 1) : [];\n                // Store focused element since it will be lost when reordering\n                var activeElement = doc.activeElement;\n                // Add groups to correct container\n                ['before', 'after'].forEach(function (pos) {\n                    var posContainer = _this[pos === 'before' ?\n                            'beforeChartProxyPosContainer' :\n                            'afterChartProxyPosContainer'];\n                    var keys = pos === 'before' ? beforeKeys : afterKeys;\n                    removeChildNodes(posContainer);\n                    keys.forEach(function (groupKey) {\n                        var group = _this.groups[groupKey];\n                        if (group) {\n                            posContainer.appendChild(group.groupElement);\n                        }\n                    });\n                });\n                // Attempt to restore focus after reordering, but note that this may\n                // cause screen readers re-announcing the button.\n                if ((this.beforeChartProxyPosContainer.contains(activeElement) ||\n                    this.afterChartProxyPosContainer.contains(activeElement)) &&\n                    activeElement && activeElement.focus) {\n                    activeElement.focus();\n                }\n            };\n            /**\n             * Remove all proxy elements in a group\n             */\n            ProxyProvider.prototype.clearGroup = function (groupKey) {\n                var group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.clearGroup: Invalid group key ' + groupKey);\n                }\n                removeChildNodes(group.proxyContainerElement);\n            };\n            /**\n             * Remove a group from the DOM and from the proxy provider's group list.\n             * All child elements are removed.\n             * If the group does not exist, nothing happens.\n             */\n            ProxyProvider.prototype.removeGroup = function (groupKey) {\n                var group = this.groups[groupKey];\n                if (group) {\n                    removeElement(group.groupElement);\n                    delete this.groups[groupKey];\n                }\n            };\n            /**\n             * Update the position and order of all proxy groups and elements\n             */\n            ProxyProvider.prototype.update = function () {\n                this.updatePosContainerPositions();\n                this.updateGroupOrder(this.groupOrder);\n                this.updateProxyElementPositions();\n            };\n            /**\n             * Update all proxy element positions\n             */\n            ProxyProvider.prototype.updateProxyElementPositions = function () {\n                Object.keys(this.groups).forEach(this.updateGroupProxyElementPositions.bind(this));\n            };\n            /**\n             * Update a group's proxy elements' positions.\n             * If the group does not exist, nothing happens.\n             */\n            ProxyProvider.prototype.updateGroupProxyElementPositions = function (groupKey) {\n                var group = this.groups[groupKey];\n                if (group) {\n                    group.proxyElements.forEach(function (el) { return el.refreshPosition(); });\n                }\n            };\n            /**\n             * Remove all added elements\n             */\n            ProxyProvider.prototype.destroy = function () {\n                this.domElementProvider.destroyCreatedElements();\n            };\n            // -------------------------- private ------------------------------------\n            /**\n             * Create and return a pos container element (the overall containers for\n             * the proxy groups).\n             */\n            ProxyProvider.prototype.createProxyPosContainer = function (classNamePostfix) {\n                var el = this.domElementProvider.createElement('div');\n                el.setAttribute('aria-hidden', 'false');\n                el.className = 'highcharts-a11y-proxy-container' + (classNamePostfix ? '-' + classNamePostfix : '');\n                css(el, {\n                    top: '0',\n                    left: '0'\n                });\n                if (!this.chart.styledMode) {\n                    el.style.whiteSpace = 'nowrap';\n                    el.style.position = 'absolute';\n                }\n                return el;\n            };\n            /**\n             * Get an array of group keys that corresponds to the current group order\n             * in the DOM.\n             */\n            ProxyProvider.prototype.getCurrentGroupOrderInDOM = function () {\n                var _this = this;\n                var getGroupKeyFromElement = function (el) {\n                        var allGroups = Object.keys(_this.groups);\n                    var i = allGroups.length;\n                    while (i--) {\n                        var groupKey = allGroups[i];\n                        var group = _this.groups[groupKey];\n                        if (group && el === group.groupElement) {\n                            return groupKey;\n                        }\n                    }\n                };\n                var getChildrenGroupOrder = function (el) {\n                        var childrenOrder = [];\n                    var children = el.children;\n                    for (var i = 0; i < children.length; ++i) {\n                        var groupKey = getGroupKeyFromElement(children[i]);\n                        if (groupKey) {\n                            childrenOrder.push(groupKey);\n                        }\n                    }\n                    return childrenOrder;\n                };\n                var before = getChildrenGroupOrder(this.beforeChartProxyPosContainer);\n                var after = getChildrenGroupOrder(this.afterChartProxyPosContainer);\n                before.push('series');\n                return before.concat(after);\n            };\n            /**\n             * Check if the current DOM order matches the current group order, so that\n             * a reordering/update is unnecessary.\n             */\n            ProxyProvider.prototype.isDOMOrderGroupOrder = function () {\n                var _this = this;\n                var domOrder = this.getCurrentGroupOrderInDOM();\n                var groupOrderWithGroups = this.groupOrder.filter(function (x) { return x === 'series' || !!_this.groups[x]; });\n                var i = domOrder.length;\n                if (i !== groupOrderWithGroups.length) {\n                    return false;\n                }\n                while (i--) {\n                    if (domOrder[i] !== groupOrderWithGroups[i]) {\n                        return false;\n                    }\n                }\n                return true;\n            };\n            /**\n             * Update the DOM positions of the before/after proxy\n             * positioning containers for the groups.\n             */\n            ProxyProvider.prototype.updatePosContainerPositions = function () {\n                var chart = this.chart;\n                // If exporting, don't add these containers to the DOM.\n                if (chart.renderer.forExport) {\n                    return;\n                }\n                var rendererSVGEl = chart.renderer.box;\n                chart.container.insertBefore(this.afterChartProxyPosContainer, rendererSVGEl.nextSibling);\n                chart.container.insertBefore(this.beforeChartProxyPosContainer, rendererSVGEl);\n                unhideChartElementFromAT(this.chart, this.afterChartProxyPosContainer);\n                unhideChartElementFromAT(this.chart, this.beforeChartProxyPosContainer);\n            };\n            return ProxyProvider;\n        }());\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return ProxyProvider;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'F\u00E9vrier', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'Ao\u00FBt',\n         *             'Septembre', 'Octobre', 'Novembre', 'D\u00E9cembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        var lang = {\n                /**\n                 * The text for the label for the range selector buttons.\n                 *\n                 * @product highstock gantt\n                 */\n                rangeSelectorZoom: 'Zoom',\n                /**\n                 * The text for the label for the \"from\" input box in the range\n                 * selector. Since v9.0,\n            this string is empty as the label is not\n                 * rendered by default.\n                 *\n                 * @product highstock gantt\n                 */\n                rangeSelectorFrom: '',\n                /**\n                 * The text for the label for the \"to\" input box in the range selector.\n                 *\n                 * @product highstock gantt\n                 */\n                rangeSelectorTo: '\u2192'\n            };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        var rangeSelector = {\n                /**\n                 * Whether to enable all buttons from the start. By default buttons are\n                 * only enabled if the corresponding time range exists on the X axis,\n                 * but enabling all buttons allows for dynamically loading different\n                 * time ranges.\n                 *\n                 * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n                 *         All buttons enabled\n                 *\n                 * @since     2.0.3\n                 */\n                allButtonsEnabled: false,\n                /**\n                 * An array of configuration objects for the buttons.\n                 *\n                 * Defaults to:\n                 * ```js\n                 * buttons: [{\n                 *     type: 'month',\n                 *     count: 1,\n                 *     text: '1m',\n                 *     title: 'View 1 month'\n                 * }, {\n                 *     type: 'month',\n                 *     count: 3,\n                 *     text: '3m',\n                 *     title: 'View 3 months'\n                 * }, {\n                 *     type: 'month',\n                 *     count: 6,\n                 *     text: '6m',\n                 *     title: 'View 6 months'\n                 * }, {\n                 *     type: 'ytd',\n                 *     text: 'YTD',\n                 *     title: 'View year to date'\n                 * }, {\n                 *     type: 'year',\n                 *     count: 1,\n                 *     text: '1y',\n                 *     title: 'View 1 year'\n                 * }, {\n                 *     type: 'all',\n                 *     text: 'All',\n                 *     title: 'View all'\n                 * }]\n                 * ```\n                 *\n                 * @sample {highstock} stock/rangeselector/datagrouping/\n                 *         Data grouping by buttons\n                 *\n                 * @type      {Array<*>}\n                 */\n                buttons: void 0,\n                /**\n                 * How many units of the defined type the button should span. If `type`\n                 * is \"month\" and `count` is 3,\n            the button spans three months.\n                 *\n                 * @type      {number}\n                 * @default   1\n                 * @apioption rangeSelector.buttons.count\n                 */\n                /**\n                 * Fires when clicking on the rangeSelector button. One parameter,\n                 * event,\n            is passed to the function,\n            containing common event\n                 * information.\n                 *\n                 * ```js\n                 * click: function(e) {\n                 *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/rangeselector/datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0,\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%b %e, %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%b %e, %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#335cad\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorDefaults = {\n                lang: lang,\n                rangeSelector: rangeSelector\n            };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions,\n            setOptions = D.setOptions;\n        var addEvent = U.addEvent,\n            defined = U.defined,\n            extend = U.extend,\n            find = U.find,\n            isNumber = U.isNumber,\n            merge = U.merge,\n            pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var chartDestroyEvents = [];\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            var rangeOptions = this.range,\n                type = rangeOptions.type,\n                max = this.max,\n                time = this.chart.time, \n                // Get the true range from a start date\n                getTrueRange = function (base,\n                count) {\n                    var timeName = type === 'year' ?\n                        'FullYear' : 'Month';\n                var date = new time.Date(base);\n                var basePeriod = time.get(timeName,\n                    date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            var min,\n                range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.fixedRange = max - min;\n                }\n            }\n            var dataMin = pick(this.dataMin,\n                Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (composedMembers.indexOf(AxisClass) === -1) {\n                composedMembers.push(AxisClass);\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n            }\n            if (composedMembers.indexOf(ChartClass) === -1) {\n                composedMembers.push(ChartClass);\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'render', onChartRender);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                var chartProto = ChartClass.prototype;\n                chartProto.callbacks.push(onChartCallback);\n            }\n            if (composedMembers.indexOf(setOptions) === -1) {\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            var chart = this,\n                axes = chart.axes,\n                rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                axes.forEach(function (axis) {\n                    axis.updateNames();\n                    axis.setScale();\n                });\n                chart.getAxisMargins();\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var extremes,\n                legend,\n                alignTo,\n                verticalAlign;\n            var rangeSelector = chart.rangeSelector,\n                redraw = function () {\n                    if (rangeSelector) {\n                        extremes = chart.xAxis[0].getExtremes();\n                    legend = chart.legend;\n                    verticalAlign = (rangeSelector &&\n                        rangeSelector.options.verticalAlign);\n                    if (isNumber(extremes.min)) {\n                        rangeSelector.render(extremes.min, extremes.max);\n                    }\n                    // Re-align the legend so that it's below the rangeselector\n                    if (legend.display &&\n                        verticalAlign === 'top' &&\n                        verticalAlign === legend.options.verticalAlign) {\n                        // Create a new alignment box for the legend.\n                        alignTo = merge(chart.spacingBox);\n                        if (legend.options.layout === 'vertical') {\n                            alignTo.y = chart.plotTop;\n                        }\n                        else {\n                            alignTo.y += rangeSelector.getHeight();\n                        }\n                        legend.group.placed = false; // Don't animate the alignment.\n                        legend.align(alignTo);\n                    }\n                }\n            };\n            if (rangeSelector) {\n                var events = find(chartDestroyEvents,\n                    function (e) { return e[0] === chart; });\n                if (!events) {\n                    chartDestroyEvents.push([chart, [\n                            // redraw the scroller on setExtremes\n                            addEvent(chart.xAxis[0], 'afterSetExtremes', function (e) {\n                                if (rangeSelector) {\n                                    rangeSelector.render(e.min, e.max);\n                                }\n                            }),\n                            // redraw the scroller chart resize\n                            addEvent(chart, 'redraw', redraw)\n                        ]]);\n                }\n                // do it now\n                redraw();\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (var i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                var events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach(function (unbind) { return unbind(); });\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        function onChartGetMargins() {\n            var rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                var rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            var chart = this,\n                rangeSelector = chart.rangeSelector;\n            if (rangeSelector && !rangeSelector.options.floating) {\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (verticalAlign === 'bottom') {\n                    this.extraBottomMargin = true;\n                }\n                else if (verticalAlign !== 'middle') {\n                    this.extraTopMargin = true;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            var chart = this,\n                options = e.options,\n                optionsRangeSelector = options.rangeSelector,\n                extraBottomMarginWas = this.extraBottomMargin,\n                extraTopMarginWas = this.extraTopMargin;\n            var rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                onChartCallback(this);\n                var verticalAlign = (optionsRangeSelector &&\n                        optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorComposition = {\n                compose: compose\n            };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent,\n            createElement = U.createElement,\n            css = U.css,\n            defined = U.defined,\n            destroyObjectProperties = U.destroyObjectProperties,\n            discardElement = U.discardElement,\n            extend = U.extend,\n            fireEvent = U.fireEvent,\n            isNumber = U.isNumber,\n            merge = U.merge,\n            objectEach = U.objectEach,\n            pad = U.pad,\n            pick = U.pick,\n            pInt = U.pInt,\n            splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            var ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            var date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                    .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            var time = ['H', 'k', 'I', 'l', 'M', 'S']\n                    .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        var RangeSelector = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function RangeSelector(chart) {\n                    /* *\n                     *\n                     *  Properties\n                     *\n                     * */\n                    this.buttons = void 0;\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.options = void 0;\n                this.chart = chart;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            RangeSelector.compose = function (AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            RangeSelector.prototype.clickButton = function (i, redraw) {\n                var rangeSelector = this,\n                    chart = rangeSelector.chart,\n                    rangeOptions = rangeSelector.buttonOptions[i],\n                    baseAxis = chart.xAxis[0],\n                    unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {},\n                    type = rangeOptions.type,\n                    dataGrouping = rangeOptions.dataGrouping;\n                var dataMin = unionExtremes.dataMin,\n                    dataMax = unionExtremes.dataMax,\n                    newMin,\n                    newMax = baseAxis && Math.round(Math.min(baseAxis.max,\n                    pick(dataMax,\n                    baseAxis.max))), // #1568\n                    baseXAxisOptions,\n                    range = rangeOptions._range,\n                    rangeMin,\n                    minSetting,\n                    rangeSetting,\n                    ctx,\n                    ytdExtremes,\n                    addOffsetMin = true;\n                // chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                // Set the fixed range before range is altered\n                chart.fixedRange = range;\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach(function (series) {\n                                // reassign it to the last item\n                                var xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instanciated. Temporarily set min and range\n                    // options and remove them on chart load (#4317).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    rangeSetting = baseXAxisOptions.range;\n                    baseXAxisOptions.range = range;\n                    minSetting = baseXAxisOptions.min;\n                    baseXAxisOptions.min = rangeMin;\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        baseXAxisOptions.range = rangeSetting;\n                        baseXAxisOptions.min = minSetting;\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                }\n                fireEvent(this, 'afterBtnClick');\n            };\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            RangeSelector.prototype.setSelected = function (selected) {\n                this.selected = this.options.selected = selected;\n            };\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            RangeSelector.prototype.init = function (chart) {\n                var rangeSelector = this,\n                    options = chart.options.rangeSelector,\n                    buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()),\n                    selectedOption = options.selected,\n                    blurInputs = function () {\n                        var minInput = rangeSelector.minInput,\n                    maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && (minInput.blur)) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && (maxInput.blur)) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (this.max - this.min !==\n                                chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n            };\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            RangeSelector.prototype.updateButtonStates = function () {\n                var rangeSelector = this,\n                    chart = this.chart,\n                    dropdown = this.dropdown,\n                    baseAxis = chart.xAxis[0],\n                    actualRange = Math.round(baseAxis.max - baseAxis.min),\n                    hasNoData = !baseAxis.hasVisibleSeries,\n                    day = 24 * 36e5, // A single day in milliseconds\n                    unionExtremes = (chart.scroller &&\n                        chart.scroller.getUnionExtremes()) || baseAxis,\n                    dataMin = unionExtremes.dataMin,\n                    dataMax = unionExtremes.dataMax,\n                    ytdExtremes = rangeSelector.getYTDExtremes(dataMax,\n                    dataMin,\n                    chart.time.useUTC),\n                    ytdMin = ytdExtremes.min,\n                    ytdMax = ytdExtremes.max,\n                    selected = rangeSelector.selected,\n                    allButtonsEnabled = rangeSelector.options.allButtonsEnabled,\n                    buttons = rangeSelector.buttons;\n                var selectedExists = isNumber(selected);\n                rangeSelector.buttonOptions.forEach(function (rangeOptions, i) {\n                    var range = rangeOptions._range,\n                        type = rangeOptions.type,\n                        count = rangeOptions.count || 1,\n                        button = buttons[i],\n                        offsetRange = rangeOptions._offsetMax -\n                            rangeOptions._offsetMin,\n                        isSelected = i === selected, \n                        // Disable buttons where the range exceeds what is allowed in\n                        // the current view\n                        isTooGreatRange = range >\n                            dataMax - dataMin, \n                        // Disable buttons where the range is smaller than the minimum\n                        // range\n                        isTooSmallRange = range < baseAxis.minRange;\n                    var state = 0, \n                        // Do not select the YTD button if not explicitly told so\n                        isYTDButNotSelected = false, \n                        // Disable the All button if we're already showing all\n                        isAllButAlreadyShowingAll = false,\n                        isSameRange = range === actualRange;\n                    // Months and years have a variable range so we check the extremes\n                    if ((type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                        isAllButAlreadyShowingAll = (!isSelected &&\n                            selectedExists &&\n                            isSameRange);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    var disable = (!allButtonsEnabled &&\n                            (isTooGreatRange ||\n                                isTooSmallRange ||\n                                isAllButAlreadyShowingAll ||\n                                hasNoData));\n                    var select = ((isSelected && isSameRange) ||\n                            (isSameRange && !selectedExists && !isYTDButNotSelected) ||\n                            (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        state = 3;\n                    }\n                    else if (select) {\n                        selectedExists = true; // Only one button can be selected\n                        state = 2;\n                    }\n                    // If state has changed, update the button\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = disable;\n                            if (state === 2) {\n                                dropdown.selectedIndex = i + 1;\n                            }\n                        }\n                        // Reset (#9209)\n                        if (state === 0 && selected === i) {\n                            rangeSelector.setSelected();\n                        }\n                    }\n                });\n            };\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            RangeSelector.prototype.computeButtonRange = function (rangeOptions) {\n                var type = rangeOptions.type,\n                    count = rangeOptions.count || 1, \n                    // these time intervals have a fixed number of milliseconds, as\n                    // opposed to month, ytd and year\n                    fixedTimes = {\n                        millisecond: 1,\n                        second: 1000,\n                        minute: 60 * 1000,\n                        hour: 3600 * 1000,\n                        day: 24 * 3600 * 1000,\n                        week: 7 * 24 * 3600 * 1000\n                    };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            };\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            RangeSelector.prototype.getInputValue = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                var options = this.chart.options\n                        .rangeSelector;\n                var time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            };\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            RangeSelector.prototype.setInputValue = function (name, inputTime) {\n                var options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    var hcTimeAttr = input.getAttribute('data-hc-time');\n                    var updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        var previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            };\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            RangeSelector.prototype.setInputExtremes = function (name, min, max) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    var format = this.inputTypeFormats[input.type];\n                    var time = this.chart.time;\n                    if (format) {\n                        var newMin = time.dateFormat(format,\n                            min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        var newMax = time.dateFormat(format,\n                            max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.showInput = function (name) {\n                var dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    var isTextInput = input.type === 'text';\n                    var _a = this.inputGroup,\n                        translateX = _a.translateX,\n                        translateY = _a.translateY;\n                    var inputBoxWidth = this.options.inputBoxWidth;\n                    css(input, {\n                        width: isTextInput ?\n                            ((dateBox.width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: isTextInput ? ((dateBox.height - 2) + 'px') : 'auto',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + dateBox.x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(dateBox.x +\n                                translateX -\n                                (input.offsetWidth - dateBox.width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - dateBox.height) / 2) + 'px'\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.hideInput = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            RangeSelector.prototype.defaultInputDateParser = function (inputDate, useUTC, time) {\n                var hasTimezone = function (str) {\n                        return str.length > 6 &&\n                            (str.lastIndexOf('-') === str.length - 6 ||\n                                str.lastIndexOf('+') === str.length - 6);\n                };\n                var input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    var offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? \"+\".concat(pad(-offset), \":00\") : \"-\".concat(pad(offset), \":00\");\n                }\n                var date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, like YYYY-MM-DD in IE8, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    var parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            };\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            RangeSelector.prototype.drawInput = function (name) {\n                var _a = this,\n                    chart = _a.chart,\n                    div = _a.div,\n                    inputGroup = _a.inputGroup;\n                var rangeSelector = this,\n                    chartStyle = chart.renderer.style || {},\n                    renderer = chart.renderer,\n                    options = chart.options.rangeSelector,\n                    lang = defaultOptions.lang,\n                    isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes() {\n                    var maxInput = rangeSelector.maxInput,\n                        minInput = rangeSelector.minInput,\n                        chartAxis = chart.xAxis[0],\n                        dataAxis = chart.scroller && chart.scroller.xAxis ?\n                            chart.scroller.xAxis :\n                            chartAxis,\n                        dataMin = dataAxis.dataMin,\n                        dataMax = dataAxis.dataMax;\n                    var value = rangeSelector.getInputValue(name);\n                    if (value !== Number(input.getAttribute('data-hc-time-previous')) &&\n                        isNumber(value)) {\n                        input.setAttribute('data-hc-time-previous', value);\n                        // Validate the extremes. If it goes beyound the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                var text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                var label = renderer\n                        .label(text, 0)\n                        .addClass('highcharts-range-label')\n                        .attr({\n                        padding: text ? 2 : 0,\n                        height: text ? options.inputBoxHeight : 0\n                    })\n                        .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and and records\n                // click events that bring in the HTML input.\n                var dateBox = renderer\n                        .label('', 0)\n                        .addClass('highcharts-range-input')\n                        .attr({\n                        padding: 2,\n                        width: options.inputBoxWidth,\n                        height: options.inputBoxHeight,\n                        'text-align': 'center'\n                    })\n                        .on('click',\n                    function () {\n                        // If it is already focused, the onfocus event doesn't fire\n                        // (#3713)\n                        rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                var input = createElement('input', {\n                        name: name,\n                        className: 'highcharts-range-selector'\n                    },\n                    void 0,\n                    div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%b %e, %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = function () {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = function () {\n                    // update extermes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes();\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                var keyDown = false;\n                // handle changes in the input boxes\n                input.onchange = function () {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes();\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = function (event) {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeydown = function (event) {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.keyCode === 38 || event.keyCode === 40) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeyup = function () {\n                    keyDown = false;\n                };\n                return { dateBox: dateBox, input: input, label: label };\n            };\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            RangeSelector.prototype.getPosition = function () {\n                var chart = this.chart,\n                    options = chart.options.rangeSelector,\n                    top = options.verticalAlign === 'top' ?\n                        chart.plotTop - chart.axisOffset[0] :\n                        0; // set offset only for varticalAlign top\n                    return {\n                        buttonTop: top + options.buttonPosition.y,\n                        inputTop: top + options.inputPosition.y - 10\n                    };\n            };\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            RangeSelector.prototype.getYTDExtremes = function (dataMax, dataMin, useUTC) {\n                var time = this.chart.time,\n                    now = new time.Date(dataMax),\n                    year = time.get('FullYear',\n                    now),\n                    startOfYear = useUTC ?\n                        time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                        +new time.Date(year, 0, 1),\n                    min = Math.max(dataMin,\n                    startOfYear),\n                    ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min: min\n                };\n            };\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            RangeSelector.prototype.render = function (min, max) {\n                var chart = this.chart,\n                    renderer = chart.renderer,\n                    container = chart.container,\n                    chartOptions = chart.options,\n                    options = chartOptions.rangeSelector, \n                    // Place inputs above the container\n                    inputsZIndex = pick(chartOptions.chart.style &&\n                        chartOptions.chart.style.zIndex, 0) + 1,\n                    inputEnabled = options.inputEnabled,\n                    rendered = this.rendered;\n                if (options.enabled === false) {\n                    return;\n                }\n                // create the elements\n                if (!rendered) {\n                    this.group = renderer.g('range-selector-group')\n                        .attr({\n                        zIndex: 7\n                    })\n                        .add();\n                    this.div = createElement('div', void 0, {\n                        position: 'relative',\n                        height: 0,\n                        zIndex: inputsZIndex\n                    });\n                    if (this.buttonOptions.length) {\n                        this.renderButtons();\n                    }\n                    // First create a wrapper outside the container in order to make\n                    // the inputs work and make export correct\n                    if (container.parentNode) {\n                        container.parentNode.insertBefore(this.div, container);\n                    }\n                    if (inputEnabled) {\n                        // Create the group to keep the inputs\n                        this.inputGroup = renderer.g('input-group').add(this.group);\n                        var minElems = this.drawInput('min');\n                        this.minDateBox = minElems.dateBox;\n                        this.minLabel = minElems.label;\n                        this.minInput = minElems.input;\n                        var maxElems = this.drawInput('max');\n                        this.maxDateBox = maxElems.dateBox;\n                        this.maxLabel = maxElems.label;\n                        this.maxInput = maxElems.input;\n                    }\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    var unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        var minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        var x_1 = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach(function (label) {\n                            if (label) {\n                                var width = label.getBBox().width;\n                                if (width) {\n                                    label.attr({ x: x_1 });\n                                    x_1 += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.rendered = true;\n            };\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            RangeSelector.prototype.renderButtons = function () {\n                var _this = this;\n                var _a = this,\n                    buttons = _a.buttons,\n                    chart = _a.chart,\n                    options = _a.options;\n                var lang = defaultOptions.lang;\n                var renderer = chart.renderer;\n                var buttonTheme = merge(options.buttonTheme);\n                var states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                var width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                var dropdown = this.dropdown = createElement('select',\n                    void 0, {\n                        position: 'absolute',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        border: 0,\n                        top: '-9999em',\n                        cursor: 'pointer',\n                        opacity: 0.0001\n                    },\n                    this.div);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', function () {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                [\n                    [H.isMS ? 'mouseover' : 'mouseenter'],\n                    [H.isMS ? 'mouseout' : 'mouseleave'],\n                    ['change', 'click']\n                ].forEach(function (_a) {\n                    var from = _a[0],\n                        to = _a[1];\n                    addEvent(dropdown, from, function () {\n                        var button = buttons[_this.currentButtonIndex()];\n                        if (button) {\n                            fireEvent(button.element, to || from);\n                        }\n                    });\n                });\n                this.zoomText = renderer\n                    .label((lang && lang.rangeSelectorZoom) || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach(function (rangeOptions, i) {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, function (e) {\n                        // extract events from button object and call\n                        var buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        var callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            _this.clickButton(i);\n                        }\n                        _this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width: width\n                    })\n                        .add(_this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            };\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            RangeSelector.prototype.alignElements = function () {\n                var _this = this;\n                var _a = this,\n                    buttonGroup = _a.buttonGroup,\n                    buttons = _a.buttons,\n                    chart = _a.chart,\n                    group = _a.group,\n                    inputGroup = _a.inputGroup,\n                    options = _a.options,\n                    zoomText = _a.zoomText;\n                var chartOptions = chart.options;\n                var navButtonOptions = (chartOptions.exporting &&\n                        chartOptions.exporting.enabled !== false &&\n                        chartOptions.navigation &&\n                        chartOptions.navigation.buttonOptions);\n                var buttonPosition = options.buttonPosition,\n                    inputPosition = options.inputPosition,\n                    verticalAlign = options.verticalAlign;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is is used both by the buttonGroup and the inputGroup.\n                var getXOffsetForExportButton = function (group,\n                    position) {\n                        if (navButtonOptions &&\n                            _this.titleCollision(chart) &&\n                            verticalAlign === 'top' &&\n                            position.align === 'right' && ((position.y -\n                            group.getBBox().height - 12) <\n                            ((navButtonOptions.y || 0) +\n                                (navButtonOptions.height || 0) +\n                                chart.spacing[0]))) {\n                            return -40;\n                    }\n                    return 0;\n                };\n                var plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    var translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            var width_1 = 0;\n                            if (zoomText) {\n                                width_1 += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach(function (button, i) {\n                                width_1 += button.width;\n                                if (i !== buttons.length - 1) {\n                                    width_1 += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width_1;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        this.updateButtonStates();\n                        // Detect collision between button group and exporting\n                        var xOffsetForExportButton_1 = getXOffsetForExportButton(buttonGroup,\n                            buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton_1);\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    var xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign: verticalAlign\n                    }, true, chart.spacingBox);\n                    var alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    var groupHeight = group.getBBox().height + 20; // # 20 padding\n                        var translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        var legendOptions = chart.legend && chart.legend.options;\n                        var legendHeight = (legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.enabled &&\n                                !legendOptions.floating ?\n                                (chart.legend.legendHeight +\n                                    pick(legendOptions.margin, 10)) :\n                                0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    var _b = this,\n                        minInput = _b.minInput,\n                        maxInput = _b.maxInput,\n                        dropdown = _b.dropdown;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            };\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            RangeSelector.prototype.alignButtonGroup = function (xOffsetForExportButton, width) {\n                var _a = this,\n                    chart = _a.chart,\n                    options = _a.options,\n                    buttonGroup = _a.buttonGroup,\n                    buttons = _a.buttons;\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft - chart.spacing[3];\n                var translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            RangeSelector.prototype.positionButtons = function () {\n                var _a = this,\n                    buttons = _a.buttons,\n                    chart = _a.chart,\n                    options = _a.options,\n                    zoomText = _a.zoomText;\n                var verb = chart.hasLoaded ? 'animate' : 'attr';\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft;\n                var buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (var i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // increase button position for the next button\n                        buttonLeft += buttons[i].width + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            };\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            RangeSelector.prototype.handleCollision = function (xOffsetForExportButton) {\n                var _this = this;\n                var _a = this,\n                    chart = _a.chart,\n                    buttonGroup = _a.buttonGroup,\n                    inputGroup = _a.inputGroup;\n                var _b = this.options,\n                    buttonPosition = _b.buttonPosition,\n                    dropdown = _b.dropdown,\n                    inputPosition = _b.inputPosition;\n                var maxButtonWidth = function () {\n                        var buttonWidth = 0;\n                    _this.buttons.forEach(function (button) {\n                        var bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                var groupsOverlap = function (buttonGroupWidth) {\n                        if (inputGroup && buttonGroup) {\n                            var inputGroupX = (inputGroup.alignAttr.translateX +\n                                inputGroup.alignOptions.x -\n                                xOffsetForExportButton +\n                                // getBBox for detecing left margin\n                                inputGroup.getBBox().x +\n                                // 2px padding to not overlap input and label\n                                2);\n                        var inputGroupWidth = inputGroup.alignOptions.width;\n                        var buttonGroupX = buttonGroup.alignAttr.translateX +\n                                buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                var moveInputsDown = function () {\n                        if (inputGroup && buttonGroup) {\n                            inputGroup.attr({\n                                translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                    0 :\n                                    -xOffsetForExportButton),\n                                translateY: inputGroup.alignAttr.translateY +\n                                    buttonGroup.getBBox().height + 10\n                            });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons(xOffsetForExportButton);\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons(xOffsetForExportButton);\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons(xOffsetForExportButton);\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            };\n            /**\n             * Collapse the buttons and put the select element on top.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            RangeSelector.prototype.collapseButtons = function (xOffsetForExportButton) {\n                var _a = this,\n                    buttons = _a.buttons,\n                    buttonOptions = _a.buttonOptions,\n                    chart = _a.chart,\n                    dropdown = _a.dropdown,\n                    options = _a.options,\n                    zoomText = _a.zoomText;\n                var userButtonTheme = (chart.userOptions.rangeSelector &&\n                        chart.userOptions.rangeSelector.buttonTheme) || {};\n                var getAttribs = function (text) { return ({\n                        text: text ? \"\" + text + \" \\u25BE\" : '\u25BE',\n                        width: 'auto',\n                        paddingLeft: pick(options.buttonTheme.paddingLeft,\n                    userButtonTheme.padding, 8),\n                        paddingRight: pick(options.buttonTheme.paddingRight,\n                    userButtonTheme.padding, 8)\n                    }); };\n                if (zoomText) {\n                    zoomText.hide();\n                }\n                var hasActiveButton = false;\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    if (button.state !== 2) {\n                        button.hide();\n                    }\n                    else {\n                        button.show();\n                        button.attr(getAttribs(rangeOptions.text));\n                        hasActiveButton = true;\n                    }\n                });\n                if (!hasActiveButton) {\n                    if (dropdown) {\n                        dropdown.selectedIndex = 0;\n                    }\n                    buttons[0].show();\n                    buttons[0].attr(getAttribs(this.zoomText && this.zoomText.textStr));\n                }\n                var align = options.buttonPosition.align;\n                this.positionButtons();\n                if (align === 'right' || align === 'center') {\n                    this.alignButtonGroup(xOffsetForExportButton, buttons[this.currentButtonIndex()].getBBox().width);\n                }\n                this.showDropdown();\n            };\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            RangeSelector.prototype.expandButtons = function () {\n                var _a = this,\n                    buttons = _a.buttons,\n                    buttonOptions = _a.buttonOptions,\n                    options = _a.options,\n                    zoomText = _a.zoomText;\n                this.hideDropdown();\n                if (zoomText) {\n                    zoomText.show();\n                }\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    button.show();\n                    button.attr({\n                        text: rangeOptions.text,\n                        width: options.buttonTheme.width || 28,\n                        paddingLeft: pick(options.buttonTheme.paddingLeft, 'unset'),\n                        paddingRight: pick(options.buttonTheme.paddingRight, 'unset')\n                    });\n                    if (button.state < 2) {\n                        button.setState(0);\n                    }\n                });\n                this.positionButtons();\n            };\n            /**\n             * Get the index of the visible button when the buttons are collapsed.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#currentButtonIndex\n             */\n            RangeSelector.prototype.currentButtonIndex = function () {\n                var dropdown = this.dropdown;\n                if (dropdown && dropdown.selectedIndex > 0) {\n                    return dropdown.selectedIndex - 1;\n                }\n                return 0;\n            };\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            RangeSelector.prototype.showDropdown = function () {\n                var _a = this,\n                    buttonGroup = _a.buttonGroup,\n                    buttons = _a.buttons,\n                    chart = _a.chart,\n                    dropdown = _a.dropdown;\n                if (buttonGroup && dropdown) {\n                    var translateX = buttonGroup.translateX,\n                        translateY = buttonGroup.translateY;\n                    var bBox = buttons[this.currentButtonIndex()].getBBox();\n                    css(dropdown, {\n                        left: (chart.plotLeft + translateX) + 'px',\n                        top: (translateY + 0.5) + 'px',\n                        width: bBox.width + 'px',\n                        height: bBox.height + 'px'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            RangeSelector.prototype.hideDropdown = function () {\n                var dropdown = this.dropdown;\n                if (dropdown) {\n                    css(dropdown, {\n                        top: '-9999em',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            };\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            RangeSelector.prototype.getHeight = function () {\n                var rangeSelector = this,\n                    options = rangeSelector.options,\n                    rangeSelectorGroup = rangeSelector.group,\n                    inputPosition = options.inputPosition,\n                    buttonPosition = options.buttonPosition,\n                    yPosition = options.y,\n                    buttonPositionY = buttonPosition.y,\n                    inputPositionY = inputPosition.y;\n                var rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                var minPosition = Math.min(inputPositionY,\n                    buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            };\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            RangeSelector.prototype.titleCollision = function (chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            };\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            RangeSelector.prototype.update = function (options) {\n                var chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                this.render();\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            RangeSelector.prototype.destroy = function () {\n                var rSelector = this,\n                    minInput = rSelector.minInput,\n                    maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach(function (unbind) { return unbind(); });\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            };\n            return RangeSelector;\n        }());\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Accessibility/Components/RangeSelectorComponent.js', [_modules['Stock/RangeSelector/RangeSelector.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Core/Utilities.js']], function (RangeSelector, AccessibilityComponent, ChartUtilities, Announcer, KeyboardNavigationHandler, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Accessibility component for the range selector.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var unhideChartElementFromAT = ChartUtilities.unhideChartElementFromAT,\n            getAxisRangeDescription = ChartUtilities.getAxisRangeDescription;\n        var addEvent = U.addEvent,\n            attr = U.attr;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function shouldRunInputNavigation(chart) {\n            return Boolean(chart.rangeSelector &&\n                chart.rangeSelector.inputGroup &&\n                chart.rangeSelector.inputGroup.element.style.visibility !== 'hidden' &&\n                chart.options.rangeSelector.inputEnabled !== false &&\n                chart.rangeSelector.minInput &&\n                chart.rangeSelector.maxInput);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The RangeSelectorComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelectorComponent\n         */\n        var RangeSelectorComponent = /** @class */ (function (_super) {\n                __extends(RangeSelectorComponent, _super);\n            function RangeSelectorComponent() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.announcer = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             * @private\n             */\n            RangeSelectorComponent.prototype.init = function () {\n                var chart = this.chart;\n                this.announcer = new Announcer(chart, 'polite');\n            };\n            /**\n             * Called on first render/updates to the chart, including options changes.\n             */\n            RangeSelectorComponent.prototype.onChartUpdate = function () {\n                var chart = this.chart,\n                    component = this,\n                    rangeSelector = chart.rangeSelector;\n                if (!rangeSelector) {\n                    return;\n                }\n                this.updateSelectorVisibility();\n                this.setDropdownAttrs();\n                if (rangeSelector.buttons &&\n                    rangeSelector.buttons.length) {\n                    rangeSelector.buttons.forEach(function (button) {\n                        component.setRangeButtonAttrs(button);\n                    });\n                }\n                // Make sure input boxes are accessible and focusable\n                if (rangeSelector.maxInput && rangeSelector.minInput) {\n                    ['minInput', 'maxInput'].forEach(function (key, i) {\n                        var input = rangeSelector[key];\n                        if (input) {\n                            unhideChartElementFromAT(chart, input);\n                            component.setRangeInputAttrs(input, 'accessibility.rangeSelector.' + (i ? 'max' : 'min') +\n                                'InputLabel');\n                        }\n                    });\n                }\n            };\n            /**\n             * Hide buttons from AT when showing dropdown, and vice versa.\n             * @private\n             */\n            RangeSelectorComponent.prototype.updateSelectorVisibility = function () {\n                var chart = this.chart;\n                var rangeSelector = chart.rangeSelector;\n                var dropdown = (rangeSelector &&\n                        rangeSelector.dropdown);\n                var buttons = (rangeSelector &&\n                        rangeSelector.buttons ||\n                        []);\n                var hideFromAT = function (el) { return el.setAttribute('aria-hidden',\n                    true); };\n                if (rangeSelector &&\n                    rangeSelector.hasVisibleDropdown &&\n                    dropdown) {\n                    unhideChartElementFromAT(chart, dropdown);\n                    buttons.forEach(function (btn) { return hideFromAT(btn.element); });\n                }\n                else {\n                    if (dropdown) {\n                        hideFromAT(dropdown);\n                    }\n                    buttons.forEach(function (btn) { return unhideChartElementFromAT(chart, btn.element); });\n                }\n            };\n            /**\n             * Set accessibility related attributes on dropdown element.\n             * @private\n             */\n            RangeSelectorComponent.prototype.setDropdownAttrs = function () {\n                var chart = this.chart;\n                var dropdown = (chart.rangeSelector &&\n                        chart.rangeSelector.dropdown);\n                if (dropdown) {\n                    var label = chart.langFormat('accessibility.rangeSelector.dropdownLabel', { rangeTitle: chart.options.lang.rangeSelectorZoom });\n                    dropdown.setAttribute('aria-label', label);\n                    dropdown.setAttribute('tabindex', -1);\n                }\n            };\n            /**\n             * @private\n             * @param {Highcharts.SVGElement} button\n             */\n            RangeSelectorComponent.prototype.setRangeButtonAttrs = function (button) {\n                attr(button.element, {\n                    tabindex: -1,\n                    role: 'button'\n                });\n            };\n            /**\n             * @private\n             */\n            RangeSelectorComponent.prototype.setRangeInputAttrs = function (input, langKey) {\n                var chart = this.chart;\n                attr(input, {\n                    tabindex: -1,\n                    'aria-label': chart.langFormat(langKey, { chart: chart })\n                });\n            };\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @param {number} keyCode\n             * @return {number} Response code\n             */\n            RangeSelectorComponent.prototype.onButtonNavKbdArrowKey = function (keyboardNavigationHandler, keyCode) {\n                var response = keyboardNavigationHandler.response,\n                    keys = this.keyCodes,\n                    chart = this.chart,\n                    wrapAround = chart.options.accessibility\n                        .keyboardNavigation.wrapAround,\n                    direction = (keyCode === keys.left || keyCode === keys.up) ? -1 : 1,\n                    didHighlight = chart.highlightRangeSelectorButton(chart.highlightedRangeSelectorItemIx + direction);\n                if (!didHighlight) {\n                    if (wrapAround) {\n                        keyboardNavigationHandler.init(direction);\n                        return response.success;\n                    }\n                    return response[direction > 0 ? 'next' : 'prev'];\n                }\n                return response.success;\n            };\n            /**\n             * @private\n             */\n            RangeSelectorComponent.prototype.onButtonNavKbdClick = function (keyboardNavigationHandler) {\n                var response = keyboardNavigationHandler.response,\n                    chart = this.chart,\n                    wasDisabled = chart.oldRangeSelectorItemState === 3;\n                if (!wasDisabled) {\n                    this.fakeClickEvent(chart.rangeSelector.buttons[chart.highlightedRangeSelectorItemIx].element);\n                }\n                return response.success;\n            };\n            /**\n             * Called whenever a range selector button has been clicked, either by\n             * mouse, touch, or kbd/voice/other.\n             * @private\n             */\n            RangeSelectorComponent.prototype.onAfterBtnClick = function () {\n                var chart = this.chart;\n                var axisRangeDescription = getAxisRangeDescription(chart.xAxis[0]);\n                var announcement = chart.langFormat('accessibility.rangeSelector.clickButtonAnnouncement', { chart: chart,\n                    axisRangeDescription: axisRangeDescription });\n                if (announcement) {\n                    this.announcer.announce(announcement);\n                }\n            };\n            /**\n             * @private\n             */\n            RangeSelectorComponent.prototype.onInputKbdMove = function (direction) {\n                var chart = this.chart;\n                var rangeSel = chart.rangeSelector;\n                var newIx = chart.highlightedInputRangeIx = (chart.highlightedInputRangeIx || 0) + direction;\n                var newIxOutOfRange = newIx > 1 || newIx < 0;\n                if (newIxOutOfRange) {\n                    if (chart.accessibility) {\n                        chart.accessibility.keyboardNavigation.tabindexContainer\n                            .focus();\n                        chart.accessibility.keyboardNavigation.move(direction);\n                    }\n                }\n                else if (rangeSel) {\n                    var svgEl = rangeSel[newIx ? 'maxDateBox' : 'minDateBox'];\n                    var inputEl = rangeSel[newIx ? 'maxInput' : 'minInput'];\n                    if (svgEl && inputEl) {\n                        chart.setFocusToElement(svgEl, inputEl);\n                    }\n                }\n            };\n            /**\n             * @private\n             * @param {number} direction\n             */\n            RangeSelectorComponent.prototype.onInputNavInit = function (direction) {\n                var _this = this;\n                var component = this;\n                var chart = this.chart;\n                var buttonIxToHighlight = direction > 0 ? 0 : 1;\n                var rangeSel = chart.rangeSelector;\n                var svgEl = (rangeSel &&\n                        rangeSel[buttonIxToHighlight ? 'maxDateBox' : 'minDateBox']);\n                var minInput = (rangeSel && rangeSel.minInput);\n                var maxInput = (rangeSel && rangeSel.maxInput);\n                var inputEl = buttonIxToHighlight ? maxInput : minInput;\n                chart.highlightedInputRangeIx = buttonIxToHighlight;\n                if (svgEl && minInput && maxInput) {\n                    chart.setFocusToElement(svgEl, inputEl);\n                    // Tab-press with the input focused does not propagate to chart\n                    // automatically, so we manually catch and handle it when relevant.\n                    if (this.removeInputKeydownHandler) {\n                        this.removeInputKeydownHandler();\n                    }\n                    var keydownHandler = function (e) {\n                            var isTab = (e.which || e.keyCode) === _this.keyCodes.tab;\n                        if (isTab) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            component.onInputKbdMove(e.shiftKey ? -1 : 1);\n                        }\n                    };\n                    var minRemover_1 = addEvent(minInput, 'keydown',\n                        keydownHandler);\n                    var maxRemover_1 = addEvent(maxInput, 'keydown',\n                        keydownHandler);\n                    this.removeInputKeydownHandler = function () {\n                        minRemover_1();\n                        maxRemover_1();\n                    };\n                }\n            };\n            /**\n             * @private\n             */\n            RangeSelectorComponent.prototype.onInputNavTerminate = function () {\n                var rangeSel = (this.chart.rangeSelector || {});\n                if (rangeSel.maxInput) {\n                    rangeSel.hideInput('max');\n                }\n                if (rangeSel.minInput) {\n                    rangeSel.hideInput('min');\n                }\n                if (this.removeInputKeydownHandler) {\n                    this.removeInputKeydownHandler();\n                    delete this.removeInputKeydownHandler;\n                }\n            };\n            /**\n             * @private\n             */\n            RangeSelectorComponent.prototype.initDropdownNav = function () {\n                var _this = this;\n                var chart = this.chart;\n                var rangeSelector = chart.rangeSelector;\n                var dropdown = (rangeSelector && rangeSelector.dropdown);\n                if (rangeSelector && dropdown) {\n                    chart.setFocusToElement(rangeSelector.buttonGroup, dropdown);\n                    if (this.removeDropdownKeydownHandler) {\n                        this.removeDropdownKeydownHandler();\n                    }\n                    // Tab-press with dropdown focused does not propagate to chart\n                    // automatically, so we manually catch and handle it when relevant.\n                    this.removeDropdownKeydownHandler = addEvent(dropdown, 'keydown', function (e) {\n                        var isTab = (e.which || e.keyCode) === _this.keyCodes.tab,\n                            a11y = chart.accessibility;\n                        if (isTab) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (a11y) {\n                                a11y.keyboardNavigation.tabindexContainer.focus();\n                                a11y.keyboardNavigation.move(e.shiftKey ? -1 : 1);\n                            }\n                        }\n                    });\n                }\n            };\n            /**\n             * Get navigation for the range selector buttons.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object.\n             */\n            RangeSelectorComponent.prototype.getRangeSelectorButtonNavigation = function () {\n                var chart = this.chart;\n                var keys = this.keyCodes;\n                var component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                return component.onButtonNavKbdArrowKey(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onButtonNavKbdClick(this);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return !!(chart.rangeSelector &&\n                            chart.rangeSelector.buttons &&\n                            chart.rangeSelector.buttons.length);\n                    },\n                    init: function (direction) {\n                        var rangeSelector = chart.rangeSelector;\n                        if (rangeSelector && rangeSelector.hasVisibleDropdown) {\n                            component.initDropdownNav();\n                        }\n                        else if (rangeSelector) {\n                            var lastButtonIx = rangeSelector.buttons.length - 1;\n                            chart.highlightRangeSelectorButton(direction > 0 ? 0 : lastButtonIx);\n                        }\n                    },\n                    terminate: function () {\n                        if (component.removeDropdownKeydownHandler) {\n                            component.removeDropdownKeydownHandler();\n                            delete component.removeDropdownKeydownHandler;\n                        }\n                    }\n                });\n            };\n            /**\n             * Get navigation for the range selector input boxes.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler}\n             *         The module object.\n             */\n            RangeSelectorComponent.prototype.getRangeSelectorInputNavigation = function () {\n                var chart = this.chart;\n                var component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [],\n                    validate: function () {\n                        return shouldRunInputNavigation(chart);\n                    },\n                    init: function (direction) {\n                        component.onInputNavInit(direction);\n                    },\n                    terminate: function () {\n                        component.onInputNavTerminate();\n                    }\n                });\n            };\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects.\n             */\n            RangeSelectorComponent.prototype.getKeyboardNavigation = function () {\n                return [\n                    this.getRangeSelectorButtonNavigation(),\n                    this.getRangeSelectorInputNavigation()\n                ];\n            };\n            /**\n             * Remove component traces\n             */\n            RangeSelectorComponent.prototype.destroy = function () {\n                if (this.removeDropdownKeydownHandler) {\n                    this.removeDropdownKeydownHandler();\n                }\n                if (this.removeInputKeydownHandler) {\n                    this.removeInputKeydownHandler();\n                }\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            };\n            return RangeSelectorComponent;\n        }(AccessibilityComponent));\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (RangeSelectorComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedClasses = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Highlight range selector button by index.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightRangeSelectorButton\n             */\n            function chartHighlightRangeSelectorButton(ix) {\n                var buttons = (this.rangeSelector &&\n                        this.rangeSelector.buttons ||\n                        []);\n                var curHighlightedIx = this.highlightedRangeSelectorItemIx;\n                var curSelectedIx = (this.rangeSelector &&\n                        this.rangeSelector.selected);\n                // Deselect old\n                if (typeof curHighlightedIx !== 'undefined' &&\n                    buttons[curHighlightedIx] &&\n                    curHighlightedIx !== curSelectedIx) {\n                    buttons[curHighlightedIx].setState(this.oldRangeSelectorItemState || 0);\n                }\n                // Select new\n                this.highlightedRangeSelectorItemIx = ix;\n                if (buttons[ix]) {\n                    this.setFocusToElement(buttons[ix].box, buttons[ix].element);\n                    if (ix !== curSelectedIx) {\n                        this.oldRangeSelectorItemState = buttons[ix].state;\n                        buttons[ix].setState(1);\n                    }\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, RangeSelectorClass) {\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.highlightRangeSelectorButton = (chartHighlightRangeSelectorButton);\n                }\n                if (composedClasses.indexOf(RangeSelectorClass) === -1) {\n                    composedClasses.push(RangeSelectorClass);\n                    addEvent(RangeSelector, 'afterBtnClick', rangeSelectorAfterBtnClick);\n                }\n            }\n            RangeSelectorComponent.compose = compose;\n            /**\n             * Range selector does not have destroy-setup for class instance events - so\n             * we set it on the class and call the component from here.\n             * @private\n             */\n            function rangeSelectorAfterBtnClick() {\n                var a11y = this.chart.accessibility;\n                if (a11y && a11y.components.rangeSelector) {\n                    return a11y.components.rangeSelector.onAfterBtnClick();\n                }\n            }\n        })(RangeSelectorComponent || (RangeSelectorComponent = {}));\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return RangeSelectorComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/ForcedMarkers.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Handle forcing series markers.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent,\n            merge = U.merge;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ForcedMarkersComposition;\n        (function (ForcedMarkersComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Compositions\n             *\n             * */\n            var composedClasses = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (composedClasses.indexOf(SeriesClass) === -1) {\n                    composedClasses.push(SeriesClass);\n                    addEvent(SeriesClass, 'afterSetOptions', seriesOnAfterSetOptions);\n                    addEvent(SeriesClass, 'render', seriesOnRender);\n                    addEvent(SeriesClass, 'afterRender', seriesOnAfterRender);\n                }\n            }\n            ForcedMarkersComposition.compose = compose;\n            /**\n             * @private\n             */\n            function forceZeroOpacityMarkerOptions(options) {\n                merge(true, options, {\n                    marker: {\n                        enabled: true,\n                        states: {\n                            normal: {\n                                opacity: 0\n                            }\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            function getPointMarkerOpacity(pointOptions) {\n                return pointOptions.marker.states &&\n                    pointOptions.marker.states.normal &&\n                    pointOptions.marker.states.normal.opacity;\n            }\n            /**\n             * @private\n             */\n            function handleForcePointMarkers(series) {\n                var i = series.points.length;\n                while (i--) {\n                    var point = series.points[i];\n                    var pointOptions = point.options;\n                    var hadForcedMarker = point.hasForcedA11yMarker;\n                    delete point.hasForcedA11yMarker;\n                    if (pointOptions.marker) {\n                        var isStillForcedMarker = hadForcedMarker &&\n                                getPointMarkerOpacity(pointOptions) === 0;\n                        if (pointOptions.marker.enabled && !isStillForcedMarker) {\n                            unforcePointMarkerOptions(pointOptions);\n                            point.hasForcedA11yMarker = false;\n                        }\n                        else if (pointOptions.marker.enabled === false) {\n                            forceZeroOpacityMarkerOptions(pointOptions);\n                            point.hasForcedA11yMarker = true;\n                        }\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function hasIndividualPointMarkerOptions(series) {\n                return !!(series._hasPointMarkers &&\n                    series.points &&\n                    series.points.length);\n            }\n            /**\n             * @private\n             */\n            function isWithinDescriptionThreshold(series) {\n                var a11yOptions = series.chart.options.accessibility;\n                return series.points.length <\n                    a11yOptions.series.pointDescriptionEnabledThreshold ||\n                    a11yOptions.series\n                        .pointDescriptionEnabledThreshold === false;\n            }\n            /**\n             * Process marker graphics after render\n             * @private\n             */\n            function seriesOnAfterRender() {\n                var series = this;\n                // For styled mode the rendered graphic does not reflect the style\n                // options, and we need to add/remove classes to achieve the same.\n                if (series.chart.styledMode) {\n                    if (series.markerGroup) {\n                        series.markerGroup[series.a11yMarkersForced ? 'addClass' : 'removeClass']('highcharts-a11y-markers-hidden');\n                    }\n                    // Do we need to handle individual points?\n                    if (hasIndividualPointMarkerOptions(series)) {\n                        series.points.forEach(function (point) {\n                            if (point.graphic) {\n                                point.graphic[point.hasForcedA11yMarker ?\n                                    'addClass' : 'removeClass']('highcharts-a11y-marker-hidden');\n                                point.graphic[point.hasForcedA11yMarker === false ?\n                                    'addClass' :\n                                    'removeClass']('highcharts-a11y-marker-visible');\n                            }\n                        });\n                    }\n                }\n            }\n            /**\n             * Keep track of options to reset markers to if no longer forced.\n             * @private\n             */\n            function seriesOnAfterSetOptions(e) {\n                this.resetA11yMarkerOptions = merge(e.options.marker || {}, this.userOptions.marker || {});\n            }\n            /**\n             * Keep track of forcing markers.\n             * @private\n             */\n            function seriesOnRender() {\n                var series = this,\n                    options = series.options;\n                if (shouldForceMarkers(series)) {\n                    if (options.marker && options.marker.enabled === false) {\n                        series.a11yMarkersForced = true;\n                        forceZeroOpacityMarkerOptions(series.options);\n                    }\n                    if (hasIndividualPointMarkerOptions(series)) {\n                        handleForcePointMarkers(series);\n                    }\n                }\n                else if (series.a11yMarkersForced) {\n                    delete series.a11yMarkersForced;\n                    unforceSeriesMarkerOptions(series);\n                    delete series.resetA11yMarkerOptions;\n                }\n            }\n            /**\n             * @private\n             */\n            function shouldForceMarkers(series) {\n                var chart = series.chart,\n                    chartA11yEnabled = chart.options.accessibility.enabled,\n                    seriesA11yEnabled = (series.options.accessibility &&\n                        series.options.accessibility.enabled) !== false;\n                return (chartA11yEnabled &&\n                    seriesA11yEnabled &&\n                    isWithinDescriptionThreshold(series));\n            }\n            /**\n             * @private\n             */\n            function unforcePointMarkerOptions(pointOptions) {\n                merge(true, pointOptions.marker, {\n                    states: {\n                        normal: {\n                            opacity: getPointMarkerOpacity(pointOptions) || 1\n                        }\n                    }\n                });\n            }\n            /**\n             * Reset markers to normal\n             * @private\n             */\n            function unforceSeriesMarkerOptions(series) {\n                var resetMarkerOptions = series.resetA11yMarkerOptions;\n                if (resetMarkerOptions) {\n                    var originalOpactiy = resetMarkerOptions.states &&\n                            resetMarkerOptions.states.normal &&\n                            resetMarkerOptions.states.normal.opacity;\n                    series.update({\n                        marker: {\n                            enabled: resetMarkerOptions.enabled,\n                            states: {\n                                normal: { opacity: originalOpactiy }\n                            }\n                        }\n                    });\n                }\n            }\n        })(ForcedMarkersComposition || (ForcedMarkersComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ForcedMarkersComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesKeyboardNavigation.js', [_modules['Core/Series/Point.js'], _modules['Core/Series/Series.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/ChartUtilities.js']], function (Point, Series, SeriesRegistry, H, U, KeyboardNavigationHandler, EventProvider, ChartUtilities) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Handle keyboard navigation for series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        var doc = H.doc;\n        var defined = U.defined,\n            fireEvent = U.fireEvent;\n        var getPointFromXY = ChartUtilities.getPointFromXY,\n            getSeriesFromName = ChartUtilities.getSeriesFromName,\n            scrollToPoint = ChartUtilities.scrollToPoint;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Get the index of a point in a series. This is needed when using e.g. data\n         * grouping.\n         *\n         * @private\n         * @function getPointIndex\n         * @param {Highcharts.AccessibilityPoint} point\n         * The point to find index of.\n         * @return {number|undefined}\n         * The index in the series.points array of the point.\n         */\n        function getPointIndex(point) {\n            var index = point.index,\n                points = point.series.points;\n            var i = points.length;\n            if (points[index] !== point) {\n                while (i--) {\n                    if (points[i] === point) {\n                        return i;\n                    }\n                }\n            }\n            else {\n                return index;\n            }\n        }\n        /**\n         * Determine if series navigation should be skipped\n         * @private\n         */\n        function isSkipSeries(series) {\n            var a11yOptions = series.chart.options.accessibility,\n                seriesNavOptions = a11yOptions.keyboardNavigation.seriesNavigation,\n                seriesA11yOptions = series.options.accessibility || {},\n                seriesKbdNavOptions = seriesA11yOptions.keyboardNavigation;\n            return seriesKbdNavOptions && seriesKbdNavOptions.enabled === false ||\n                seriesA11yOptions.enabled === false ||\n                series.options.enableMouseTracking === false || // #8440\n                !series.visible ||\n                // Skip all points in a series where pointNavigationEnabledThreshold is\n                // reached\n                (seriesNavOptions.pointNavigationEnabledThreshold &&\n                    seriesNavOptions.pointNavigationEnabledThreshold <=\n                        series.points.length);\n        }\n        /**\n         * Determine if navigation for a point should be skipped\n         * @private\n         */\n        function isSkipPoint(point) {\n            var a11yOptions = point.series.chart.options.accessibility;\n            var pointA11yDisabled = (point.options.accessibility &&\n                    point.options.accessibility.enabled === false);\n            return point.isNull &&\n                a11yOptions.keyboardNavigation.seriesNavigation.skipNullPoints ||\n                point.visible === false ||\n                point.isInside === false ||\n                pointA11yDisabled ||\n                isSkipSeries(point.series);\n        }\n        /**\n         * Get the first point that is not a skip point in this series.\n         * @private\n         */\n        function getFirstValidPointInSeries(series) {\n            var points = series.points || [],\n                len = points.length;\n            for (var i = 0; i < len; ++i) {\n                if (!isSkipPoint(points[i])) {\n                    return points[i];\n                }\n            }\n            return null;\n        }\n        /**\n         * Get the first point that is not a skip point in this chart.\n         * @private\n         */\n        function getFirstValidPointInChart(chart) {\n            var series = chart.series || [],\n                len = series.length;\n            for (var i = 0; i < len; ++i) {\n                if (!isSkipSeries(series[i])) {\n                    var point = getFirstValidPointInSeries(series[i]);\n                    if (point) {\n                        return point;\n                    }\n                }\n            }\n            return null;\n        }\n        /**\n         * @private\n         */\n        function highlightLastValidPointInChart(chart) {\n            var numSeries = chart.series.length;\n            var i = numSeries,\n                res = false;\n            while (i--) {\n                chart.highlightedPoint = chart.series[i].points[chart.series[i].points.length - 1];\n                // Highlight first valid point in the series will also\n                // look backwards. It always starts from currently\n                // highlighted point.\n                res = chart.series[i].highlightNextValidPoint();\n                if (res) {\n                    break;\n                }\n            }\n            return res;\n        }\n        /**\n         * After drilling down/up, we need to set focus to the first point for\n         * screen readers and keyboard nav.\n         * @private\n         */\n        function updateChartFocusAfterDrilling(chart) {\n            var point = getFirstValidPointInChart(chart);\n            if (point) {\n                point.highlight(false); // Do not visually highlight\n            }\n        }\n        /**\n         * Highlight the first point in chart that is not a skip point\n         * @private\n         */\n        function highlightFirstValidPointInChart(chart) {\n            delete chart.highlightedPoint;\n            var point = getFirstValidPointInChart(chart);\n            return point ? point.highlight() : false;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.SeriesKeyboardNavigation\n         */\n        var SeriesKeyboardNavigation = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function SeriesKeyboardNavigation(chart, keyCodes) {\n                    this.keyCodes = keyCodes;\n                this.chart = chart;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the keyboard navigation\n             */\n            SeriesKeyboardNavigation.prototype.init = function () {\n                var keyboardNavigation = this,\n                    chart = this.chart,\n                    e = this.eventProvider = new EventProvider();\n                e.addEvent(Series, 'destroy', function () {\n                    return keyboardNavigation.onSeriesDestroy(this);\n                });\n                e.addEvent(chart, 'afterApplyDrilldown', function () {\n                    updateChartFocusAfterDrilling(this);\n                });\n                e.addEvent(chart, 'drilldown', function (e) {\n                    var point = e.point,\n                        series = point.series;\n                    keyboardNavigation.lastDrilledDownPoint = {\n                        x: point.x,\n                        y: point.y,\n                        seriesName: series ? series.name : ''\n                    };\n                });\n                e.addEvent(chart, 'drillupall', function () {\n                    setTimeout(function () {\n                        keyboardNavigation.onDrillupAll();\n                    }, 10);\n                });\n                // Heatmaps et al. alter z-index in setState, causing elements\n                // to lose focus\n                e.addEvent(Point, 'afterSetState', function () {\n                    var point = this;\n                    var pointEl = point.graphic && point.graphic.element;\n                    var focusedElement = doc.activeElement;\n                    // VO brings focus with it to container, causing series nav to run.\n                    // If then navigating with virtual cursor, it is possible to leave\n                    // keyboard nav module state on the data points and still activate\n                    // proxy buttons.\n                    var focusedElClassName = (focusedElement && focusedElement.getAttribute('class'));\n                    var isProxyFocused = focusedElClassName &&\n                            focusedElClassName.indexOf('highcharts-a11y-proxy-button') > -1;\n                    if (chart.highlightedPoint === point &&\n                        focusedElement !== pointEl &&\n                        !isProxyFocused &&\n                        pointEl &&\n                        pointEl.focus) {\n                        pointEl.focus();\n                    }\n                });\n            };\n            /**\n             * After drillup we want to find the point that was drilled down to and\n             * highlight it.\n             * @private\n             */\n            SeriesKeyboardNavigation.prototype.onDrillupAll = function () {\n                var last = this.lastDrilledDownPoint,\n                    chart = this.chart,\n                    series = last && getSeriesFromName(chart,\n                    last.seriesName);\n                var point;\n                if (last && series && defined(last.x) && defined(last.y)) {\n                    point = getPointFromXY(series, last.x, last.y);\n                }\n                point = point || getFirstValidPointInChart(chart);\n                // Container focus can be lost on drillup due to deleted elements.\n                if (chart.container) {\n                    chart.container.focus();\n                }\n                if (point && point.highlight) {\n                    point.highlight(false); // Do not visually highlight\n                }\n            };\n            /**\n             * @private\n             */\n            SeriesKeyboardNavigation.prototype.getKeyboardNavigationHandler = function () {\n                var keyboardNavigation = this,\n                    keys = this.keyCodes,\n                    chart = this.chart,\n                    inverted = chart.inverted;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [inverted ? [keys.up, keys.down] : [keys.left, keys.right],\n                            function (keyCode) {\n                                return keyboardNavigation.onKbdSideways(this, keyCode);\n                            }],\n                        [inverted ? [keys.left, keys.right] : [keys.up, keys.down],\n                            function (keyCode) {\n                                return keyboardNavigation.onKbdVertical(this, keyCode);\n                            }],\n                        [[keys.enter, keys.space],\n                            function (keyCode, event) {\n                                var point = chart.highlightedPoint;\n                                if (point) {\n                                    event.point = point;\n                                    fireEvent(point.series, 'click', event);\n                                    point.firePointEvent('click');\n                                }\n                                return this.response.success;\n                            }],\n                        [[keys.home],\n                            function () {\n                                highlightFirstValidPointInChart(chart);\n                                return this.response.success;\n                            }],\n                        [[keys.end],\n                            function () {\n                                highlightLastValidPointInChart(chart);\n                                return this.response.success;\n                            }],\n                        [[keys.pageDown, keys.pageUp],\n                            function (keyCode) {\n                                chart.highlightAdjacentSeries(keyCode === keys.pageDown);\n                                return this.response.success;\n                            }]\n                    ],\n                    init: function () {\n                        return keyboardNavigation.onHandlerInit(this);\n                    },\n                    validate: function () {\n                        return !!getFirstValidPointInChart(chart);\n                    },\n                    terminate: function () {\n                        return keyboardNavigation.onHandlerTerminate();\n                    }\n                });\n            };\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler\n             * @param {number} keyCode\n             * @return {number}\n             * response\n             */\n            SeriesKeyboardNavigation.prototype.onKbdSideways = function (handler, keyCode) {\n                var keys = this.keyCodes,\n                    isNext = keyCode === keys.right || keyCode === keys.down;\n                return this.attemptHighlightAdjacentPoint(handler, isNext);\n            };\n            /**\n             * When keyboard navigation inits.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler The handler object\n             * @return {number}\n             * response\n             */\n            SeriesKeyboardNavigation.prototype.onHandlerInit = function (handler) {\n                var chart = this.chart,\n                    kbdNavOptions = chart.options.accessibility.keyboardNavigation;\n                if (kbdNavOptions.seriesNavigation.rememberPointFocus &&\n                    chart.highlightedPoint) {\n                    chart.highlightedPoint.highlight();\n                }\n                else {\n                    highlightFirstValidPointInChart(chart);\n                }\n                return handler.response.success;\n            };\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler\n             * @param {number} keyCode\n             * @return {number}\n             * response\n             */\n            SeriesKeyboardNavigation.prototype.onKbdVertical = function (handler, keyCode) {\n                var chart = this.chart,\n                    keys = this.keyCodes,\n                    isNext = keyCode === keys.down || keyCode === keys.right,\n                    navOptions = chart.options.accessibility.keyboardNavigation\n                        .seriesNavigation;\n                // Handle serialized mode, act like left/right\n                if (navOptions.mode && navOptions.mode === 'serialize') {\n                    return this.attemptHighlightAdjacentPoint(handler, isNext);\n                }\n                // Normal mode, move between series\n                var highlightMethod = (chart.highlightedPoint &&\n                        chart.highlightedPoint.series.keyboardMoveVertical) ?\n                        'highlightAdjacentPointVertical' :\n                        'highlightAdjacentSeries';\n                chart[highlightMethod](isNext);\n                return handler.response.success;\n            };\n            /**\n             * @private\n             */\n            SeriesKeyboardNavigation.prototype.onHandlerTerminate = function () {\n                var chart = this.chart,\n                    kbdNavOptions = chart.options.accessibility.keyboardNavigation;\n                if (chart.tooltip) {\n                    chart.tooltip.hide(0);\n                }\n                var hoverSeries = (chart.highlightedPoint && chart.highlightedPoint.series);\n                if (hoverSeries && hoverSeries.onMouseOut) {\n                    hoverSeries.onMouseOut();\n                }\n                if (chart.highlightedPoint && chart.highlightedPoint.onMouseOut) {\n                    chart.highlightedPoint.onMouseOut();\n                }\n                if (!kbdNavOptions.seriesNavigation.rememberPointFocus) {\n                    delete chart.highlightedPoint;\n                }\n            };\n            /**\n             * Function that attempts to highlight next/prev point. Handles wrap around.\n             * @private\n             */\n            SeriesKeyboardNavigation.prototype.attemptHighlightAdjacentPoint = function (handler, directionIsNext) {\n                var chart = this.chart,\n                    wrapAround = chart.options.accessibility.keyboardNavigation\n                        .wrapAround,\n                    highlightSuccessful = chart.highlightAdjacentPoint(directionIsNext);\n                if (!highlightSuccessful) {\n                    if (wrapAround && (directionIsNext ?\n                        highlightFirstValidPointInChart(chart) :\n                        highlightLastValidPointInChart(chart))) {\n                        return handler.response.success;\n                    }\n                    return handler.response[directionIsNext ? 'next' : 'prev'];\n                }\n                return handler.response.success;\n            };\n            /**\n             * @private\n             */\n            SeriesKeyboardNavigation.prototype.onSeriesDestroy = function (series) {\n                var chart = this.chart,\n                    currentHighlightedPointDestroyed = chart.highlightedPoint &&\n                        chart.highlightedPoint.series === series;\n                if (currentHighlightedPointDestroyed) {\n                    delete chart.highlightedPoint;\n                    if (chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            SeriesKeyboardNavigation.prototype.destroy = function () {\n                this.eventProvider.removeAddedEvents();\n            };\n            return SeriesKeyboardNavigation;\n        }());\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (SeriesKeyboardNavigation) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedClasses = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Function to highlight next/previous point in chart.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightAdjacentPoint\n             *\n             * @param {boolean} next\n             * Flag for the direction.\n             *\n             * @return {Highcharts.Point|boolean}\n             * Returns highlighted point on success, false on failure (no adjacent point\n             * to highlight in chosen direction).\n             */\n            function chartHighlightAdjacentPoint(next) {\n                var chart = this,\n                    series = chart.series,\n                    curPoint = chart.highlightedPoint,\n                    curPointIndex = curPoint && getPointIndex(curPoint) || 0,\n                    curPoints = curPoint && curPoint.series.points || [],\n                    lastSeries = chart.series && chart.series[chart.series.length - 1],\n                    lastPoint = lastSeries &&\n                        lastSeries.points &&\n                        lastSeries.points[lastSeries.points.length - 1];\n                var newSeries,\n                    newPoint;\n                // If no points, return false\n                if (!series[0] || !series[0].points) {\n                    return false;\n                }\n                if (!curPoint) {\n                    // No point is highlighted yet. Try first/last point depending on\n                    // move direction\n                    newPoint = next ? series[0].points[0] : lastPoint;\n                }\n                else {\n                    // We have a highlighted point. Grab next/prev point & series.\n                    newSeries = series[curPoint.series.index + (next ? 1 : -1)];\n                    newPoint = curPoints[curPointIndex + (next ? 1 : -1)];\n                    if (!newPoint && newSeries) {\n                        // Done with this series, try next one\n                        newPoint = newSeries.points[next ? 0 : newSeries.points.length - 1];\n                    }\n                    // If there is no adjacent point, we return false\n                    if (!newPoint) {\n                        return false;\n                    }\n                }\n                // Recursively skip points\n                if (isSkipPoint(newPoint)) {\n                    // If we skip this whole series, move to the end of the series\n                    // before we recurse, just to optimize\n                    newSeries = newPoint.series;\n                    if (isSkipSeries(newSeries)) {\n                        chart.highlightedPoint = next ?\n                            newSeries.points[newSeries.points.length - 1] :\n                            newSeries.points[0];\n                    }\n                    else {\n                        // Otherwise, just move one point\n                        chart.highlightedPoint = newPoint;\n                    }\n                    // Retry\n                    return chart.highlightAdjacentPoint(next);\n                }\n                // There is an adjacent point, highlight it\n                return newPoint.highlight();\n            }\n            /**\n             * Highlight the closest point vertically.\n             * @private\n             */\n            function chartHighlightAdjacentPointVertical(down) {\n                var curPoint = this.highlightedPoint;\n                var minDistance = Infinity,\n                    bestPoint;\n                if (!defined(curPoint.plotX) || !defined(curPoint.plotY)) {\n                    return false;\n                }\n                this.series.forEach(function (series) {\n                    if (isSkipSeries(series)) {\n                        return;\n                    }\n                    series.points.forEach(function (point) {\n                        if (!defined(point.plotY) || !defined(point.plotX) ||\n                            point === curPoint) {\n                            return;\n                        }\n                        var yDistance = point.plotY - curPoint.plotY;\n                        var width = Math.abs(point.plotX - curPoint.plotX),\n                            distance = Math.abs(yDistance) * Math.abs(yDistance) +\n                                width * width * 4; // Weigh horizontal distance highly\n                            // Reverse distance number if axis is reversed\n                            if (series.yAxis && series.yAxis.reversed) {\n                                yDistance *= -1;\n                        }\n                        if (yDistance <= 0 && down || yDistance >= 0 && !down ||\n                            distance < 5 || // Points in same spot => infinite loop\n                            isSkipPoint(point)) {\n                            return;\n                        }\n                        if (distance < minDistance) {\n                            minDistance = distance;\n                            bestPoint = point;\n                        }\n                    });\n                });\n                return bestPoint ? bestPoint.highlight() : false;\n            }\n            /**\n             * Highlight next/previous series in chart. Returns false if no adjacent\n             * series in the direction, otherwise returns new highlighted point.\n             * @private\n             */\n            function chartHighlightAdjacentSeries(down) {\n                var chart = this,\n                    curPoint = chart.highlightedPoint,\n                    lastSeries = chart.series && chart.series[chart.series.length - 1],\n                    lastPoint = lastSeries && lastSeries.points &&\n                        lastSeries.points[lastSeries.points.length - 1];\n                var newSeries,\n                    newPoint,\n                    adjacentNewPoint;\n                // If no point is highlighted, highlight the first/last point\n                if (!chart.highlightedPoint) {\n                    newSeries = down ? (chart.series && chart.series[0]) : lastSeries;\n                    newPoint = down ?\n                        (newSeries && newSeries.points && newSeries.points[0]) :\n                        lastPoint;\n                    return newPoint ? newPoint.highlight() : false;\n                }\n                newSeries = (chart.series[curPoint.series.index + (down ? -1 : 1)]);\n                if (!newSeries) {\n                    return false;\n                }\n                // We have a new series in this direction, find the right point\n                // Weigh xDistance as counting much higher than Y distance\n                newPoint = getClosestPoint(curPoint, newSeries, 4);\n                if (!newPoint) {\n                    return false;\n                }\n                // New series and point exists, but we might want to skip it\n                if (isSkipSeries(newSeries)) {\n                    // Skip the series\n                    newPoint.highlight();\n                    // Try recurse\n                    adjacentNewPoint = chart.highlightAdjacentSeries(down);\n                    if (!adjacentNewPoint) {\n                        // Recurse failed\n                        curPoint.highlight();\n                        return false;\n                    }\n                    // Recurse succeeded\n                    return adjacentNewPoint;\n                }\n                // Highlight the new point or any first valid point back or forwards\n                // from it\n                newPoint.highlight();\n                return newPoint.series.highlightNextValidPoint();\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, PointClass, SeriesClass) {\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.highlightAdjacentPoint = chartHighlightAdjacentPoint;\n                    chartProto.highlightAdjacentPointVertical = (chartHighlightAdjacentPointVertical);\n                    chartProto.highlightAdjacentSeries = chartHighlightAdjacentSeries;\n                }\n                if (composedClasses.indexOf(PointClass) === -1) {\n                    composedClasses.push(PointClass);\n                    var pointProto = PointClass.prototype;\n                    pointProto.highlight = pointHighlight;\n                }\n                if (composedClasses.indexOf(SeriesClass) === -1) {\n                    composedClasses.push(SeriesClass);\n                    var seriesProto = SeriesClass.prototype;\n                    /**\n                     * Set for which series types it makes sense to move to the closest\n                     * point with up/down arrows, and which series types should just\n                     * move to next series.\n                     * @private\n                     */\n                    seriesProto.keyboardMoveVertical = true;\n                    [\n                        'column',\n                        'gantt',\n                        'pie'\n                    ].forEach(function (type) {\n                        if (seriesTypes[type]) {\n                            seriesTypes[type].prototype.keyboardMoveVertical = false;\n                        }\n                    });\n                    seriesProto.highlightNextValidPoint = (seriesHighlightNextValidPoint);\n                }\n            }\n            SeriesKeyboardNavigation.compose = compose;\n            /**\n             * Get the point in a series that is closest (in pixel distance) to a\n             * reference point. Optionally supply weight factors for x and y directions.\n             * @private\n             */\n            function getClosestPoint(point, series, xWeight, yWeight) {\n                var minDistance = Infinity,\n                    dPoint,\n                    minIx,\n                    distance,\n                    i = series.points.length;\n                var hasUndefinedPosition = function (point) { return (!(defined(point.plotX) && defined(point.plotY))); };\n                if (hasUndefinedPosition(point)) {\n                    return;\n                }\n                while (i--) {\n                    dPoint = series.points[i];\n                    if (hasUndefinedPosition(dPoint)) {\n                        continue;\n                    }\n                    distance = (point.plotX - dPoint.plotX) *\n                        (point.plotX - dPoint.plotX) *\n                        (xWeight || 1) +\n                        (point.plotY - dPoint.plotY) *\n                            (point.plotY - dPoint.plotY) *\n                            (yWeight || 1);\n                    if (distance < minDistance) {\n                        minDistance = distance;\n                        minIx = i;\n                    }\n                }\n                return defined(minIx) ? series.points[minIx] : void 0;\n            }\n            /**\n             * Highlights a point (show tooltip, display hover state, focus element).\n             *\n             * @private\n             * @function Highcharts.Point#highlight\n             *\n             * @return {Highcharts.Point}\n             *         This highlighted point.\n             */\n            function pointHighlight(highlightVisually) {\n                if (highlightVisually === void 0) { highlightVisually = true; }\n                var chart = this.series.chart;\n                if (!this.isNull && highlightVisually) {\n                    this.onMouseOver(); // Show the hover marker and tooltip\n                }\n                else {\n                    if (chart.tooltip) {\n                        chart.tooltip.hide(0);\n                    }\n                    // Do not call blur on the element, as it messes up the focus of the\n                    // div element of the chart\n                }\n                scrollToPoint(this);\n                // We focus only after calling onMouseOver because the state change can\n                // change z-index and mess up the element.\n                if (this.graphic) {\n                    chart.setFocusToElement(this.graphic);\n                    if (!highlightVisually && chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                    }\n                }\n                chart.highlightedPoint = this;\n                return this;\n            }\n            /**\n             * Highlight first valid point in a series. Returns the point if\n             * successfully highlighted, otherwise false. If there is a highlighted\n             * point in the series, use that as starting point.\n             *\n             * @private\n             * @function Highcharts.Series#highlightNextValidPoint\n             */\n            function seriesHighlightNextValidPoint() {\n                var curPoint = this.chart.highlightedPoint,\n                    start = (curPoint && curPoint.series) === this ?\n                        getPointIndex(curPoint) :\n                        0,\n                    points = this.points,\n                    len = points.length;\n                if (points && len) {\n                    for (var i = start; i < len; ++i) {\n                        if (!isSkipPoint(points[i])) {\n                            return points[i].highlight();\n                        }\n                    }\n                    for (var j = start; j >= 0; --j) {\n                        if (!isSkipPoint(points[j])) {\n                            return points[j].highlight();\n                        }\n                    }\n                }\n                return false;\n            }\n        })(SeriesKeyboardNavigation || (SeriesKeyboardNavigation = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SeriesKeyboardNavigation;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Components/SeriesComponent/ForcedMarkers.js'], _modules['Accessibility/Components/SeriesComponent/NewDataAnnouncer.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js'], _modules['Accessibility/Components/SeriesComponent/SeriesKeyboardNavigation.js'], _modules['Core/Tooltip.js']], function (AccessibilityComponent, ChartUtilities, ForcedMarkers, NewDataAnnouncer, SeriesDescriber, SeriesKeyboardNavigation, Tooltip) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Accessibility component for series and points.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var hideSeriesFromAT = ChartUtilities.hideSeriesFromAT;\n        var describeSeries = SeriesDescriber.describeSeries;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SeriesComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.SeriesComponent\n         */\n        var SeriesComponent = /** @class */ (function (_super) {\n                __extends(SeriesComponent, _super);\n            function SeriesComponent() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            SeriesComponent.compose = function (ChartClass, PointClass, SeriesClass) {\n                NewDataAnnouncer.compose(SeriesClass);\n                ForcedMarkers.compose(SeriesClass);\n                SeriesKeyboardNavigation.compose(ChartClass, PointClass, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Init the component.\n             */\n            SeriesComponent.prototype.init = function () {\n                this.newDataAnnouncer = new NewDataAnnouncer(this.chart);\n                this.newDataAnnouncer.init();\n                this.keyboardNavigation = new SeriesKeyboardNavigation(this.chart, this.keyCodes);\n                this.keyboardNavigation.init();\n                this.hideTooltipFromATWhenShown();\n                this.hideSeriesLabelsFromATWhenShown();\n            };\n            /**\n             * @private\n             */\n            SeriesComponent.prototype.hideTooltipFromATWhenShown = function () {\n                var component = this;\n                this.addEvent(Tooltip, 'refresh', function () {\n                    if (this.chart === component.chart &&\n                        this.label &&\n                        this.label.element) {\n                        this.label.element.setAttribute('aria-hidden', true);\n                    }\n                });\n            };\n            /**\n             * @private\n             */\n            SeriesComponent.prototype.hideSeriesLabelsFromATWhenShown = function () {\n                this.addEvent(this.chart, 'afterDrawSeriesLabels', function () {\n                    this.series.forEach(function (series) {\n                        if (series.labelBySeries) {\n                            series.labelBySeries.attr('aria-hidden', true);\n                        }\n                    });\n                });\n            };\n            /**\n             * Called on chart render. It is necessary to do this for render in case\n             * markers change on zoom/pixel density.\n             */\n            SeriesComponent.prototype.onChartRender = function () {\n                var chart = this.chart;\n                chart.series.forEach(function (series) {\n                    var shouldDescribeSeries = (series.options.accessibility &&\n                            series.options.accessibility.enabled) !== false &&\n                            series.visible;\n                    if (shouldDescribeSeries) {\n                        describeSeries(series);\n                    }\n                    else {\n                        hideSeriesFromAT(series);\n                    }\n                });\n            };\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            SeriesComponent.prototype.getKeyboardNavigation = function () {\n                return this.keyboardNavigation.getKeyboardNavigationHandler();\n            };\n            /**\n             * Remove traces\n             * @private\n             */\n            SeriesComponent.prototype.destroy = function () {\n                this.newDataAnnouncer.destroy();\n                this.keyboardNavigation.destroy();\n            };\n            return SeriesComponent;\n        }(AccessibilityComponent));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SeriesComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/ZoomComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Core/Utilities.js']], function (AccessibilityComponent, CU, HU, KeyboardNavigationHandler, U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Accessibility component for chart zoom.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var unhideChartElementFromAT = CU.unhideChartElementFromAT;\n        var getFakeMouseEvent = HU.getFakeMouseEvent;\n        var attr = U.attr,\n            pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function chartHasMapZoom(chart) {\n            return !!((chart.mapView) &&\n                chart.mapNavigation &&\n                chart.mapNavigation.navButtons.length);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ZoomComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.ZoomComponent\n         */\n        var ZoomComponent = /** @class */ (function (_super) {\n                __extends(ZoomComponent, _super);\n            function ZoomComponent() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.focusedMapNavButtonIx = -1;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the component\n             */\n            ZoomComponent.prototype.init = function () {\n                var component = this,\n                    chart = this.chart;\n                this.proxyProvider.addGroup('zoom', 'div');\n                [\n                    'afterShowResetZoom', 'afterApplyDrilldown', 'drillupall'\n                ].forEach(function (eventType) {\n                    component.addEvent(chart, eventType, function () {\n                        component.updateProxyOverlays();\n                    });\n                });\n            };\n            /**\n             * Called when chart is updated\n             */\n            ZoomComponent.prototype.onChartUpdate = function () {\n                var chart = this.chart,\n                    component = this;\n                // Make map zoom buttons accessible\n                if (chart.mapNavigation) {\n                    chart.mapNavigation.navButtons.forEach(function (button, i) {\n                        unhideChartElementFromAT(chart, button.element);\n                        component.setMapNavButtonAttrs(button.element, 'accessibility.zoom.mapZoom' + (i ? 'Out' : 'In'));\n                    });\n                }\n            };\n            /**\n             * @private\n             * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} button\n             * @param {string} labelFormatKey\n             */\n            ZoomComponent.prototype.setMapNavButtonAttrs = function (button, labelFormatKey) {\n                var chart = this.chart,\n                    label = chart.langFormat(labelFormatKey, { chart: chart });\n                attr(button, {\n                    tabindex: -1,\n                    role: 'button',\n                    'aria-label': label\n                });\n            };\n            /**\n             * Update the proxy overlays on every new render to ensure positions are\n             * correct.\n             */\n            ZoomComponent.prototype.onChartRender = function () {\n                this.updateProxyOverlays();\n            };\n            /**\n             * Update proxy overlays, recreating the buttons.\n             */\n            ZoomComponent.prototype.updateProxyOverlays = function () {\n                var chart = this.chart;\n                // Always start with a clean slate\n                this.proxyProvider.clearGroup('zoom');\n                if (chart.resetZoomButton) {\n                    this.createZoomProxyButton(chart.resetZoomButton, 'resetZoomProxyButton', chart.langFormat('accessibility.zoom.resetZoomButton', { chart: chart }));\n                }\n                if (chart.drillUpButton &&\n                    chart.breadcrumbs &&\n                    chart.breadcrumbs.list) {\n                    var lastBreadcrumb = chart.breadcrumbs.list[chart.breadcrumbs.list.length - 1];\n                    this.createZoomProxyButton(chart.drillUpButton, 'drillUpProxyButton', chart.langFormat('accessibility.drillUpButton', {\n                        chart: chart,\n                        buttonText: chart.breadcrumbs.getButtonText(lastBreadcrumb)\n                    }));\n                }\n            };\n            /**\n             * @private\n             * @param {Highcharts.SVGElement} buttonEl\n             * @param {string} buttonProp\n             * @param {string} label\n             */\n            ZoomComponent.prototype.createZoomProxyButton = function (buttonEl, buttonProp, label) {\n                this[buttonProp] = this.proxyProvider.addProxyElement('zoom', {\n                    click: buttonEl\n                }, {\n                    'aria-label': label,\n                    tabindex: -1\n                });\n            };\n            /**\n             * Get keyboard navigation handler for map zoom.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object\n             */\n            ZoomComponent.prototype.getMapZoomNavigation = function () {\n                var keys = this.keyCodes,\n                    chart = this.chart,\n                    component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.up, keys.down, keys.left, keys.right],\n                            function (keyCode) {\n                                return component.onMapKbdArrow(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.tab],\n                            function (_keyCode, e) {\n                                return component.onMapKbdTab(this, e);\n                            }\n                        ],\n                        [\n                            [keys.space, keys.enter],\n                            function () {\n                                return component.onMapKbdClick(this);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return chartHasMapZoom(chart);\n                    },\n                    init: function (direction) {\n                        return component.onMapNavInit(direction);\n                    }\n                });\n            };\n            /**\n             * Arrow key panning for maps.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler The handler context.\n             * @param {number} keyCode Key pressed.\n             * @return {number} Response code\n             */\n            ZoomComponent.prototype.onMapKbdArrow = function (keyboardNavigationHandler, keyCode) {\n                var chart = this.chart,\n                    keys = this.keyCodes,\n                    target = chart.container,\n                    isY = keyCode === keys.up || keyCode === keys.down,\n                    stepDirection = (keyCode === keys.left || keyCode === keys.up) ?\n                        1 : -1,\n                    granularity = 10,\n                    diff = (isY ? chart.plotHeight : chart.plotWidth) /\n                        granularity * stepDirection, \n                    // Randomize since same mousedown coords twice is ignored in MapView\n                    r = Math.random() * 10,\n                    startPos = {\n                        x: target.offsetLeft + chart.plotLeft + chart.plotWidth / 2 + r,\n                        y: target.offsetTop + chart.plotTop + chart.plotHeight / 2 + r\n                    },\n                    endPos = isY ? { x: startPos.x,\n                    y: startPos.y + diff } :\n                        { x: startPos.x + diff,\n                    y: startPos.y };\n                [\n                    getFakeMouseEvent('mousedown', startPos),\n                    getFakeMouseEvent('mousemove', endPos),\n                    getFakeMouseEvent('mouseup', endPos)\n                ].forEach(function (e) { return target.dispatchEvent(e); });\n                return keyboardNavigationHandler.response.success;\n            };\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @param {global.KeyboardEvent} event\n             * @return {number} Response code\n             */\n            ZoomComponent.prototype.onMapKbdTab = function (keyboardNavigationHandler, event) {\n                var chart = this.chart;\n                var response = keyboardNavigationHandler.response;\n                var isBackwards = event.shiftKey;\n                var isMoveOutOfRange = isBackwards && !this.focusedMapNavButtonIx ||\n                        !isBackwards && this.focusedMapNavButtonIx;\n                // Deselect old\n                chart.mapNavigation.navButtons[this.focusedMapNavButtonIx].setState(0);\n                if (isMoveOutOfRange) {\n                    if (chart.mapView) {\n                        chart.mapView.zoomBy(); // Reset zoom\n                    }\n                    return response[isBackwards ? 'prev' : 'next'];\n                }\n                // Select other button\n                this.focusedMapNavButtonIx += isBackwards ? -1 : 1;\n                var button = chart.mapNavigation.navButtons[this.focusedMapNavButtonIx];\n                chart.setFocusToElement(button.box, button.element);\n                button.setState(2);\n                return response.success;\n            };\n            /**\n             * Called on map button click.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler The handler context object\n             * @return {number} Response code\n             */\n            ZoomComponent.prototype.onMapKbdClick = function (keyboardNavigationHandler) {\n                var el = this.chart.mapNavigation.navButtons[this.focusedMapNavButtonIx].element;\n                this.fakeClickEvent(el);\n                return keyboardNavigationHandler.response.success;\n            };\n            /**\n             * @private\n             * @param {number} direction\n             */\n            ZoomComponent.prototype.onMapNavInit = function (direction) {\n                var chart = this.chart,\n                    zoomIn = chart.mapNavigation.navButtons[0],\n                    zoomOut = chart.mapNavigation.navButtons[1],\n                    initialButton = direction > 0 ? zoomIn : zoomOut;\n                chart.setFocusToElement(initialButton.box, initialButton.element);\n                initialButton.setState(2);\n                this.focusedMapNavButtonIx = direction > 0 ? 0 : 1;\n            };\n            /**\n             * Get keyboard navigation handler for a simple chart button. Provide the\n             * button reference for the chart, and a function to call on click.\n             *\n             * @private\n             * @param {string} buttonProp The property on chart referencing the button.\n             * @return {Highcharts.KeyboardNavigationHandler} The module object\n             */\n            ZoomComponent.prototype.simpleButtonNavigation = function (buttonProp, proxyProp, onClick) {\n                var keys = this.keyCodes,\n                    component = this,\n                    chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.tab, keys.up, keys.down, keys.left, keys.right],\n                            function (keyCode, e) {\n                                var isBackwards = (keyCode === keys.tab && e.shiftKey ||\n                                        keyCode === keys.left ||\n                                        keyCode === keys.up);\n                                // Arrow/tab => just move\n                                return this.response[isBackwards ? 'prev' : 'next'];\n                            }\n                        ],\n                        [\n                            [keys.space, keys.enter],\n                            function () {\n                                var res = onClick(this,\n                                    chart);\n                                return pick(res, this.response.success);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        var hasButton = (chart[buttonProp] &&\n                                chart[buttonProp].box &&\n                                component[proxyProp].buttonElement);\n                        return hasButton;\n                    },\n                    init: function () {\n                        chart.setFocusToElement(chart[buttonProp].box, component[proxyProp].buttonElement);\n                    }\n                });\n            };\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects\n             */\n            ZoomComponent.prototype.getKeyboardNavigation = function () {\n                return [\n                    this.simpleButtonNavigation('resetZoomButton', 'resetZoomProxyButton', function (_handler, chart) {\n                        chart.zoomOut();\n                    }),\n                    this.simpleButtonNavigation('drillUpButton', 'drillUpProxyButton', function (handler, chart) {\n                        chart.drillUp();\n                        return handler.response.prev;\n                    }),\n                    this.getMapZoomNavigation()\n                ];\n            };\n            return ZoomComponent;\n        }(AccessibilityComponent));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ZoomComponent;\n    });\n    _registerModule(_modules, 'Accessibility/HighContrastMode.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Handling for Windows High Contrast Mode.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc,\n            isMS = H.isMS,\n            win = H.win;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Detect WHCM in the browser.\n         *\n         * @function Highcharts#isHighContrastModeActive\n         * @private\n         * @return {boolean} Returns true if the browser is in High Contrast mode.\n         */\n        function isHighContrastModeActive() {\n            // Use media query on Edge, but not on IE\n            var isEdge = /(Edg)/.test(win.navigator.userAgent);\n            if (win.matchMedia && isEdge) {\n                return win.matchMedia('(-ms-high-contrast: active)').matches;\n            }\n            // Test BG image for IE\n            if (isMS && win.getComputedStyle) {\n                var testDiv = doc.createElement('div');\n                var imageSrc = 'data:image/gif;base64,' +\n                        'R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==';\n                testDiv.style.backgroundImage = \"url(\".concat(imageSrc, \")\"); // #13071\n                doc.body.appendChild(testDiv);\n                var bi = (testDiv.currentStyle ||\n                        win.getComputedStyle(testDiv)).backgroundImage;\n                doc.body.removeChild(testDiv);\n                return bi === 'none';\n            }\n            // Other browsers use the forced-colors standard\n            return win.matchMedia && win.matchMedia('(forced-colors: active)').matches;\n        }\n        /**\n         * Force high contrast theme for the chart. The default theme is defined in\n         * a separate file.\n         *\n         * @function Highcharts#setHighContrastTheme\n         * @private\n         * @param {Highcharts.AccessibilityChart} chart The chart to set the theme of.\n         * @return {void}\n         */\n        function setHighContrastTheme(chart) {\n            // We might want to add additional functionality here in the future for\n            // storing the old state so that we can reset the theme if HC mode is\n            // disabled. For now, the user will have to reload the page.\n            chart.highContrastModeActive = true;\n            // Apply theme to chart\n            var theme = (chart.options.accessibility.highContrastTheme);\n            chart.update(theme, false);\n            // Force series colors (plotOptions is not enough)\n            chart.series.forEach(function (s) {\n                var plotOpts = theme.plotOptions[s.type] || {};\n                s.update({\n                    color: plotOpts.color || 'windowText',\n                    colors: [plotOpts.color || 'windowText'],\n                    borderColor: plotOpts.borderColor || 'window'\n                });\n                // Force point colors if existing\n                s.points.forEach(function (p) {\n                    if (p.options && p.options.color) {\n                        p.update({\n                            color: plotOpts.color || 'windowText',\n                            borderColor: plotOpts.borderColor || 'window'\n                        }, false);\n                    }\n                });\n            });\n            // The redraw for each series and after is required for 3D pie\n            // (workaround)\n            chart.redraw();\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var whcm = {\n                isHighContrastModeActive: isHighContrastModeActive,\n                setHighContrastTheme: setHighContrastTheme\n            };\n\n        return whcm;\n    });\n    _registerModule(_modules, 'Accessibility/HighContrastTheme.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Default theme for Windows High Contrast Mode.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Theme\n         *\n         * */\n        var theme = {\n                chart: {\n                    backgroundColor: 'window'\n                },\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                subtitle: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                colorAxis: {\n                    minColor: 'windowText',\n                    maxColor: 'windowText',\n                    stops: []\n                },\n                colors: ['windowText'],\n                xAxis: {\n                    gridLineColor: 'windowText',\n                    labels: {\n                        style: {\n                            color: 'windowText'\n                        }\n                    },\n                    lineColor: 'windowText',\n                    minorGridLineColor: 'windowText',\n                    tickColor: 'windowText',\n                    title: {\n                        style: {\n                            color: 'windowText'\n                        }\n                    }\n                },\n                yAxis: {\n                    gridLineColor: 'windowText',\n                    labels: {\n                        style: {\n                            color: 'windowText'\n                        }\n                    },\n                    lineColor: 'windowText',\n                    minorGridLineColor: 'windowText',\n                    tickColor: 'windowText',\n                    title: {\n                        style: {\n                            color: 'windowText'\n                        }\n                    }\n                },\n                tooltip: {\n                    backgroundColor: 'window',\n                    borderColor: 'windowText',\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                plotOptions: {\n                    series: {\n                        lineColor: 'windowText',\n                        fillColor: 'window',\n                        borderColor: 'windowText',\n                        edgeColor: 'windowText',\n                        borderWidth: 1,\n                        dataLabels: {\n                            connectorColor: 'windowText',\n                            color: 'windowText',\n                            style: {\n                                color: 'windowText',\n                                textOutline: 'none'\n                            }\n                        },\n                        marker: {\n                            lineColor: 'windowText',\n                            fillColor: 'windowText'\n                        }\n                    },\n                    pie: {\n                        color: 'window',\n                        colors: ['window'],\n                        borderColor: 'windowText',\n                        borderWidth: 1\n                    },\n                    boxplot: {\n                        fillColor: 'window'\n                    },\n                    candlestick: {\n                        lineColor: 'windowText',\n                        fillColor: 'window'\n                    },\n                    errorbar: {\n                        fillColor: 'window'\n                    }\n                },\n                legend: {\n                    backgroundColor: 'window',\n                    itemStyle: {\n                        color: 'windowText'\n                    },\n                    itemHoverStyle: {\n                        color: 'windowText'\n                    },\n                    itemHiddenStyle: {\n                        color: '#555'\n                    },\n                    title: {\n                        style: {\n                            color: 'windowText'\n                        }\n                    }\n                },\n                credits: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                labels: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                drilldown: {\n                    activeAxisLabelStyle: {\n                        color: 'windowText'\n                    },\n                    activeDataLabelStyle: {\n                        color: 'windowText'\n                    }\n                },\n                navigation: {\n                    buttonOptions: {\n                        symbolStroke: 'windowText',\n                        theme: {\n                            fill: 'window'\n                        }\n                    }\n                },\n                rangeSelector: {\n                    buttonTheme: {\n                        fill: 'window',\n                        stroke: 'windowText',\n                        style: {\n                            color: 'windowText'\n                        },\n                        states: {\n                            hover: {\n                                fill: 'window',\n                                stroke: 'windowText',\n                                style: {\n                                    color: 'windowText'\n                                }\n                            },\n                            select: {\n                                fill: '#444',\n                                stroke: 'windowText',\n                                style: {\n                                    color: 'windowText'\n                                }\n                            }\n                        }\n                    },\n                    inputBoxBorderColor: 'windowText',\n                    inputStyle: {\n                        backgroundColor: 'window',\n                        color: 'windowText'\n                    },\n                    labelStyle: {\n                        color: 'windowText'\n                    }\n                },\n                navigator: {\n                    handles: {\n                        backgroundColor: 'window',\n                        borderColor: 'windowText'\n                    },\n                    outlineColor: 'windowText',\n                    maskFill: 'transparent',\n                    series: {\n                        color: 'windowText',\n                        lineColor: 'windowText'\n                    },\n                    xAxis: {\n                        gridLineColor: 'windowText'\n                    }\n                },\n                scrollbar: {\n                    barBackgroundColor: '#444',\n                    barBorderColor: 'windowText',\n                    buttonArrowColor: 'windowText',\n                    buttonBackgroundColor: 'window',\n                    buttonBorderColor: 'windowText',\n                    rifleColor: 'windowText',\n                    trackBackgroundColor: 'window',\n                    trackBorderColor: 'windowText'\n                }\n            };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return theme;\n    });\n    _registerModule(_modules, 'Accessibility/Options/A11yDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Default options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Formatter callback for the accessibility announcement.\n         *\n         * @callback Highcharts.AccessibilityAnnouncementFormatter\n         *\n         * @param {Array<Highcharts.Series>} updatedSeries\n         * Array of all series that received updates. If an announcement is already\n         * queued, the series that received updates for that announcement are also\n         * included in this array.\n         *\n         * @param {Highcharts.Series} [addedSeries]\n         * This is provided if {@link Highcharts.Chart#addSeries} was called, and there\n         * is a new series. In that case, this argument is a reference to the new\n         * series.\n         *\n         * @param {Highcharts.Point} [addedPoint]\n         * This is provided if {@link Highcharts.Series#addPoint} was called, and there\n         * is a new point. In that case, this argument is a reference to the new point.\n         *\n         * @return {false|string}\n         * The function should return a string with the text to announce to the user.\n         * Return empty string to not announce anything. Return `false` to use the\n         * default announcement format.\n         */\n        /**\n         * @interface Highcharts.PointAccessibilityOptionsObject\n         */ /**\n        * Provide a description of the data point, announced to screen readers.\n        * @name Highcharts.PointAccessibilityOptionsObject#description\n        * @type {string|undefined}\n        * @requires modules/accessibility\n        * @since 7.1.0\n        */ /**\n        * Enable or disable exposing the point to assistive technology\n        * @name Highcharts.PointAccessibilityOptionsObject#enabled\n        * @type {boolean|undefined}\n        * @requires modules/accessibility\n        * @since 9.0.1\n        */\n        /* *\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * @name Highcharts.PointOptionsObject#accessibility\n        * @type {Highcharts.PointAccessibilityOptionsObject|undefined}\n        * @requires modules/accessibility\n        * @since 7.1.0\n        */\n        /**\n         * @callback Highcharts.ScreenReaderClickCallbackFunction\n         *\n         * @param {global.MouseEvent} evt\n         *        Mouse click event\n         *\n         * @return {void}\n         */\n        /**\n         * Creates a formatted string for the screen reader module.\n         *\n         * @callback Highcharts.ScreenReaderFormatterCallbackFunction<T>\n         *\n         * @param {T} context\n         *        Context to format\n         *\n         * @return {string}\n         *         Formatted string for the screen reader module.\n         */\n        var Options = {\n                /**\n                 * Options for configuring accessibility for the chart. Requires the\n                 * [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n                 * to be loaded. For a description of the module and information\n                 * on its features, see\n                 * [Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).\n                 *\n                 * @since        5.0.0\n                 * @requires     modules/accessibility\n                 * @optionparent accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility functionality for the chart. For more\n                     * information on how to include these features, and why this is\n                     * recommended, see [Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).\n                     *\n                     * Highcharts will by default emit a warning to the console if\n                     * the [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n                     * is not loaded. Setting this option to `false` will override\n                     * and silence the warning.\n                     *\n                     * Once the module is loaded, setting this option to `false`\n                     * will disable the module for this chart.\n                     *\n                     * @since 5.0.0\n                     */\n                    enabled: true,\n                    /**\n                     * Accessibility options for the screen reader information sections\n                     * added before and after the chart.\n                     *\n                     * @since 8.0.0\n                     */\n                    screenReaderSection: {\n                        /**\n                         * Function to run upon clicking the \"View as Data Table\" link in\n                         * the screen reader region.\n                         *\n                         * By default Highcharts will insert and set focus to a data table\n                         * representation of the chart.\n                         *\n                         * @type      {Highcharts.ScreenReaderClickCallbackFunction}\n                         * @since 8.0.0\n                         * @apioption accessibility.screenReaderSection.onViewDataTableClick\n                         */\n                        /**\n                         * Function to run upon clicking the \"Play as sound\" button in\n                         * the screen reader region.\n                         *\n                         * By default Highcharts will call the `chart.sonify` function.\n                         *\n                         * @type      {Highcharts.ScreenReaderClickCallbackFunction}\n                         * @since 8.0.1\n                         * @apioption accessibility.screenReaderSection.onPlayAsSoundClick\n                         */\n                        /**\n                         * A formatter function to create the HTML contents of the hidden\n                         * screen reader information region before the chart. Receives one\n                         * argument, `chart`, referring to the chart object. Should return a\n                         * string with the HTML content of the region. By default this\n                         * returns an automatic description of the chart based on\n                         * [beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).\n                         *\n                         * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Chart>}\n                         * @since 8.0.0\n                         * @apioption accessibility.screenReaderSection.beforeChartFormatter\n                         */\n                        /**\n                         * Format for the screen reader information region before the chart.\n                         * Supported HTML tags are `<h1-6>`, `<p>`, `<div>`, `<a>`, `<ul>`,\n                         * `<ol>`, `<li>`, and `<button>`. Attributes are not supported,\n                         * except for id on `<div>`, `<a>`, and `<button>`. Id is required\n                         * on `<a>` and `<button>` in the format `<tag id=\"abcd\">`. Numbers,\n                         * lower- and uppercase letters, \"-\" and \"#\" are valid characters in\n                         * IDs.\n                         *\n                         * The headingTagName is an auto-detected heading (h1-h6) that\n                         * corresponds to the heading level below the previous heading in\n                         * the DOM.\n                         *\n                         * Set to empty string to remove the region altogether.\n                         *\n                         * @since 8.0.0\n                         */\n                        beforeChartFormat: '<{headingTagName}>{chartTitle}</{headingTagName}>' +\n                            '<div>{typeDescription}</div>' +\n                            '<div>{chartSubtitle}</div>' +\n                            '<div>{chartLongdesc}</div>' +\n                            '<div>{playAsSoundButton}</div>' +\n                            '<div>{viewTableButton}</div>' +\n                            '<div>{xAxisDescription}</div>' +\n                            '<div>{yAxisDescription}</div>' +\n                            '<div>{annotationsTitle}{annotationsList}</div>',\n                        /**\n                         * A formatter function to create the HTML contents of the hidden\n                         * screen reader information region after the chart. Analogous to\n                         * [beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).\n                         *\n                         * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Chart>}\n                         * @since 8.0.0\n                         * @apioption accessibility.screenReaderSection.afterChartFormatter\n                         */\n                        /**\n                         * Format for the screen reader information region after the chart.\n                         * Analogous to [beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).\n                         *\n                         * @since 8.0.0\n                         */\n                        afterChartFormat: '{endOfChartMarker}',\n                        /**\n                         * Date format to use to describe range of datetime axes.\n                         *\n                         * For an overview of the replacement codes, see\n                         * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                         *\n                         * @see [point.dateFormat](#accessibility.point.dateFormat)\n                         *\n                         * @since 8.0.0\n                         */\n                        axisRangeDateFormat: '%Y-%m-%d %H:%M:%S'\n                    },\n                    /**\n                     * Accessibility options global to all data series. Individual series\n                     * can also have specific [accessibility options](#plotOptions.series.accessibility)\n                     * set.\n                     *\n                     * @since 8.0.0\n                     */\n                    series: {\n                        /**\n                         * Formatter function to use instead of the default for series\n                         * descriptions. Receives one argument, `series`, referring to the\n                         * series to describe. Should return a string with the description\n                         * of the series for a screen reader user. If `false` is returned,\n                         * the default formatter will be used for that series.\n                         *\n                         * @see [series.descriptionFormat](#accessibility.series.descriptionFormat)\n                         * @see [series.description](#plotOptions.series.description)\n                         *\n                         * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Series>}\n                         * @since 8.0.0\n                         * @apioption accessibility.series.descriptionFormatter\n                         */\n                        /**\n                         * Format to use for describing the data series group to assistive\n                         * technology - including screen readers.\n                         *\n                         * The series context and its subproperties are available under the\n                         * variable `{series}`, for example `{series.name}` for the series\n                         * name, and `{series.points.length}` for the number of data points.\n                         *\n                         * The chart context and its subproperties are available under the\n                         * variable `{chart}`, for example `{chart.series.length}` for the\n                         * number of series in the chart.\n                         *\n                         * `{seriesDescription}` refers to the automatic description of the\n                         * series type and number of points added by Highcharts by default.\n                         * `{authorDescription}` refers to the description added in\n                         * [series.description](#plotOptions.series.description) if one is\n                         * present. `{axisDescription}` refers to the description added if\n                         * the chart has multiple X or Y axes.\n                         *\n                         * Note that if [series.descriptionFormatter](#accessibility.series.descriptionFormatter)\n                         * is declared it will take precedence, and this option will be\n                         * overridden.\n                         *\n                         * @sample highcharts/accessibility/advanced-accessible\n                         *  Accessible low-medium-high chart\n                         *\n                         * @type      {string}\n                         * @since 10.1.0\n                         */\n                        descriptionFormat: '{seriesDescription}{authorDescription}{axisDescription}',\n                        /**\n                         * Whether or not to add series descriptions to charts with a single\n                         * series.\n                         *\n                         * @since 8.0.0\n                         */\n                        describeSingleSeries: false,\n                        /**\n                         * When a series contains more points than this, we no longer expose\n                         * information about individual points to screen readers.\n                         *\n                         * Set to `false` to disable.\n                         *\n                         * @type  {boolean|number}\n                         * @since 8.0.0\n                         */\n                        pointDescriptionEnabledThreshold: 200\n                    },\n                    /**\n                     * Options for descriptions of individual data points.\n                     *\n                     * @since 8.0.0\n                     */\n                    point: {\n                        /**\n                         * Date format to use for points on datetime axes when describing\n                         * them to screen reader users.\n                         *\n                         * Defaults to the same format as in tooltip.\n                         *\n                         * For an overview of the replacement codes, see\n                         * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                         *\n                         * @see [dateFormatter](#accessibility.point.dateFormatter)\n                         *\n                         * @type      {string}\n                         * @since 8.0.0\n                         * @apioption accessibility.point.dateFormat\n                         */\n                        /**\n                         * Formatter function to determine the date/time format used with\n                         * points on datetime axes when describing them to screen reader\n                         * users. Receives one argument, `point`, referring to the point\n                         * to describe. Should return a date format string compatible with\n                         * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                         *\n                         * @see [dateFormat](#accessibility.point.dateFormat)\n                         *\n                         * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n                         * @since 8.0.0\n                         * @apioption accessibility.point.dateFormatter\n                         */\n                        /**\n                         * Prefix to add to the values in the point descriptions. Uses\n                         * [tooltip.valuePrefix](#tooltip.valuePrefix) if not defined.\n                         *\n                         * @type        {string}\n                         * @since 8.0.0\n                         * @apioption   accessibility.point.valuePrefix\n                         */\n                        /**\n                         * Suffix to add to the values in the point descriptions. Uses\n                         * [tooltip.valueSuffix](#tooltip.valueSuffix) if not defined.\n                         *\n                         * @type        {string}\n                         * @since 8.0.0\n                         * @apioption   accessibility.point.valueSuffix\n                         */\n                        /**\n                         * Decimals to use for the values in the point descriptions. Uses\n                         * [tooltip.valueDecimals](#tooltip.valueDecimals) if not defined.\n                         *\n                         * @type        {number}\n                         * @since 8.0.0\n                         * @apioption   accessibility.point.valueDecimals\n                         */\n                        /**\n                         * Formatter function to use instead of the default for point\n                         * descriptions.\n                         *\n                         * Receives one argument, `point`, referring to the point to\n                         * describe. Should return a string with the description of the\n                         * point for a screen reader user. If `false` is returned, the\n                         * default formatter will be used for that point.\n                         *\n                         * Note: Prefer using [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)\n                         * instead if possible, as default functionality such as describing\n                         * annotations will be preserved.\n                         *\n                         * @see [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)\n                         * @see [point.accessibility.description](#series.line.data.accessibility.description)\n                         *\n                         * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n                         * @since 8.0.0\n                         * @apioption accessibility.point.descriptionFormatter\n                         */\n                        /**\n                         * Format to use for describing the values of data points\n                         * to assistive technology - including screen readers.\n                         * The point context is available as `{point}`.\n                         *\n                         * Other available context variables include `{index}`, `{value}`, and `{xDescription}`.\n                         *\n                         * Additionally, the series name, annotation info, and\n                         * description added in `point.accessibility.description`\n                         * is added by default if relevant. To override this, use the\n                         * [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n                         * option.\n                         *\n                         * @see [point.accessibility.description](#series.line.data.accessibility.description)\n                         * @see [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n                         *\n                         * @type      {string}\n                         * @since 8.0.1\n                         */\n                        valueDescriptionFormat: '{xDescription}{separator}{value}.',\n                        /**\n                         * Whether or not to describe points with the value `null` to\n                         * assistive technology, such as screen readers.\n                         *\n                         * @sample {highmaps} maps/demo/all-areas-as-null\n                         *         Accessible map with null points\n                         *\n                         * @type      {boolean}\n                         * @since 10.1.0\n                         */\n                        describeNull: true\n                    },\n                    /**\n                     * Amount of landmarks/regions to create for screen reader users. More\n                     * landmarks can make navigation with screen readers easier, but can\n                     * be distracting if there are lots of charts on the page. Three modes\n                     * are available:\n                     *  - `all`: Adds regions for all series, legend, information\n                     *      region.\n                     *  - `one`: Adds a single landmark per chart.\n                     *  - `disabled`: No landmarks are added.\n                     *\n                     * @since 7.1.0\n                     * @validvalue [\"all\", \"one\", \"disabled\"]\n                     */\n                    landmarkVerbosity: 'all',\n                    /**\n                     * Link the chart to an HTML element describing the contents of the\n                     * chart.\n                     *\n                     * It is always recommended to describe charts using visible text, to\n                     * improve SEO as well as accessibility for users with disabilities.\n                     * This option lets an HTML element with a description be linked to the\n                     * chart, so that screen reader users can connect the two.\n                     *\n                     * By setting this option to a string, Highcharts runs the string as an\n                     * HTML selector query on the entire document. If there is only a single\n                     * match, this element is linked to the chart. The content of the linked\n                     * element will be included in the chart description for screen reader\n                     * users.\n                     *\n                     * By default, the chart looks for an adjacent sibling element with the\n                     * `highcharts-description` class.\n                     *\n                     * The feature can be disabled by setting the option to an empty string,\n                     * or overridden by providing the\n                     * [accessibility.description](#accessibility.description) option.\n                     * Alternatively, the HTML element to link can be passed in directly as\n                     * an HTML node.\n                     *\n                     * If you need the description to be part of the exported image,\n                     * consider using the [caption](#caption) feature.\n                     *\n                     * If you need the description to be hidden visually, use the\n                     * [accessibility.description](#accessibility.description) option.\n                     *\n                     * @see [caption](#caption)\n                     * @see [description](#accessibility.description)\n                     * @see [typeDescription](#accessibility.typeDescription)\n                     *\n                     * @sample highcharts/accessibility/accessible-line\n                     *         Accessible line chart\n                     *\n                     * @type  {string|Highcharts.HTMLDOMElement}\n                     * @since 8.0.0\n                     */\n                    linkedDescription: '*[data-highcharts-chart=\"{index}\"] + .highcharts-description',\n                    /**\n                     * A hook for adding custom components to the accessibility module.\n                     * Should be an object mapping component names to instances of classes\n                     * inheriting from the Highcharts.AccessibilityComponent base class.\n                     * Remember to add the component to the\n                     * [keyboardNavigation.order](#accessibility.keyboardNavigation.order)\n                     * for the keyboard navigation to be usable.\n                     *\n                     * @sample highcharts/accessibility/custom-component\n                     *         Custom accessibility component\n                     *\n                     * @type      {*}\n                     * @since     7.1.0\n                     * @apioption accessibility.customComponents\n                     */\n                    /**\n                     * Theme to apply to the chart when Windows High Contrast Mode is\n                     * detected. By default, a high contrast theme matching the high\n                     * contrast system system colors is used.\n                     *\n                     * @type      {*}\n                     * @since     7.1.3\n                     * @apioption accessibility.highContrastTheme\n                     */\n                    /**\n                     * A text description of the chart.\n                     *\n                     * **Note: Prefer using [linkedDescription](#accessibility.linkedDescription)\n                     * or [caption](#caption.text) instead.**\n                     *\n                     * If the Accessibility module is loaded, this option is included by\n                     * default as a long description of the chart in the hidden screen\n                     * reader information region.\n                     *\n                     * Note: Since Highcharts now supports captions and linked descriptions,\n                     * it is preferred to define the description using those methods, as a\n                     * visible caption/description benefits all users. If the\n                     * `accessibility.description` option is defined, the linked description\n                     * is ignored, and the caption is hidden from screen reader users.\n                     *\n                     * @see [linkedDescription](#accessibility.linkedDescription)\n                     * @see [caption](#caption)\n                     * @see [typeDescription](#accessibility.typeDescription)\n                     *\n                     * @type      {string}\n                     * @since     5.0.0\n                     * @apioption accessibility.description\n                     */\n                    /**\n                     * A text description of the chart type.\n                     *\n                     * If the Accessibility module is loaded, this will be included in the\n                     * description of the chart in the screen reader information region.\n                     *\n                     * Highcharts will by default attempt to guess the chart type, but for\n                     * more complex charts it is recommended to specify this property for\n                     * clarity.\n                     *\n                     * @type      {string}\n                     * @since     5.0.0\n                     * @apioption accessibility.typeDescription\n                     */\n                    /**\n                     * Options for keyboard navigation.\n                     *\n                     * @declare Highcharts.KeyboardNavigationOptionsObject\n                     * @since   5.0.0\n                     */\n                    keyboardNavigation: {\n                        /**\n                         * Enable keyboard navigation for the chart.\n                         *\n                         * @since 5.0.0\n                         */\n                        enabled: true,\n                        /**\n                         * Options for the focus border drawn around elements while\n                         * navigating through them.\n                         *\n                         * @sample highcharts/accessibility/custom-focus\n                         *         Custom focus ring\n                         *\n                         * @declare Highcharts.KeyboardNavigationFocusBorderOptionsObject\n                         * @since   6.0.3\n                         */\n                        focusBorder: {\n                            /**\n                             * Enable/disable focus border for chart.\n                             *\n                             * @since 6.0.3\n                             */\n                            enabled: true,\n                            /**\n                             * Hide the browser's default focus indicator.\n                             *\n                             * @since 6.0.4\n                             */\n                            hideBrowserFocusOutline: true,\n                            /**\n                             * Style options for the focus border drawn around elements\n                             * while navigating through them. Note that some browsers in\n                             * addition draw their own borders for focused elements. These\n                             * automatic borders cannot be styled by Highcharts.\n                             *\n                             * In styled mode, the border is given the\n                             * `.highcharts-focus-border` class.\n                             *\n                             * @type    {Highcharts.CSSObject}\n                             * @since   6.0.3\n                             */\n                            style: {\n                                /** @internal */\n                                color: \"#335cad\" /* Palette.highlightColor80 */,\n                                /** @internal */\n                                lineWidth: 2,\n                                /** @internal */\n                                borderRadius: 3\n                            },\n                            /**\n                             * Focus border margin around the elements.\n                             *\n                             * @since 6.0.3\n                             */\n                            margin: 2\n                        },\n                        /**\n                         * Order of tab navigation in the chart. Determines which elements\n                         * are tabbed to first. Available elements are: `series`, `zoom`,\n                         * `rangeSelector`, `chartMenu`, `legend` and `container`. In\n                         * addition, any custom components can be added here. Adding\n                         * `container` first in order will make the keyboard focus stop on\n                         * the chart container first, requiring the user to tab again to\n                         * enter the chart.\n                         *\n                         * @type  {Array<string>}\n                         * @since 7.1.0\n                         */\n                        order: ['series', 'zoom', 'rangeSelector', 'legend', 'chartMenu'],\n                        /**\n                         * Whether or not to wrap around when reaching the end of arrow-key\n                         * navigation for an element in the chart.\n                         * @since 7.1.0\n                         */\n                        wrapAround: true,\n                        /**\n                         * Options for the keyboard navigation of data points and series.\n                         *\n                         * @declare Highcharts.KeyboardNavigationSeriesNavigationOptionsObject\n                         * @since 8.0.0\n                         */\n                        seriesNavigation: {\n                            /**\n                             * Set the keyboard navigation mode for the chart. Can be\n                             * \"normal\" or \"serialize\". In normal mode, left/right arrow\n                             * keys move between points in a series, while up/down arrow\n                             * keys move between series. Up/down navigation acts\n                             * intelligently to figure out which series makes sense to move\n                             * to from any given point.\n                             *\n                             * In \"serialize\" mode, points are instead navigated as a single\n                             * list. Left/right behaves as in \"normal\" mode. Up/down arrow\n                             * keys will behave like left/right. This can be useful for\n                             * unifying navigation behavior with/without screen readers\n                             * enabled.\n                             *\n                             * @type       {string}\n                             * @default    normal\n                             * @since 8.0.0\n                             * @validvalue [\"normal\", \"serialize\"]\n                             * @apioption  accessibility.keyboardNavigation.seriesNavigation.mode\n                             */\n                            /**\n                             * Skip null points when navigating through points with the\n                             * keyboard.\n                             *\n                             * @since 8.0.0\n                             */\n                            skipNullPoints: true,\n                            /**\n                             * When a series contains more points than this, we no longer\n                             * allow keyboard navigation for it.\n                             *\n                             * Set to `false` to disable.\n                             *\n                             * @type  {boolean|number}\n                             * @since 8.0.0\n                             */\n                            pointNavigationEnabledThreshold: false,\n                            /**\n                             * Remember which point was focused even after navigating away\n                             * from the series, so that when navigating back to the series\n                             * you start at the last focused point.\n                             *\n                             * @type  {boolean}\n                             * @since 10.1.0\n                             */\n                            rememberPointFocus: false\n                        }\n                    },\n                    /**\n                     * Options for announcing new data to screen reader users. Useful\n                     * for dynamic data applications and drilldown.\n                     *\n                     * Keep in mind that frequent announcements will not be useful to\n                     * users, as they won't have time to explore the new data. For these\n                     * applications, consider making snapshots of the data accessible, and\n                     * do the announcements in batches.\n                     *\n                     * @declare Highcharts.AccessibilityAnnounceNewDataOptionsObject\n                     * @since   7.1.0\n                     */\n                    announceNewData: {\n                        /**\n                         * Optional formatter callback for the announcement. Receives\n                         * up to three arguments. The first argument is always an array\n                         * of all series that received updates. If an announcement is\n                         * already queued, the series that received updates for that\n                         * announcement are also included in this array. The second\n                         * argument is provided if `chart.addSeries` was called, and\n                         * there is a new series. In that case, this argument is a\n                         * reference to the new series. The third argument, similarly,\n                         * is provided if `series.addPoint` was called, and there is a\n                         * new point. In that case, this argument is a reference to the\n                         * new point.\n                         *\n                         * The function should return a string with the text to announce\n                         * to the user. Return empty string to not announce anything.\n                         * Return `false` to use the default announcement format.\n                         *\n                         * @sample highcharts/accessibility/custom-dynamic\n                         *         High priority live alerts\n                         *\n                         * @type      {Highcharts.AccessibilityAnnouncementFormatter}\n                         * @apioption accessibility.announceNewData.announcementFormatter\n                         */\n                        /**\n                         * Enable announcing new data to screen reader users\n                         * @sample highcharts/accessibility/accessible-dynamic\n                         *         Dynamic data accessible\n                         */\n                        enabled: false,\n                        /**\n                         * Minimum interval between announcements in milliseconds. If\n                         * new data arrives before this amount of time has passed, it is\n                         * queued for announcement. If another new data event happens\n                         * while an announcement is queued, the queued announcement is\n                         * dropped, and the latest announcement is queued instead. Set\n                         * to 0 to allow all announcements, but be warned that frequent\n                         * announcements are disturbing to users.\n                         */\n                        minAnnounceInterval: 5000,\n                        /**\n                         * Choose whether or not the announcements should interrupt the\n                         * screen reader. If not enabled, the user will be notified once\n                         * idle. It is recommended not to enable this setting unless\n                         * there is a specific reason to do so.\n                         */\n                        interruptUser: false\n                    }\n                },\n                /**\n                 * Accessibility options for a data point.\n                 *\n                 * @declare   Highcharts.PointAccessibilityOptionsObject\n                 * @since     7.1.0\n                 * @apioption series.line.data.accessibility\n                 */\n                /**\n                 * Provide a description of the data point, announced to screen readers.\n                 *\n                 * @type      {string}\n                 * @since     7.1.0\n                 * @apioption series.line.data.accessibility.description\n                 */\n                /**\n                 * Set to false to disable accessibility functionality for a specific point.\n                 * The point will not be included in keyboard navigation, and will not be\n                 * exposed to assistive technology.\n                 *\n                 * @type      {boolean}\n                 * @since 9.0.1\n                 * @apioption series.line.data.accessibility.enabled\n                 */\n                /**\n                 * Accessibility options for a series.\n                 *\n                 * @declare    Highcharts.SeriesAccessibilityOptionsObject\n                 * @since      7.1.0\n                 * @requires   modules/accessibility\n                 * @apioption  plotOptions.series.accessibility\n                 */\n                /**\n                 * Enable/disable accessibility functionality for a specific series.\n                 *\n                 * @type       {boolean}\n                 * @since      7.1.0\n                 * @apioption  plotOptions.series.accessibility.enabled\n                 */\n                /**\n                 * Provide a description of the series, announced to screen readers.\n                 *\n                 * @type       {string}\n                 * @since      7.1.0\n                 * @apioption  plotOptions.series.accessibility.description\n                 */\n                /**\n                 * Expose only the series element to screen readers, not its points.\n                 *\n                 * @type       {boolean}\n                 * @since      7.1.0\n                 * @apioption  plotOptions.series.accessibility.exposeAsGroupOnly\n                 */\n                /**\n                 * Point accessibility options for a series.\n                 *\n                 * @extends    accessibility.point\n                 * @since 9.3.0\n                 * @requires   modules/accessibility\n                 * @apioption  plotOptions.series.accessibility.point\n                 */\n                /**\n                 * Formatter function to use instead of the default for point\n                 * descriptions. Same as `accessibility.point.descriptionFormatter`, but\n                 * applies to a series instead of the whole chart.\n                 *\n                 * Note: Prefer using [accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)\n                 * instead if possible, as default functionality such as describing\n                 * annotations will be preserved.\n                 *\n                 * @see [accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)\n                 * @see [point.accessibility.description](#series.line.data.accessibility.description)\n                 * @see [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n                 *\n                 * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n                 * @since 9.3.0\n                 * @apioption plotOptions.series.accessibility.point.descriptionFormatter\n                 */\n                /**\n                 * Keyboard navigation for a series\n                 *\n                 * @declare    Highcharts.SeriesAccessibilityKeyboardNavigationOptionsObject\n                 * @since      7.1.0\n                 * @apioption  plotOptions.series.accessibility.keyboardNavigation\n                 */\n                /**\n                 * Enable/disable keyboard navigation support for a specific series.\n                 *\n                 * @type       {boolean}\n                 * @since      7.1.0\n                 * @apioption  plotOptions.series.accessibility.keyboardNavigation.enabled\n                 */\n                /**\n                 * Accessibility options for an annotation label.\n                 *\n                 * @declare    Highcharts.AnnotationLabelAccessibilityOptionsObject\n                 * @since 8.0.1\n                 * @requires   modules/accessibility\n                 * @apioption  annotations.labelOptions.accessibility\n                 */\n                /**\n                 * Description of an annotation label for screen readers and other assistive\n                 * technology.\n                 *\n                 * @type       {string}\n                 * @since 8.0.1\n                 * @apioption  annotations.labelOptions.accessibility.description\n                 */\n                /**\n                 * Accessibility options for an axis. Requires the accessibility module.\n                 *\n                 * @declare    Highcharts.AxisAccessibilityOptionsObject\n                 * @since      7.1.0\n                 * @requires   modules/accessibility\n                 * @apioption  xAxis.accessibility\n                 */\n                /**\n                 * Enable axis accessibility features, including axis information in the\n                 * screen reader information region. If this is disabled on the xAxis, the\n                 * x values are not exposed to screen readers for the individual data points\n                 * by default.\n                 *\n                 * @type       {boolean}\n                 * @since      7.1.0\n                 * @apioption  xAxis.accessibility.enabled\n                 */\n                /**\n                 * Description for an axis to expose to screen reader users.\n                 *\n                 * @type       {string}\n                 * @since      7.1.0\n                 * @apioption  xAxis.accessibility.description\n                 */\n                /**\n                 * Range description for an axis. Overrides the default range description.\n                 * Set to empty to disable range description for this axis.\n                 *\n                 * @type       {string}\n                 * @since      7.1.0\n                 * @apioption  xAxis.accessibility.rangeDescription\n                 */\n                /**\n                 * @optionparent legend\n                 */\n                legend: {\n                    /**\n                     * Accessibility options for the legend. Requires the Accessibility\n                     * module.\n                     *\n                     * @since     7.1.0\n                     * @requires  modules/accessibility\n                     */\n                    accessibility: {\n                        /**\n                         * Enable accessibility support for the legend.\n                         *\n                         * @since  7.1.0\n                         */\n                        enabled: true,\n                        /**\n                         * Options for keyboard navigation for the legend.\n                         *\n                         * @since     7.1.0\n                         * @requires  modules/accessibility\n                         */\n                        keyboardNavigation: {\n                            /**\n                             * Enable keyboard navigation for the legend.\n                             *\n                             * @see [accessibility.keyboardNavigation](#accessibility.keyboardNavigation.enabled)\n                             *\n                             * @since  7.1.0\n                             */\n                            enabled: true\n                        }\n                    }\n                },\n                /**\n                 * @optionparent exporting\n                 */\n                exporting: {\n                    /**\n                     * Accessibility options for the exporting menu. Requires the\n                     * Accessibility module.\n                     *\n                     * @since    7.1.0\n                     * @requires modules/accessibility\n                     */\n                    accessibility: {\n                        /**\n                         * Enable accessibility support for the export menu.\n                         *\n                         * @since 7.1.0\n                         */\n                        enabled: true\n                    }\n                }\n            };\n\n        return Options;\n    });\n    _registerModule(_modules, 'Accessibility/Options/LangDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Default lang/i18n options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        var langOptions = {\n                /**\n                 * Configure the accessibility strings in the chart. Requires the\n                 * [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n                 * to be loaded. For a description of the module and information on its\n                 * features, see\n                 * [Highcharts Accessibility](https://www.highcharts.com/docs/chart-concepts/accessibility).\n                 *\n                 * For more dynamic control over the accessibility functionality, see\n                 * [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter),\n                 * [accessibility.series.descriptionFormatter](#accessibility.series.descriptionFormatter),\n                 * and\n                 * [accessibility.screenReaderSection.beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).\n                 *\n                 * @since        6.0.6\n                 * @optionparent lang.accessibility\n                 */\n                accessibility: {\n                    /**\n                     * @deprecated 10.2.1\n                     * @apioption  lang.accessibility.resetZoomButton\n                     */\n                    defaultChartTitle: 'Chart',\n                    chartContainerLabel: '{title}. Highcharts interactive chart.',\n                    svgContainerLabel: 'Interactive chart',\n                    drillUpButton: '{buttonText}',\n                    credits: 'Chart credits: {creditsStr}',\n                    /**\n                     * Thousands separator to use when formatting numbers for screen\n                     * readers. Note that many screen readers will not handle space as a\n                     * thousands separator, and will consider \"11 700\" as two numbers.\n                     *\n                     * Set to `null` to use the separator defined in\n                     * [lang.thousandsSep](lang.thousandsSep).\n                     *\n                     * @since 7.1.0\n                     */\n                    thousandsSep: ',',\n                    /**\n                     * Title element text for the chart SVG element. Leave this\n                     * empty to disable adding the title element. Browsers will display\n                     * this content when hovering over elements in the chart. Assistive\n                     * technology may use this element to label the chart.\n                     *\n                     * @since 6.0.8\n                     */\n                    svgContainerTitle: '',\n                    /**\n                     * Set a label on the container wrapping the SVG.\n                     *\n                     * @see [chartContainerLabel](#lang.accessibility.chartContainerLabel)\n                     *\n                     * @since 8.0.0\n                     */\n                    graphicContainerLabel: '',\n                    /**\n                     * Language options for the screen reader information sections added\n                     * before and after the charts.\n                     *\n                     * @since 8.0.0\n                     */\n                    screenReaderSection: {\n                        beforeRegionLabel: '',\n                        afterRegionLabel: '',\n                        /**\n                         * Language options for annotation descriptions.\n                         *\n                         * @since 8.0.1\n                         */\n                        annotations: {\n                            heading: 'Chart annotations summary',\n                            descriptionSinglePoint: ('{annotationText}. Related to {annotationPoint}'),\n                            descriptionMultiplePoints: ('{annotationText}. Related to {annotationPoint}' +\n                                '{ Also related to, #each(additionalAnnotationPoints)}'),\n                            descriptionNoPoints: '{annotationText}'\n                        },\n                        /**\n                         * Label for the end of the chart. Announced by screen readers.\n                         *\n                         * @since 8.0.0\n                         */\n                        endOfChartMarker: 'End of interactive chart.'\n                    },\n                    /**\n                     * Language options for sonification.\n                     *\n                     * @since 8.0.1\n                     */\n                    sonification: {\n                        playAsSoundButtonText: 'Play as sound, {chartTitle}',\n                        playAsSoundClickAnnouncement: 'Play'\n                    },\n                    /**\n                     * Language options for accessibility of the legend.\n                     *\n                     * @since 8.0.0\n                     */\n                    legend: {\n                        legendLabelNoTitle: 'Toggle series visibility, {chartTitle}',\n                        legendLabel: 'Chart legend: {legendTitle}',\n                        legendItem: 'Show {itemName}'\n                    },\n                    /**\n                     * Chart and map zoom accessibility language options.\n                     *\n                     * @since 8.0.0\n                     */\n                    zoom: {\n                        mapZoomIn: 'Zoom chart',\n                        mapZoomOut: 'Zoom out chart',\n                        resetZoomButton: 'Reset zoom'\n                    },\n                    /**\n                     * Range selector language options for accessibility.\n                     *\n                     * @since 8.0.0\n                     */\n                    rangeSelector: {\n                        dropdownLabel: '{rangeTitle}',\n                        minInputLabel: 'Select start date.',\n                        maxInputLabel: 'Select end date.',\n                        clickButtonAnnouncement: 'Viewing {axisRangeDescription}'\n                    },\n                    /**\n                     * Accessibility language options for the data table.\n                     *\n                     * @since 8.0.0\n                     */\n                    table: {\n                        viewAsDataTableButtonText: 'View as data table, {chartTitle}',\n                        tableSummary: 'Table representation of chart.'\n                    },\n                    /**\n                     * Default announcement for new data in charts. If addPoint or\n                     * addSeries is used, and only one series/point is added, the\n                     * `newPointAnnounce` and `newSeriesAnnounce` strings are used.\n                     * The `...Single` versions will be used if there is only one chart\n                     * on the page, and the `...Multiple` versions will be used if there\n                     * are multiple charts on the page. For all other new data events,\n                     * the `newDataAnnounce` string will be used.\n                     *\n                     * @since 7.1.0\n                     */\n                    announceNewData: {\n                        newDataAnnounce: 'Updated data for chart {chartTitle}',\n                        newSeriesAnnounceSingle: 'New data series: {seriesDesc}',\n                        newPointAnnounceSingle: 'New data point: {pointDesc}',\n                        newSeriesAnnounceMultiple: 'New data series in chart {chartTitle}: {seriesDesc}',\n                        newPointAnnounceMultiple: 'New data point in chart {chartTitle}: {pointDesc}'\n                    },\n                    /**\n                     * Descriptions of lesser known series types. The relevant\n                     * description is added to the screen reader information region\n                     * when these series types are used.\n                     *\n                     * @since 6.0.6\n                     */\n                    seriesTypeDescriptions: {\n                        boxplot: 'Box plot charts are typically used to display ' +\n                            'groups of statistical data. Each data point in the ' +\n                            'chart can have up to 5 values: minimum, lower quartile, ' +\n                            'median, upper quartile, and maximum.',\n                        arearange: 'Arearange charts are line charts displaying a ' +\n                            'range between a lower and higher value for each point.',\n                        areasplinerange: 'These charts are line charts displaying a ' +\n                            'range between a lower and higher value for each point.',\n                        bubble: 'Bubble charts are scatter charts where each data ' +\n                            'point also has a size value.',\n                        columnrange: 'Columnrange charts are column charts ' +\n                            'displaying a range between a lower and higher value for ' +\n                            'each point.',\n                        errorbar: 'Errorbar series are used to display the ' +\n                            'variability of the data.',\n                        funnel: 'Funnel charts are used to display reduction of data ' +\n                            'in stages.',\n                        pyramid: 'Pyramid charts consist of a single pyramid with ' +\n                            'item heights corresponding to each point value.',\n                        waterfall: 'A waterfall chart is a column chart where each ' +\n                            'column contributes towards a total end value.'\n                    },\n                    /**\n                     * Chart type description strings. This is added to the chart\n                     * information region.\n                     *\n                     * If there is only a single series type used in the chart, we use\n                     * the format string for the series type, or default if missing.\n                     * There is one format string for cases where there is only a single\n                     * series in the chart, and one for multiple series of the same\n                     * type.\n                     *\n                     * @since 6.0.6\n                     */\n                    chartTypes: {\n                        /* eslint-disable max-len */\n                        emptyChart: 'Empty chart',\n                        mapTypeDescription: 'Map of {mapTitle} with {numSeries} data series.',\n                        unknownMap: 'Map of unspecified region with {numSeries} data series.',\n                        combinationChart: 'Combination chart with {numSeries} data series.',\n                        defaultSingle: 'Chart with {numPoints} data {#plural(numPoints, points, point)}.',\n                        defaultMultiple: 'Chart with {numSeries} data series.',\n                        splineSingle: 'Line chart with {numPoints} data {#plural(numPoints, points, point)}.',\n                        splineMultiple: 'Line chart with {numSeries} lines.',\n                        lineSingle: 'Line chart with {numPoints} data {#plural(numPoints, points, point)}.',\n                        lineMultiple: 'Line chart with {numSeries} lines.',\n                        columnSingle: 'Bar chart with {numPoints} {#plural(numPoints, bars, bar)}.',\n                        columnMultiple: 'Bar chart with {numSeries} data series.',\n                        barSingle: 'Bar chart with {numPoints} {#plural(numPoints, bars, bar)}.',\n                        barMultiple: 'Bar chart with {numSeries} data series.',\n                        pieSingle: 'Pie chart with {numPoints} {#plural(numPoints, slices, slice)}.',\n                        pieMultiple: 'Pie chart with {numSeries} pies.',\n                        scatterSingle: 'Scatter chart with {numPoints} {#plural(numPoints, points, point)}.',\n                        scatterMultiple: 'Scatter chart with {numSeries} data series.',\n                        boxplotSingle: 'Boxplot with {numPoints} {#plural(numPoints, boxes, box)}.',\n                        boxplotMultiple: 'Boxplot with {numSeries} data series.',\n                        bubbleSingle: 'Bubble chart with {numPoints} {#plural(numPoints, bubbles, bubble)}.',\n                        bubbleMultiple: 'Bubble chart with {numSeries} data series.'\n                    },\n                    /**\n                     * Axis description format strings.\n                     *\n                     * @since 6.0.6\n                     */\n                    axis: {\n                        /* eslint-disable max-len */\n                        xAxisDescriptionSingular: 'The chart has 1 X axis displaying {names[0]}. {ranges[0]}',\n                        xAxisDescriptionPlural: 'The chart has {numAxes} X axes displaying {#each(names, -1) }and {names[-1]}.',\n                        yAxisDescriptionSingular: 'The chart has 1 Y axis displaying {names[0]}. {ranges[0]}',\n                        yAxisDescriptionPlural: 'The chart has {numAxes} Y axes displaying {#each(names, -1) }and {names[-1]}.',\n                        timeRangeDays: 'Data range: {range} days.',\n                        timeRangeHours: 'Data range: {range} hours.',\n                        timeRangeMinutes: 'Data range: {range} minutes.',\n                        timeRangeSeconds: 'Data range: {range} seconds.',\n                        rangeFromTo: 'Data ranges from {rangeFrom} to {rangeTo}.',\n                        rangeCategories: 'Data range: {numCategories} categories.'\n                    },\n                    /**\n                     * Exporting menu format strings for accessibility module.\n                     *\n                     * @since 6.0.6\n                     */\n                    exporting: {\n                        chartMenuLabel: 'Chart menu',\n                        menuButtonLabel: 'View chart menu, {chartTitle}'\n                    },\n                    /**\n                     * Lang configuration for different series types. For more dynamic\n                     * control over the series element descriptions, see\n                     * [accessibility.seriesDescriptionFormatter](#accessibility.seriesDescriptionFormatter).\n                     *\n                     * @since 6.0.6\n                     */\n                    series: {\n                        /**\n                         * Lang configuration for the series main summary. Each series\n                         * type has two modes:\n                         *\n                         * 1. This series type is the only series type used in the\n                         *    chart\n                         *\n                         * 2. This is a combination chart with multiple series types\n                         *\n                         * If a definition does not exist for the specific series type\n                         * and mode, the 'default' lang definitions are used.\n                         *\n                         * Chart and its subproperties can be accessed with the `{chart}` variable.\n                         * The series and its subproperties can be accessed with the `{series}` variable.\n                         *\n                         * The series index (starting from 1) can be accessed with the `{seriesNumber}` variable.\n                         *\n                         * @since 6.0.6\n                         */\n                        summary: {\n                            /* eslint-disable max-len */\n                            'default': '{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#plural(series.points.length, points, point)}.',\n                            defaultCombination: '{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#plural(series.points.length, points, point)}.',\n                            line: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#plural(series.points.length, points, point)}.',\n                            lineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#plural(series.points.length, points, point)}.',\n                            spline: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#plural(series.points.length, points, point)}.',\n                            splineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#plural(series.points.length, points, point)}.',\n                            column: '{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#plural(series.points.length, bars, bar)}.',\n                            columnCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#plural(series.points.length, bars, bar)}.',\n                            bar: '{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#plural(series.points.length, bars, bar)}.',\n                            barCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#plural(series.points.length, bars, bar)}.',\n                            pie: '{series.name}, pie {seriesNumber} of {chart.series.length} with {series.points.length} {#plural(series.points.length, slices, slice)}.',\n                            pieCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Pie with {series.points.length} {#plural(series.points.length, slices, slice)}.',\n                            scatter: '{series.name}, scatter plot {seriesNumber} of {chart.series.length} with {series.points.length} {#plural(series.points.length, points, point)}.',\n                            scatterCombination: '{series.name}, series {seriesNumber} of {chart.series.length}, scatter plot with {series.points.length} {#plural(series.points.length, points, point)}.',\n                            boxplot: '{series.name}, boxplot {seriesNumber} of {chart.series.length} with {series.points.length} {#plural(series.points.length, boxes, box)}.',\n                            boxplotCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Boxplot with {series.points.length} {#plural(series.points.length, boxes, box)}.',\n                            bubble: '{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#plural(series.points.length, bubbles, bubble)}.',\n                            bubbleCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#plural(series.points.length, bubbles, bubble)}.',\n                            map: '{series.name}, map {seriesNumber} of {chart.series.length} with {series.points.length} {#plural(series.points.length, areas, area)}.',\n                            mapCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Map with {series.points.length} {#plural(series.points.length, areas, area)}.',\n                            mapline: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#plural(series.points.length, points, point)}.',\n                            maplineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#plural(series.points.length, points, point)}.',\n                            mapbubble: '{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#plural(series.points.length, bubbles, bubble)}.',\n                            mapbubbleCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#plural(series.points.length, bubbles, bubble)}.'\n                        },\n                        /**\n                         * User supplied description text. This is added in the point\n                         * comment description by default if present.\n                         *\n                         * @since 6.0.6\n                         */\n                        description: '{description}',\n                        /**\n                         * xAxis description for series if there are multiple xAxes in\n                         * the chart.\n                         *\n                         * @since 6.0.6\n                         */\n                        xAxisDescription: 'X axis, {name}',\n                        /**\n                         * yAxis description for series if there are multiple yAxes in\n                         * the chart.\n                         *\n                         * @since 6.0.6\n                         */\n                        yAxisDescription: 'Y axis, {name}',\n                        /**\n                         * Description for the value of null points.\n                         *\n                         * @since 8.0.0\n                         */\n                        nullPointValue: 'No value',\n                        /**\n                         * Description for annotations on a point, as it is made available\n                         * to assistive technology.\n                         *\n                         * @since 8.0.1\n                         */\n                        pointAnnotationsDescription: '{Annotation: #each(annotations). }'\n                    }\n                }\n            };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return langOptions;\n    });\n    _registerModule(_modules, 'Accessibility/Options/DeprecatedOptions.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Default options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* eslint-disable max-len */\n        /*\n         *  List of deprecated options:\n         *\n         *  chart.description -> accessibility.description\n         *  chart.typeDescription -> accessibility.typeDescription\n         *  series.description -> series.accessibility.description\n         *  series.exposeElementToA11y -> series.accessibility.exposeAsGroupOnly\n         *  series.pointDescriptionFormatter ->\n         *      series.accessibility.pointDescriptionFormatter\n         *  series.accessibility.pointDescriptionFormatter ->\n         *      series.accessibility.point.descriptionFormatter\n         *  series.skipKeyboardNavigation ->\n         *      series.accessibility.keyboardNavigation.enabled\n         *  point.description -> point.accessibility.description !!!! WARNING: No longer deprecated and handled, removed for HC8.\n         *  axis.description -> axis.accessibility.description\n         *\n         *  accessibility.pointDateFormat -> accessibility.point.dateFormat\n         *  accessibility.addTableShortcut -> Handled by screenReaderSection.beforeChartFormat\n         *  accessibility.pointDateFormatter -> accessibility.point.dateFormatter\n         *  accessibility.pointDescriptionFormatter -> accessibility.point.descriptionFormatter\n         *  accessibility.pointDescriptionThreshold -> accessibility.series.pointDescriptionEnabledThreshold\n         *  accessibility.pointNavigationThreshold -> accessibility.keyboardNavigation.seriesNavigation.pointNavigationEnabledThreshold\n         *  accessibility.pointValueDecimals -> accessibility.point.valueDecimals\n         *  accessibility.pointValuePrefix -> accessibility.point.valuePrefix\n         *  accessibility.pointValueSuffix -> accessibility.point.valueSuffix\n         *  accessibility.screenReaderSectionFormatter -> accessibility.screenReaderSection.beforeChartFormatter\n         *  accessibility.describeSingleSeries -> accessibility.series.describeSingleSeries\n         *  accessibility.seriesDescriptionFormatter -> accessibility.series.descriptionFormatter\n         *  accessibility.onTableAnchorClick -> accessibility.screenReaderSection.onViewDataTableClick\n         *  accessibility.axisRangeDateFormat -> accessibility.screenReaderSection.axisRangeDateFormat\n         *  accessibility.keyboardNavigation.skipNullPoints -> accessibility.keyboardNavigation.seriesNavigation.skipNullPoints\n         *  accessibility.keyboardNavigation.mode -> accessibility.keyboardNavigation.seriesNavigation.mode\n         *\n         *  lang.accessibility.chartHeading -> no longer used, remove\n         *  lang.accessibility.legendItem -> lang.accessibility.legend.legendItem\n         *  lang.accessibility.legendLabel -> lang.accessibility.legend.legendLabel\n         *  lang.accessibility.mapZoomIn -> lang.accessibility.zoom.mapZoomIn\n         *  lang.accessibility.mapZoomOut -> lang.accessibility.zoom.mapZoomOut\n         *  lang.accessibility.resetZoomButton -> lang.accessibility.zoom.resetZoomButton\n         *  lang.accessibility.screenReaderRegionLabel -> lang.accessibility.screenReaderSection.beforeRegionLabel\n         *  lang.accessibility.rangeSelectorButton -> lang.accessibility.rangeSelector.buttonText\n         *  lang.accessibility.rangeSelectorMaxInput -> lang.accessibility.rangeSelector.maxInputLabel\n         *  lang.accessibility.rangeSelectorMinInput -> lang.accessibility.rangeSelector.minInputLabel\n         *  lang.accessibility.svgContainerEnd -> lang.accessibility.screenReaderSection.endOfChartMarker\n         *  lang.accessibility.viewAsDataTable -> lang.accessibility.table.viewAsDataTableButtonText\n         *  lang.accessibility.tableSummary -> lang.accessibility.table.tableSummary\n         *\n         */\n        /* eslint-enable max-len */\n        var error = U.error,\n            pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Set a new option on a root prop, where the option is defined as an array of\n         * suboptions.\n         * @private\n         * @param root\n         * @param {Array<string>} optionAsArray\n         * @param {*} val\n         * @return {void}\n         */\n        function traverseSetOption(root, optionAsArray, val) {\n            var opt = root,\n                prop,\n                i = 0;\n            for (; i < optionAsArray.length - 1; ++i) {\n                prop = optionAsArray[i];\n                opt = opt[prop] = pick(opt[prop], {});\n            }\n            opt[optionAsArray[optionAsArray.length - 1]] = val;\n        }\n        /**\n         * If we have a clear root option node for old and new options and a mapping\n         * between, we can use this generic function for the copy and warn logic.\n         */\n        function deprecateFromOptionsMap(chart, rootOldAsArray, rootNewAsArray, mapToNewOptions) {\n            /**\n             * @private\n             */\n            function getChildProp(root, propAsArray) {\n                return propAsArray.reduce(function (acc, cur) {\n                    return acc[cur];\n                }, root);\n            }\n            var rootOld = getChildProp(chart.options,\n                rootOldAsArray),\n                rootNew = getChildProp(chart.options,\n                rootNewAsArray);\n            Object.keys(mapToNewOptions).forEach(function (oldOptionKey) {\n                var _a;\n                var val = rootOld[oldOptionKey];\n                if (typeof val !== 'undefined') {\n                    traverseSetOption(rootNew, mapToNewOptions[oldOptionKey], val);\n                    error(32, false, chart, (_a = {},\n                        _a[rootOldAsArray.join('.') + '.' + oldOptionKey] = (rootNewAsArray.join('.') + '.' +\n                            mapToNewOptions[oldOptionKey].join('.')),\n                        _a));\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedChartOptions(chart) {\n            var chartOptions = chart.options.chart,\n                a11yOptions = chart.options.accessibility || {};\n            ['description', 'typeDescription'].forEach(function (prop) {\n                var _a;\n                if (chartOptions[prop]) {\n                    a11yOptions[prop] = chartOptions[prop];\n                    error(32, false, chart, (_a = {}, _a[\"chart.\".concat(prop)] = \"use accessibility.\".concat(prop), _a));\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedAxisOptions(chart) {\n            chart.axes.forEach(function (axis) {\n                var opts = axis.options;\n                if (opts && opts.description) {\n                    opts.accessibility = opts.accessibility || {};\n                    opts.accessibility.description = opts.description;\n                    error(32, false, chart, {\n                        'axis.description': 'use axis.accessibility.description'\n                    });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedSeriesOptions(chart) {\n            // Map of deprecated series options. New options are defined as\n            // arrays of paths under series.options.\n            var oldToNewSeriesOptions = {\n                    description: ['accessibility', 'description'],\n                    exposeElementToA11y: ['accessibility', 'exposeAsGroupOnly'],\n                    pointDescriptionFormatter: [\n                        'accessibility', 'point', 'descriptionFormatter'\n                    ],\n                    skipKeyboardNavigation: [\n                        'accessibility', 'keyboardNavigation', 'enabled'\n                    ],\n                    'accessibility.pointDescriptionFormatter': [\n                        'accessibility', 'point', 'descriptionFormatter'\n                    ]\n                };\n            chart.series.forEach(function (series) {\n                // Handle series wide options\n                Object.keys(oldToNewSeriesOptions).forEach(function (oldOption) {\n                    var _a;\n                    var optionVal = series.options[oldOption];\n                    // Special case\n                    if (oldOption === 'accessibility.pointDescriptionFormatter') {\n                        optionVal = (series.options.accessibility &&\n                            series.options.accessibility\n                                .pointDescriptionFormatter);\n                    }\n                    if (typeof optionVal !== 'undefined') {\n                        // Set the new option\n                        traverseSetOption(series.options, oldToNewSeriesOptions[oldOption], \n                        // Note that skipKeyboardNavigation has inverted option\n                        // value, since we set enabled rather than disabled\n                        oldOption === 'skipKeyboardNavigation' ?\n                            !optionVal : optionVal);\n                        error(32, false, chart, (_a = {},\n                            _a[\"series.\".concat(oldOption)] = ('series.' +\n                                oldToNewSeriesOptions[oldOption].join('.')),\n                            _a));\n                    }\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedTopLevelAccessibilityOptions(chart) {\n            deprecateFromOptionsMap(chart, ['accessibility'], ['accessibility'], {\n                pointDateFormat: ['point', 'dateFormat'],\n                pointDateFormatter: ['point', 'dateFormatter'],\n                pointDescriptionFormatter: ['point', 'descriptionFormatter'],\n                pointDescriptionThreshold: ['series',\n                    'pointDescriptionEnabledThreshold'],\n                pointNavigationThreshold: ['keyboardNavigation', 'seriesNavigation',\n                    'pointNavigationEnabledThreshold'],\n                pointValueDecimals: ['point', 'valueDecimals'],\n                pointValuePrefix: ['point', 'valuePrefix'],\n                pointValueSuffix: ['point', 'valueSuffix'],\n                screenReaderSectionFormatter: ['screenReaderSection',\n                    'beforeChartFormatter'],\n                describeSingleSeries: ['series', 'describeSingleSeries'],\n                seriesDescriptionFormatter: ['series', 'descriptionFormatter'],\n                onTableAnchorClick: ['screenReaderSection', 'onViewDataTableClick'],\n                axisRangeDateFormat: ['screenReaderSection', 'axisRangeDateFormat']\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedKeyboardNavigationOptions(chart) {\n            deprecateFromOptionsMap(chart, ['accessibility', 'keyboardNavigation'], ['accessibility', 'keyboardNavigation', 'seriesNavigation'], {\n                skipNullPoints: ['skipNullPoints'],\n                mode: ['mode']\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedLangOptions(chart) {\n            deprecateFromOptionsMap(chart, ['lang', 'accessibility'], ['lang', 'accessibility'], {\n                legendItem: ['legend', 'legendItem'],\n                legendLabel: ['legend', 'legendLabel'],\n                mapZoomIn: ['zoom', 'mapZoomIn'],\n                mapZoomOut: ['zoom', 'mapZoomOut'],\n                resetZoomButton: ['zoom', 'resetZoomButton'],\n                screenReaderRegionLabel: ['screenReaderSection',\n                    'beforeRegionLabel'],\n                rangeSelectorButton: ['rangeSelector', 'buttonText'],\n                rangeSelectorMaxInput: ['rangeSelector', 'maxInputLabel'],\n                rangeSelectorMinInput: ['rangeSelector', 'minInputLabel'],\n                svgContainerEnd: ['screenReaderSection', 'endOfChartMarker'],\n                viewAsDataTable: ['table', 'viewAsDataTableButtonText'],\n                tableSummary: ['table', 'tableSummary']\n            });\n        }\n        /**\n         * Copy options that are deprecated over to new options. Logs warnings to\n         * console if deprecated options are used.\n         *\n         * @private\n         */\n        function copyDeprecatedOptions(chart) {\n            copyDeprecatedChartOptions(chart);\n            copyDeprecatedAxisOptions(chart);\n            if (chart.series) {\n                copyDeprecatedSeriesOptions(chart);\n            }\n            copyDeprecatedTopLevelAccessibilityOptions(chart);\n            copyDeprecatedKeyboardNavigationOptions(chart);\n            copyDeprecatedLangOptions(chart);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return copyDeprecatedOptions;\n    });\n    _registerModule(_modules, 'Accessibility/Accessibility.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/A11yI18n.js'], _modules['Accessibility/Components/ContainerComponent.js'], _modules['Accessibility/FocusBorder.js'], _modules['Accessibility/Components/InfoRegionsComponent.js'], _modules['Accessibility/KeyboardNavigation.js'], _modules['Accessibility/Components/LegendComponent.js'], _modules['Accessibility/Components/MenuComponent.js'], _modules['Accessibility/Components/SeriesComponent/NewDataAnnouncer.js'], _modules['Accessibility/ProxyProvider.js'], _modules['Accessibility/Components/RangeSelectorComponent.js'], _modules['Accessibility/Components/SeriesComponent/SeriesComponent.js'], _modules['Accessibility/Components/ZoomComponent.js'], _modules['Accessibility/HighContrastMode.js'], _modules['Accessibility/HighContrastTheme.js'], _modules['Accessibility/Options/A11yDefaults.js'], _modules['Accessibility/Options/LangDefaults.js'], _modules['Accessibility/Options/DeprecatedOptions.js']], function (D, H, U, HU, A11yI18n, ContainerComponent, FocusBorder, InfoRegionsComponent, KeyboardNavigation, LegendComponent, MenuComponent, NewDataAnnouncer, ProxyProvider, RangeSelectorComponent, SeriesComponent, ZoomComponent, whcm, highContrastTheme, defaultOptionsA11Y, defaultLangOptions, copyDeprecatedOptions) {\n        /* *\n         *\n         *  (c) 2009-2021 \u00D8ystein Moseng\n         *\n         *  Accessibility module for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var doc = H.doc;\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            fireEvent = U.fireEvent,\n            merge = U.merge;\n        var removeElement = HU.removeElement;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Accessibility class\n         *\n         * @private\n         * @requires module:modules/accessibility\n         *\n         * @class\n         * @name Highcharts.Accessibility\n         *\n         * @param {Highcharts.Chart} chart\n         * Chart object\n         */\n        var Accessibility = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function Accessibility(chart) {\n                    /* *\n                     *\n                     *  Properties\n                     *\n                     * */\n                    this.chart = void 0;\n                this.components = void 0;\n                this.keyboardNavigation = void 0;\n                this.proxyProvider = void 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Initialize the accessibility class\n             * @private\n             * @param {Highcharts.Chart} chart\n             *        Chart object\n             */\n            Accessibility.prototype.init = function (chart) {\n                this.chart = chart;\n                // Abort on old browsers\n                if (!doc.addEventListener || !chart.renderer.isSVG) {\n                    this.zombie = true;\n                    this.components = {};\n                    chart.renderTo.setAttribute('aria-hidden', true);\n                    return;\n                }\n                // Copy over any deprecated options that are used. We could do this on\n                // every update, but it is probably not needed.\n                copyDeprecatedOptions(chart);\n                this.proxyProvider = new ProxyProvider(this.chart);\n                this.initComponents();\n                this.keyboardNavigation = new KeyboardNavigation(chart, this.components);\n            };\n            /**\n             * @private\n             */\n            Accessibility.prototype.initComponents = function () {\n                var chart = this.chart;\n                var proxyProvider = this.proxyProvider;\n                var a11yOptions = chart.options.accessibility;\n                this.components = {\n                    container: new ContainerComponent(),\n                    infoRegions: new InfoRegionsComponent(),\n                    legend: new LegendComponent(),\n                    chartMenu: new MenuComponent(),\n                    rangeSelector: new RangeSelectorComponent(),\n                    series: new SeriesComponent(),\n                    zoom: new ZoomComponent()\n                };\n                if (a11yOptions.customComponents) {\n                    extend(this.components, a11yOptions.customComponents);\n                }\n                var components = this.components;\n                this.getComponentOrder().forEach(function (componentName) {\n                    components[componentName].initBase(chart, proxyProvider);\n                    components[componentName].init();\n                });\n            };\n            /**\n             * Get order to update components in.\n             * @private\n             */\n            Accessibility.prototype.getComponentOrder = function () {\n                if (!this.components) {\n                    return []; // For zombie accessibility object on old browsers\n                }\n                if (!this.components.series) {\n                    return Object.keys(this.components);\n                }\n                var componentsExceptSeries = Object.keys(this.components)\n                        .filter(function (c) { return c !== 'series'; });\n                // Update series first, so that other components can read accessibility\n                // info on points.\n                return ['series'].concat(componentsExceptSeries);\n            };\n            /**\n             * Update all components.\n             */\n            Accessibility.prototype.update = function () {\n                var components = this.components,\n                    chart = this.chart,\n                    a11yOptions = chart.options.accessibility;\n                fireEvent(chart, 'beforeA11yUpdate');\n                // Update the chart type list as this is used by multiple modules\n                chart.types = this.getChartTypes();\n                // Update proxies. We don't update proxy positions since most likely we\n                // need to recreate the proxies on update.\n                var kbdNavOrder = a11yOptions.keyboardNavigation.order;\n                this.proxyProvider.updateGroupOrder(kbdNavOrder);\n                // Update markup\n                this.getComponentOrder().forEach(function (componentName) {\n                    components[componentName].onChartUpdate();\n                    fireEvent(chart, 'afterA11yComponentUpdate', {\n                        name: componentName,\n                        component: components[componentName]\n                    });\n                });\n                // Update keyboard navigation\n                this.keyboardNavigation.update(kbdNavOrder);\n                // Handle high contrast mode\n                if (!chart.highContrastModeActive && // Only do this once\n                    whcm.isHighContrastModeActive()) {\n                    whcm.setHighContrastTheme(chart);\n                }\n                fireEvent(chart, 'afterA11yUpdate', {\n                    accessibility: this\n                });\n            };\n            /**\n             * Destroy all elements.\n             */\n            Accessibility.prototype.destroy = function () {\n                var chart = this.chart || {};\n                // Destroy components\n                var components = this.components;\n                Object.keys(components).forEach(function (componentName) {\n                    components[componentName].destroy();\n                    components[componentName].destroyBase();\n                });\n                // Destroy proxy provider\n                if (this.proxyProvider) {\n                    this.proxyProvider.destroy();\n                }\n                // Remove announcer container\n                if (chart.announcerContainer) {\n                    removeElement(chart.announcerContainer);\n                }\n                // Kill keyboard nav\n                if (this.keyboardNavigation) {\n                    this.keyboardNavigation.destroy();\n                }\n                // Hide container from screen readers if it exists\n                if (chart.renderTo) {\n                    chart.renderTo.setAttribute('aria-hidden', true);\n                }\n                // Remove focus border if it exists\n                if (chart.focusElement) {\n                    chart.focusElement.removeFocusBorder();\n                }\n            };\n            /**\n             * Return a list of the types of series we have in the chart.\n             * @private\n             */\n            Accessibility.prototype.getChartTypes = function () {\n                var types = {};\n                this.chart.series.forEach(function (series) {\n                    types[series.type] = 1;\n                });\n                return Object.keys(types);\n            };\n            return Accessibility;\n        }());\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (Accessibility) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedClasses = [];\n            Accessibility.i18nFormat = A11yI18n.i18nFormat;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Destroy with chart.\n             * @private\n             */\n            function chartOnDestroy() {\n                if (this.accessibility) {\n                    this.accessibility.destroy();\n                }\n            }\n            /**\n             * Handle updates to the module and send render updates to components.\n             * @private\n             */\n            function chartOnRender() {\n                // Update/destroy\n                if (this.a11yDirty && this.renderTo) {\n                    delete this.a11yDirty;\n                    this.updateA11yEnabled();\n                }\n                var a11y = this.accessibility;\n                if (a11y && !a11y.zombie) {\n                    a11y.proxyProvider.updateProxyElementPositions();\n                    a11y.getComponentOrder().forEach(function (componentName) {\n                        a11y.components[componentName].onChartRender();\n                    });\n                }\n            }\n            /**\n             * Update with chart/series/point updates.\n             * @private\n             */\n            function chartOnUpdate(e) {\n                // Merge new options\n                var newOptions = e.options.accessibility;\n                if (newOptions) {\n                    // Handle custom component updating specifically\n                    if (newOptions.customComponents) {\n                        this.options.accessibility.customComponents =\n                            newOptions.customComponents;\n                        delete newOptions.customComponents;\n                    }\n                    merge(true, this.options.accessibility, newOptions);\n                    // Recreate from scratch\n                    if (this.accessibility && this.accessibility.destroy) {\n                        this.accessibility.destroy();\n                        delete this.accessibility;\n                    }\n                }\n                // Mark dirty for update\n                this.a11yDirty = true;\n            }\n            /**\n             * @private\n             */\n            function chartUpdateA11yEnabled() {\n                var a11y = this.accessibility;\n                var accessibilityOptions = this.options.accessibility;\n                if (accessibilityOptions && accessibilityOptions.enabled) {\n                    if (a11y && !a11y.zombie) {\n                        a11y.update();\n                    }\n                    else {\n                        this.accessibility = a11y = new Accessibility(this);\n                        if (a11y && !a11y.zombie) {\n                            a11y.update();\n                        }\n                    }\n                }\n                else if (a11y) {\n                    // Destroy if after update we have a11y and it is disabled\n                    if (a11y.destroy) {\n                        a11y.destroy();\n                    }\n                    delete this.accessibility;\n                }\n                else {\n                    // Just hide container\n                    this.renderTo.setAttribute('aria-hidden', true);\n                }\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, LegendClass, PointClass, SeriesClass, SVGElementClass, RangeSelectorClass) {\n                // ordered:\n                KeyboardNavigation.compose(ChartClass);\n                NewDataAnnouncer.compose(SeriesClass);\n                LegendComponent.compose(ChartClass, LegendClass);\n                MenuComponent.compose(ChartClass);\n                SeriesComponent.compose(ChartClass, PointClass, SeriesClass);\n                // RangeSelector\n                A11yI18n.compose(ChartClass);\n                FocusBorder.compose(ChartClass, SVGElementClass);\n                if (RangeSelectorClass) {\n                    RangeSelectorComponent.compose(ChartClass, RangeSelectorClass);\n                }\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.updateA11yEnabled = chartUpdateA11yEnabled;\n                    addEvent(ChartClass, 'destroy', chartOnDestroy);\n                    addEvent(ChartClass, 'render', chartOnRender);\n                    addEvent(ChartClass, 'update', chartOnUpdate);\n                    // Mark dirty for update\n                    ['addSeries', 'init'].forEach(function (event) {\n                        addEvent(ChartClass, event, function () {\n                            this.a11yDirty = true;\n                        });\n                    });\n                    // Direct updates (events happen after render)\n                    ['afterApplyDrilldown', 'drillupall'].forEach(function (event) {\n                        addEvent(ChartClass, event, function chartOnAfterDrilldown() {\n                            var a11y = this.accessibility;\n                            if (a11y && !a11y.zombie) {\n                                a11y.update();\n                            }\n                        });\n                    });\n                }\n                if (composedClasses.indexOf(PointClass) === -1) {\n                    composedClasses.push(PointClass);\n                    addEvent(PointClass, 'update', pointOnUpdate);\n                }\n                if (composedClasses.indexOf(SeriesClass) === -1) {\n                    composedClasses.push(SeriesClass);\n                    // Mark dirty for update\n                    ['update', 'updatedData', 'remove'].forEach(function (event) {\n                        addEvent(SeriesClass, event, function () {\n                            if (this.chart.accessibility) {\n                                this.chart.a11yDirty = true;\n                            }\n                        });\n                    });\n                }\n            }\n            Accessibility.compose = compose;\n            /**\n             * Mark dirty for update.\n             * @private\n             */\n            function pointOnUpdate() {\n                if (this.series.chart.accessibility) {\n                    this.series.chart.a11yDirty = true;\n                }\n            }\n        })(Accessibility || (Accessibility = {}));\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // Add default options\n        merge(true, defaultOptions, defaultOptionsA11Y, {\n            accessibility: {\n                highContrastTheme: highContrastTheme\n            },\n            lang: defaultLangOptions\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Accessibility;\n    });\n    _registerModule(_modules, 'masters/modules/accessibility.src.js', [_modules['Core/Globals.js'], _modules['Accessibility/Accessibility.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js']], function (Highcharts, Accessibility, AccessibilityComponent, ChartUtilities, HTMLUtilities, KeyboardNavigationHandler, SeriesDescriber) {\n\n        var G = Highcharts;\n        G.i18nFormat = Accessibility.i18nFormat;\n        G.A11yChartUtilities = ChartUtilities;\n        G.A11yHTMLUtilities = HTMLUtilities;\n        G.AccessibilityComponent = AccessibilityComponent;\n        G.KeyboardNavigationHandler = KeyboardNavigationHandler;\n        G.SeriesAccessibilityDescriber = SeriesDescriber;\n        Accessibility.compose(G.Chart, G.Legend, G.Point, G.Series, G.SVGElement, G.RangeSelector);\n\n    });\n}));"],
  "mappings": "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",
  "names": ["factory", "module", "exports", "define", "amd", "Highcharts", "undefined", "_registerModule", "obj", "path", "args", "fn", "hasOwnProperty", "apply", "CustomEvent", "window", "dispatchEvent", "detail", "_modules", "H", "U", "cloneMouseEvent", "e", "win", "MouseEvent", "type", "doc", "createEvent", "evt", "initMouseEvent", "bubbles", "cancelable", "view", "screenX", "screenY", "clientX", "clientY", "ctrlKey", "altKey", "shiftKey", "metaKey", "button", "relatedTarget", "getFakeMouseEvent", "position", "pos", "x", "y", "composed", "buttons", "simulatedEventTarget", "css", "EventTarget", "HTMLUtilities", "addClass", "el", "className", "classList", "add", "indexOf", "cloneTouchEvent", "touchListToTouchArray", "l", "touchArray", "i", "length", "item", "push", "TouchEvent", "newEvent", "touches", "targetTouches", "changedTouches", "defaultPrevented", "preventDefault", "fakeEvt", "escapeStringForHTML", "str", "replace", "getElement", "id", "getElementById", "getHeadingTagNameForElement", "element", "getIncreasedHeadingLevel", "tagName", "headingLevel", "parseInt", "slice", "Math", "min", "newLevel", "getHeadingRecursive", "prevSiblingsHeading", "sibling", "previousSibling", "test", "parent", "parentElement", "parentTagName", "removeChildNodes", "lastChild", "removeChild", "removeClass", "remove", "RegExp", "removeElement", "parentNode", "reverseChildNodes", "node", "childNodes", "appendChild", "stripHTMLTagsFromString", "visuallyHideElement", "width", "height", "overflow", "whiteSpace", "clip", "marginTop", "filter", "opacity", "F", "format", "getNestedProperty", "pick", "A11yI18nComposition", "formatExtendedStatement", "statement", "ctx", "eachStart", "pluralStart", "indexStart", "indexEnd", "eachEnd", "preEach", "substring", "postEach", "eachArguments", "eachStatement", "split", "lenArg", "Number", "result", "arr", "isNaN", "len", "pluralEnd", "pluralArguments", "pluralStatement", "num", "a", "trim", "arrayName", "ix", "val", "i18nFormat", "formatString", "context", "chart", "getFirstBracketStatement", "sourceStr", "offset", "startBracket", "endBracket", "begin", "end", "tokens", "cursor", "bracketRes", "constRes", "value", "forEach", "token", "reduce", "acc", "cur", "langFormat", "langKey", "keys", "options", "lang", "composedClasses", "compose", "ChartClass", "prototype", "HU", "fireEventOnWrappedOrUnwrappedElement", "eventObject", "hcEvents", "fireEvent", "getAxisTimeLengthDesc", "axis", "range", "rangeUnit", "Seconds", "dataMax", "max", "dataMin", "Minutes", "Hours", "Days", "unit", "rangeValue", "toFixed", "getAxisFromToDescription", "dateRangeFormat", "accessibility", "screenReaderSection", "axisRangeDateFormat", "extremes", "key", "dateTime", "time", "dateFormat", "toString", "rangeFrom", "rangeTo", "getSeriesFirstPointElement", "series", "points", "firstPointWithGraphic", "find", "p", "graphic", "getSeriesA11yElement", "firstPointEl", "graph", "group", "unhideChartElementFromAT", "setAttribute", "renderTo", "body", "Array", "call", "hasAttribute", "stripHTMLTags", "defined", "ChartUtilities", "getChartTitle", "title", "text", "getAxisDescription", "userOptions", "description", "axisTitle", "textStr", "categories", "getAxisRangeDescription", "axisOptions", "rangeDescription", "numCategories", "getPointFromXY", "res", "getSeriesFromName", "name", "s", "hideSeriesFromAT", "seriesEl", "scrollToPoint", "point", "xAxis", "yAxis", "scrollbar", "to", "from", "axisStart", "toPixels", "axisEnd", "coll", "pointPos", "updatePosition", "trigger", "DOMEvent", "DOMElementProvider", "elements", "createElement", "DOMElementProvider.prototype.createElement", "arguments", "destroyCreatedElements", "DOMElementProvider.prototype.destroyCreatedElements", "addEvent", "EventProvider", "eventRemovers", "EventProvider.prototype.addEvent", "remover", "removeAddedEvents", "EventProvider.prototype.removeAddedEvents", "CU", "extend", "AccessibilityComponent", "proxyProvider", "keyCodes", "eventProvider", "domElementProvider", "initBase", "AccessibilityComponent.prototype.initBase", "left", "right", "up", "down", "enter", "space", "esc", "tab", "pageUp", "pageDown", "home", "AccessibilityComponent.prototype.addEvent", "AccessibilityComponent.prototype.createElement", "fakeClickEvent", "AccessibilityComponent.prototype.fakeClickEvent", "fakeEvent", "destroyBase", "AccessibilityComponent.prototype.destroyBase", "init", "getKeyboardNavigation", "onChartUpdate", "onChartRender", "destroy", "KeyboardNavigationHandler", "keyCodeMap", "validate", "terminate", "response", "success", "prev", "next", "noHandler", "fail", "run", "KeyboardNavigationHandler.prototype.run", "keyCode", "which", "handlerCodeSet", "codeSet", "__extends", "extendStatics", "d", "b", "Object", "setPrototypeOf", "__proto__", "__", "constructor", "create", "_super", "ContainerComponent", "ContainerComponent.prototype.onChartUpdate", "handleSVGTitleElement", "setSVGContainerLabel", "setGraphicContainerAttrs", "setRenderToAttrs", "makeCreditsAccessible", "ContainerComponent.prototype.handleSVGTitleElement", "titleId", "index", "titleContents", "chartTitle", "titleElement", "svgTitleElement", "createElementNS", "textContent", "insertBefore", "firstChild", "ContainerComponent.prototype.setSVGContainerLabel", "svgContainerLabel", "renderer", "box", "ContainerComponent.prototype.setGraphicContainerAttrs", "label", "container", "ContainerComponent.prototype.setRenderToAttrs", "shouldHaveLandmark", "landmarkVerbosity", "containerLabel", "ContainerComponent.prototype.makeCreditsAccessible", "credits", "creditsStr", "ContainerComponent.prototype.getKeyboardNavigation", "a11y", "keyboardNavigation", "tabindexContainer", "focus", "ContainerComponent.prototype.destroy", "SVGLabel", "FocusBorderComposition", "chartRenderFocusBorder", "focusElement", "focusBorderOptions", "focusBorder", "removeFocusBorder", "enabled", "addFocusBorder", "margin", "stroke", "style", "color", "strokeWidth", "lineWidth", "r", "borderRadius", "chartSetFocusToElement", "svgElement", "browserFocusElement", "focusin", "hideBrowserFocusOutline", "outline", "renderFocusBorder", "svgElementAddDestroyFocusBorderHook", "focusBorderDestroyHook", "origDestroy", "el.destroy", "svgElementAddFocusBorder", "attribs", "bb", "getBBox", "pad", "parentGroup", "scaleX", "scaleY", "scaleBoth", "abs", "translateX", "translateY", "borderPosX", "borderPosY", "borderWidth", "borderHeight", "isLabel", "nodeName", "isRotated", "rotation", "posYCorrection", "posXCorrection", "attr", "attrX", "attrY", "correction", "temp", "rect", "zIndex", "styledMode", "avgElementAddUpdateFocusBorderHooks", "updateParams", "_i", "focusBorderUpdateHooks", "svgElementBorderUpdateTriggers", "origSetter", "setterKey", "_defaultSetter", "ret", "svgElementRemoveFocusBorder", "svgElementRemoveUpdateFocusBorderHooks", "SVGElementClass", "chartProto", "setFocusToElement", "svgElementProto", "AST", "Announcer", "announceRegion", "addAnnounceRegion", "Announcer.prototype.destroy", "announce", "Announcer.prototype.announce", "message", "_this", "setElementHTML", "clearAnnouncementRegionTimer", "clearTimeout", "setTimeout", "innerHTML", "emptyHTML", "Announcer.prototype.addAnnounceRegion", "chartContainer", "announcerContainer", "createAnnouncerContainer", "div", "Announcer.prototype.createAnnouncerContainer", "getChartAnnotationLabels", "annotations", "visible", "concat", "labels", "getLabelText", "getAnnotationLabelDescription", "a11yDesc", "labelText", "pointValueDescriptions", "map", "getValueDesc", "valDesc", "valueDescription", "getAttribute", "seriesName", "desc", "numPoints", "langFormatStr", "annotationText", "annotation", "annotationPoint", "additionalAnnotationPoints", "getAnnotationListItems", "AnnotationsA11y", "getAnnotationsInfoHTML", "annotationItems", "join", "getPointAnnotationTexts", "pointLabels", "A11yI18n", "getTypeDescription", "types", "firstType", "firstSeries", "formatContext", "numSeries", "mapTitle", "mapView", "geoMap", "typeExplaination", "multi", "InfoRegionsComponent", "announcer", "screenReaderSections", "InfoRegionsComponent.prototype.init", "component", "initRegionsDefinitions", "onDataTableCreated", "wasHidden", "dataTableDiv", "focusDataTable", "InfoRegionsComponent.prototype.initRegionsDefinitions", "before", "buildContent", "formatter", "beforeChartFormatter", "defaultBeforeChartFormatter", "insertIntoDOM", "afterInserted", "sonifyButtonId", "initSonifyButton", "dataTableButtonId", "initDataTableButton", "after", "afterChartFormatter", "defaultAfterChartFormatter", "nextSibling", "updateExitAnchor", "InfoRegionsComponent.prototype.onChartRender", "linkedDescriptionElement", "getLinkedDescriptionElement", "setLinkedDescriptionAttrs", "regionKey", "updateScreenReaderSection", "InfoRegionsComponent.prototype.getLinkedDescriptionElement", "linkedDescOption", "linkedDescription", "query", "queryMatch", "querySelectorAll", "InfoRegionsComponent.prototype.setLinkedDescriptionAttrs", "InfoRegionsComponent.prototype.updateScreenReaderSection", "region", "content", "sectionDiv", "hiddenDiv", "setScreenReaderSectionAttribs", "InfoRegionsComponent.prototype.setScreenReaderSectionAttribs", "sectionId", "InfoRegionsComponent.prototype.defaultBeforeChartFormatter", "beforeChartFormat", "axesDesc", "getAxesDescription", "shouldHaveSonifyBtn", "sonify", "sonification", "annotationsList", "annotationsTitleStr", "headingTagName", "typeDescription", "getTypeDescriptionText", "chartSubtitle", "getSubtitleText", "chartLongdesc", "getLongdescText", "xAxisDescription", "yAxisDescription", "playAsSoundButton", "getSonifyButtonText", "viewTableButton", "getCSV", "getDataTableButtonText", "annotationsTitle", "formattedString", "InfoRegionsComponent.prototype.defaultAfterChartFormatter", "afterChartFormat", "endOfChartMarker", "getEndOfChartMarkerText", "getLinkedDescription", "InfoRegionsComponent.prototype.getLinkedDescription", "InfoRegionsComponent.prototype.getLongdescText", "chartOptions", "captionOptions", "caption", "captionText", "InfoRegionsComponent.prototype.getTypeDescriptionText", "InfoRegionsComponent.prototype.getDataTableButtonText", "buttonId", "buttonText", "InfoRegionsComponent.prototype.getSonifyButtonText", "InfoRegionsComponent.prototype.getSubtitleText", "subtitle", "InfoRegionsComponent.prototype.getEndOfChartMarkerText", "markerText", "InfoRegionsComponent.prototype.onDataTableCreated", "viewDataTableButton", "attributes", "tree", "tabindex", "summary", "InfoRegionsComponent.prototype.focusDataTable", "tableDiv", "table", "getElementsByTagName", "InfoRegionsComponent.prototype.initSonifyButton", "sonifyButton", "defaultHandler", "stopPropagation", "announceMsg", "removeAttribute", "onclick", "el.onclick", "onPlayAsSoundClick", "InfoRegionsComponent.prototype.initDataTableButton", "tableButtonId", "tableId", "onViewDataTableClick", "viewData", "InfoRegionsComponent.prototype.getAxesDescription", "shouldDescribeColl", "collectionKey", "defaultCondition", "axes", "hasNoMap", "hasCartesian", "hasCartesianSeries", "showXAxes", "angular", "showYAxes", "getAxisDescriptionText", "InfoRegionsComponent.prototype.getAxisDescriptionText", "names", "ranges", "numAxes", "InfoRegionsComponent.prototype.destroy", "Chart", "MenuComponent", "MenuComponent.prototype.init", "onMenuShown", "onMenuHidden", "createProxyGroup", "MenuComponent.prototype.onMenuHidden", "menu", "exportContextMenu", "setExportButtonExpandedState", "MenuComponent.prototype.onMenuShown", "addAccessibleContextMenuAttribs", "MenuComponent.prototype.setExportButtonExpandedState", "stateStr", "exportButtonProxy", "buttonElement", "MenuComponent.prototype.onChartRender", "focusEl", "clearGroup", "proxyMenuButton", "exportingGroup", "MenuComponent.prototype.proxyMenuButton", "buttonEl", "exportSVGElements", "exportingOpts", "exporting", "exportButton", "addProxyElement", "click", "contextButtonTitle", "MenuComponent.prototype.createProxyGroup", "addGroup", "MenuComponent.prototype.addAccessibleContextMenuAttribs", "exportList", "exportDivElements", "children", "parentDiv", "role", "MenuComponent.prototype.getKeyboardNavigation", "onKbdPrevious", "onKbdNext", "onKbdClick", "proxy", "svgEl", "hideExportMenu", "MenuComponent.prototype.onKbdPrevious", "keyboardNavigationHandler", "a11yOptions", "highlightedExportItemIx", "highlightExportItem", "wrapAround", "highlightLastExportItem", "MenuComponent.prototype.onKbdNext", "MenuComponent.prototype.onKbdClick", "curHighlightedItem", "exportButtonElement", "openMenu", "chartShowExportMenu", "chartHideExportMenu", "onmouseout", "hideMenu", "chartHighlightExportItem", "listItem", "curHighlighted", "hasSVGFocusSupport", "onmouseover", "chartHighlightLastExportItem", "showExportMenu", "KeyboardNavigation", "components", "currentModuleIx", "NaN", "exitAnchor", "modules", "KeyboardNavigation.prototype.init", "ep", "update", "onKeydown", "onFocus", "eventName", "onMouseUp", "isClickingChart", "pointerIsOverChart", "KeyboardNavigation.prototype.update", "order", "keyboardOptions", "updateContainerTabindex", "componentName", "navModules", "removeExitAnchor", "KeyboardNavigation.prototype.updateExitAnchor", "endMarkerId", "endMarker", "makeElementAnExitAnchor", "createExitAnchor", "move", "KeyboardNavigation.prototype.move", "direction", "curModule", "newModule", "exiting", "KeyboardNavigation.prototype.onFocus", "focusComesFromChart", "contains", "tabbingInBackwards", "getFirstValidModuleIx", "KeyboardNavigation.prototype.onMouseUp", "keyboardReset", "curMod", "KeyboardNavigation.prototype.onKeydown", "ev", "event", "curNavModule", "KeyboardNavigation.prototype.updateContainerTabindex", "shouldHaveTabindex", "curTabindex", "KeyboardNavigation.prototype.createExitAnchor", "KeyboardNavigation.prototype.makeElementAnExitAnchor", "chartTabindex", "addExitAnchorEventsToEl", "KeyboardNavigation.prototype.removeExitAnchor", "KeyboardNavigation.prototype.addExitAnchorEventsToEl", "comingInBackwards", "KeyboardNavigation.prototype.getFirstValidModuleIx", "mod", "KeyboardNavigation.prototype.destroy", "chartDismissPopupContent", "tooltip", "hide", "documentOnKeydown", "charts", "dismissPopupContent", "composedItems", "A", "Legend", "shouldDoLegendA11y", "items", "legend", "allItems", "legendA11yOptions", "unsupportedColorAxis", "colorAxis", "some", "c", "dataClasses", "setLegendItemHoverState", "hoverActive", "legendItem", "setState", "_a", "animObject", "isNumber", "syncTimeout", "LegendComponent", "highlightedLegendItemIx", "proxyGroup", "LegendComponent.prototype.init", "recreateProxies", "updateGroupProxyElementPositions", "updateLegendItemProxyVisibility", "highlightLegendItem", "updateProxyPositionForItem", "globalAnimation", "duration", "LegendComponent.prototype.updateLegendItemProxyVisibility", "curPage", "currentPage", "clipHeight", "a11yProxyElement", "hasPages", "pages", "proxyEl", "itemPage", "pageIx", "h", "round", "visibility", "LegendComponent.prototype.onChartRender", "removeProxies", "highlightAdjacentLegendPage", "LegendComponent.prototype.highlightAdjacentLegendPage", "newPageIx", "LegendComponent.prototype.updateProxyPositionForItem", "refreshPosition", "LegendComponent.prototype.recreateProxies", "focusedElement", "activeElement", "shouldRestoreFocus", "addLegendProxyGroup", "proxyLegendItems", "updateLegendTitle", "LegendComponent.prototype.removeProxies", "removeGroup", "LegendComponent.prototype.updateLegendTitle", "legendTitle", "legendLabel", "updateGroupAttrs", "LegendComponent.prototype.addLegendProxyGroup", "LegendComponent.prototype.proxyLegendItems", "proxyLegendItem", "LegendComponent.prototype.proxyLegendItem", "itemLabel", "itemName", "visual", "LegendComponent.prototype.getKeyboardNavigation", "onKbdArrowKey", "shouldHaveLegendNavigation", "LegendComponent.prototype.onKbdArrowKey", "numItems", "LegendComponent.prototype.onKbdClick", "LegendComponent.prototype.shouldHaveLegendNavigation", "display", "chartHighlightLegendItem", "oldIx", "itemToHighlight", "scroll", "legendItemProp", "proxyBtn", "legendOnAfterColorizeItem", "LegendClass", "findFirstPointWithGraphic", "sourcePointIndex", "data", "hasMorePointsThanDescriptionThreshold", "threshold", "pointDescriptionEnabledThreshold", "shouldSetScreenReaderPropsOnPoints", "seriesA11yOptions", "exposeAsGroupOnly", "shouldSetKeyboardNavPropsOnPoints", "seriesNavOptions", "seriesNavigation", "pointNavigationEnabledThreshold", "pointNumberToString", "seriesA11yPointOptions", "tooltipOptions", "numberFormat", "valueDecimals", "a11yPointOptions", "decimalPoint", "thousandsSep", "getSeriesDescriptionText", "descOpt", "getSeriesAxisDescriptionText", "axisCollection", "getPointArrayMapValueDescription", "prefix", "suffix", "pre", "suf", "pointArrayMap", "defaultPointDescriptionFormatter", "shouldExposeSeriesName", "pointValueDescriptionFormat", "valueDescriptionFormat", "showXDescription", "dateXAxis", "tooltipDateFormat", "getXDateFormat", "dateTimeLabelFormats", "dateFormatter", "q", "pointCategory", "category", "canUseId", "fallback", "timeDesc", "v", "a11yPointOpts", "seriesA11yPointOpts", "valuePrefix", "valueSuffix", "fallbackDesc", "D", "isNull", "n", "xDescription", "xDesc", "separator", "userDescText", "seriesNameText", "valText", "annotationsDesc", "describePointsInSeries", "setScreenReaderProps", "setKeyboardProps", "shouldDescribeNullPoints", "describeNull", "f", "isSunburst", "is", "shouldDescribeNull", "firstGraphic", "mockPos", "plotX", "plotY", "mock", "fill", "hasMockGraphic", "pointA11yDisabled", "pointEl", "seriesPointA11yOptions", "descriptionFormatter", "defaultSeriesDescriptionFormatter", "chartTypes", "shouldDescribeAxis", "seriesNumber", "xAxisInfo", "yAxisInfo", "summaryContext", "combinationSuffix", "axisDescription", "descriptionFormat", "seriesDescription", "authorDescription", "SeriesDescriber", "describeSeries", "is3d", "hasMultipleSeries", "describeSingleSeriesOption", "describeSingleSeries", "exposeAsGroupOnlyOption", "options3d", "findPointInDataArray", "candidates", "candidate", "getUniqueSeries", "arrayA", "arrayB", "uniqueSeries", "NewDataAnnouncer", "dirty", "allSeries", "lastAnnouncementTime", "NewDataAnnouncer.prototype.init", "announceType", "announceNewData", "interruptUser", "addEventListeners", "NewDataAnnouncer.prototype.destroy", "NewDataAnnouncer.prototype.addEventListeners", "onSeriesAdded", "announceDirtyData", "NewDataAnnouncer.prototype.onSeriesAdded", "hasDirty", "newSeries", "NewDataAnnouncer.prototype.announceDirtyData", "newPoint", "queueAnnouncement", "NewDataAnnouncer.prototype.queueAnnouncement", "dirtySeries", "annOptions", "now", "Date", "minAnnounceInterval", "queuedAnnouncement", "buildAnnouncementMessage", "queuedAnnouncementTimer", "NewDataAnnouncer.prototype.buildAnnouncementMessage", "announcementFormatter", "formatterRes", "multiple", "seriesDesc", "pointDesc", "seriesOnAddPoint", "newDataAnnouncer", "seriesOnUpdatedData", "SeriesClass", "merge", "ProxyElement", "target", "groupType", "isListItem", "wrapperEl", "btnEl", "hideButtonVisually", "listStyle", "updateTarget", "ProxyElement.prototype.click", "getTargetPosition", "fakeEventObject", "ProxyElement.prototype.updateTarget", "updateCSSClassName", "attrs", "getTargetAttr", "addProxyEventsToButton", "ProxyElement.prototype.refreshPosition", "bBox", "top", "ProxyElement.prototype.remove", "ProxyElement.prototype.updateCSSClassName", "groupDiv", "noTooltipOnGroup", "noTooltipOnTarget", "ProxyElement.prototype.addProxyEventsToButton", "evtType", "isTouchEvent", "clonedEvent", "passive", "ProxyElement.prototype.hideButtonVisually", "backgroundColor", "padding", "ProxyElement.prototype.getTargetPosition", "clickTarget", "clickTargetElement", "posElement", "getBoundingClientRect", "rectEl", "chartPos", "pointer", "getChartPosition", "bottom", "ProxyElement.prototype.getTargetAttr", "ProxyProvider", "groups", "groupOrder", "beforeChartProxyPosContainer", "createProxyPosContainer", "afterChartProxyPosContainer", "ProxyProvider.prototype.addProxyElement", "groupKey", "Error", "proxyContainerElement", "proxyElements", "ProxyProvider.prototype.addGroup", "existingGroup", "groupElement", "proxyContainer", "updateGroupOrder", "ProxyProvider.prototype.updateGroupAttrs", "ProxyProvider.prototype.updateGroupOrder", "groupKeys", "isDOMOrderGroupOrder", "seriesIx", "beforeKeys", "afterKeys", "posContainer", "ProxyProvider.prototype.clearGroup", "ProxyProvider.prototype.removeGroup", "ProxyProvider.prototype.update", "updatePosContainerPositions", "updateProxyElementPositions", "ProxyProvider.prototype.updateProxyElementPositions", "bind", "ProxyProvider.prototype.updateGroupProxyElementPositions", "ProxyProvider.prototype.destroy", "ProxyProvider.prototype.createProxyPosContainer", "classNamePostfix", "getCurrentGroupOrderInDOM", "ProxyProvider.prototype.getCurrentGroupOrderInDOM", "getChildrenGroupOrder", "childrenOrder", "allGroups", "ProxyProvider.prototype.isDOMOrderGroupOrder", "domOrder", "groupOrderWithGroups", "ProxyProvider.prototype.updatePosContainerPositions", "forExport", "rendererSVGEl", "RangeSelectorDefaults", "rangeSelectorZoom", "rangeSelectorFrom", "rangeSelectorTo", "rangeSelector", "allButtonsEnabled", "buttonSpacing", "dropdown", "verticalAlign", "buttonTheme", "floating", "inputBoxBorderColor", "inputBoxHeight", "inputBoxWidth", "inputDateFormat", "inputDateParser", "inputEditDateFormat", "inputEnabled", "inputPosition", "align", "inputSpacing", "selected", "buttonPosition", "inputStyle", "labelStyle", "axisMinFromRange", "rangeOptions", "getTrueRange", "base", "count", "timeName", "date", "basePeriod", "get", "set", "getTime", "fixedRange", "MIN_VALUE", "newMax", "MAX_VALUE", "_offsetMin", "onChartAfterGetContainer", "RangeSelectorConstructor", "onChartBeforeRender", "deferredYTDClick", "clickButton", "updateNames", "setScale", "getAxisMargins", "render", "extraBottomMargin", "extraTopMargin", "onChartCallback", "alignTo", "redraw", "getExtremes", "spacingBox", "layout", "plotTop", "getHeight", "placed", "chartDestroyEvents", "events", "onChartDestroy", "iEnd", "unbind", "splice", "onChartGetMargins", "rangeSelectorHeight", "marginBottom", "optionsRangeSelector", "extraBottomMarginWas", "extraTopMarginWas", "isDirtyBox", "defaultOptions", "setOptions", "composedMembers", "RangeSelectorComposition", "AxisClass", "RangeSelectorClass", "minFromRange", "callbacks", "Axis", "SVGElement", "preferredInputType", "char", "destroyObjectProperties", "discardElement", "objectEach", "pInt", "splat", "RangeSelector", "buttonOptions", "defaultButtons", "initialButtonGroupWidth", "RangeSelector.compose", "RangeSelector.prototype.clickButton", "baseAxis", "unionExtremes", "scroller", "getUnionExtremes", "dataGrouping", "_range", "rangeMin", "addOffsetMin", "setSelected", "forcedDataGrouping", "setDataGrouping", "frozenStates", "preserveDataGrouping", "newMin", "xData", "ytdExtremes", "getYTDExtremes", "useUTC", "navigator", "baseSeries", "_offsetMax", "selectedIndex", "setExtremes", "rangeSelectorButton", "baseXAxisOptions", "rangeSetting", "minSetting", "resetMinAndRange", "RangeSelector.prototype.setSelected", "RangeSelector.prototype.init", "selectedOption", "blurInputs", "minInput", "maxInput", "blur", "eventsToUnbind", "computeButtonRange", "updateButtonStates", "RangeSelector.prototype.updateButtonStates", "actualRange", "hasNoData", "hasVisibleSeries", "ytdMin", "ytdMax", "selectedExists", "offsetRange", "isSelected", "isTooGreatRange", "isTooSmallRange", "minRange", "state", "isYTDButNotSelected", "isAllButAlreadyShowingAll", "isSameRange", "day", "month", "year", "disable", "select", "disabled", "RangeSelector.prototype.computeButtonRange", "fixedTimes", "millisecond", "second", "minute", "hour", "week", "offsetMin", "offsetMax", "getInputValue", "RangeSelector.prototype.getInputValue", "input", "defaultInputDateParser", "setInputValue", "RangeSelector.prototype.setInputValue", "inputTime", "dateBox", "minDateBox", "maxDateBox", "hcTimeAttr", "updatedTime", "previousTime", "inputTypeFormats", "setInputExtremes", "RangeSelector.prototype.setInputExtremes", "showInput", "RangeSelector.prototype.showInput", "inputGroup", "isTextInput", "border", "offsetWidth", "chartWidth", "offsetHeight", "hideInput", "RangeSelector.prototype.hideInput", "RangeSelector.prototype.defaultInputDateParser", "inputDate", "isSafari", "lastIndexOf", "getTimezoneOffset", "parse", "parts", "UTC", "drawInput", "RangeSelector.prototype.drawInput", "updateExtremes", "chartAxis", "dataAxis", "isMin", "chartStyle", "on", "boxShadow", "textAlign", "fontSize", "fontFamily", "onfocus", "input.onfocus", "onblur", "input.onblur", "keyDown", "onchange", "input.onchange", "onkeypress", "input.onkeypress", "onkeydown", "input.onkeydown", "onkeyup", "input.onkeyup", "getPosition", "RangeSelector.prototype.getPosition", "axisOffset", "buttonTop", "inputTop", "RangeSelector.prototype.getYTDExtremes", "startOfYear", "ts", "RangeSelector.prototype.render", "inputsZIndex", "rendered", "g", "renderButtons", "minElems", "minLabel", "maxElems", "maxLabel", "x_1", "alignElements", "RangeSelector.prototype.renderButtons", "states", "buttonGroup", "isMS", "currentButtonIndex", "zoomText", "paddingLeft", "paddingRight", "buttonEvents", "callDefaultEvent", "isActive", "hover", "RangeSelector.prototype.alignElements", "navButtonOptions", "navigation", "getXOffsetForExportButton", "titleCollision", "spacing", "plotLeft", "positionButtons", "width_1", "xOffsetForExportButton_1", "alignButtonGroup", "hasLoaded", "xOffsetForExportButton", "handleCollision", "alignTranslateY", "alignAttr", "groupHeight", "legendHeight", "legendOptions", "titleOffset", "translate", "floor", "_b", "RangeSelector.prototype.alignButtonGroup", "RangeSelector.prototype.positionButtons", "verb", "buttonLeft", "RangeSelector.prototype.handleCollision", "maxButtonWidth", "buttonWidth", "groupsOverlap", "buttonGroupWidth", "inputGroupX", "alignOptions", "inputGroupWidth", "buttonGroupX", "moveInputsDown", "collapseButtons", "expandButtons", "plotWidth", "RangeSelector.prototype.collapseButtons", "userButtonTheme", "getAttribs", "hasActiveButton", "show", "showDropdown", "RangeSelector.prototype.expandButtons", "hideDropdown", "RangeSelector.prototype.currentButtonIndex", "RangeSelector.prototype.showDropdown", "hasVisibleDropdown", "RangeSelector.prototype.hideDropdown", "RangeSelector.prototype.getHeight", "rangeSelectorGroup", "yPosition", "buttonPositionY", "inputPositionY", "minPosition", "RangeSelector.prototype.titleCollision", "RangeSelector.prototype.update", "RangeSelector.prototype.destroy", "rSelector", "HTMLElement", "RangeSelectorComponent", "RangeSelectorComponent.prototype.init", "RangeSelectorComponent.prototype.onChartUpdate", "updateSelectorVisibility", "setDropdownAttrs", "setRangeButtonAttrs", "setRangeInputAttrs", "RangeSelectorComponent.prototype.updateSelectorVisibility", "btn", "RangeSelectorComponent.prototype.setDropdownAttrs", "rangeTitle", "RangeSelectorComponent.prototype.setRangeButtonAttrs", "RangeSelectorComponent.prototype.setRangeInputAttrs", "onButtonNavKbdArrowKey", "RangeSelectorComponent.prototype.onButtonNavKbdArrowKey", "highlightRangeSelectorButton", "highlightedRangeSelectorItemIx", "didHighlight", "onButtonNavKbdClick", "RangeSelectorComponent.prototype.onButtonNavKbdClick", "oldRangeSelectorItemState", "onAfterBtnClick", "RangeSelectorComponent.prototype.onAfterBtnClick", "axisRangeDescription", "announcement", "onInputKbdMove", "RangeSelectorComponent.prototype.onInputKbdMove", "rangeSel", "newIx", "highlightedInputRangeIx", "inputEl", "onInputNavInit", "RangeSelectorComponent.prototype.onInputNavInit", "buttonIxToHighlight", "removeInputKeydownHandler", "keydownHandler", "minRemover_1", "maxRemover_1", "this.removeInputKeydownHandler", "onInputNavTerminate", "RangeSelectorComponent.prototype.onInputNavTerminate", "initDropdownNav", "RangeSelectorComponent.prototype.initDropdownNav", "removeDropdownKeydownHandler", "getRangeSelectorButtonNavigation", "RangeSelectorComponent.prototype.getRangeSelectorButtonNavigation", "lastButtonIx", "getRangeSelectorInputNavigation", "RangeSelectorComponent.prototype.getRangeSelectorInputNavigation", "RangeSelectorComponent.prototype.getKeyboardNavigation", "RangeSelectorComponent.prototype.destroy", "chartHighlightRangeSelectorButton", "curHighlightedIx", "curSelectedIx", "rangeSelectorAfterBtnClick", "ForcedMarkersComposition", "forceZeroOpacityMarkerOptions", "marker", "normal", "getPointMarkerOpacity", "pointOptions", "seriesOnAfterRender", "markerGroup", "a11yMarkersForced", "_hasPointMarkers", "hasForcedA11yMarker", "seriesOnAfterSetOptions", "resetA11yMarkerOptions", "seriesOnRender", "seriesA11yEnabled", "hadForcedMarker", "isStillForcedMarker", "resetMarkerOptions", "Point", "Series", "SeriesRegistry", "getPointIndex", "isSkipSeries", "seriesKbdNavOptions", "enableMouseTracking", "isSkipPoint", "skipNullPoints", "isInside", "getFirstValidPointInChart", "highlightLastValidPointInChart", "highlightedPoint", "highlightNextValidPoint", "highlightFirstValidPointInChart", "highlight", "seriesTypes", "SeriesKeyboardNavigation", "SeriesKeyboardNavigation.prototype.init", "onSeriesDestroy", "lastDrilledDownPoint", "onDrillupAll", "focusedElClassName", "isProxyFocused", "SeriesKeyboardNavigation.prototype.onDrillupAll", "last", "getKeyboardNavigationHandler", "SeriesKeyboardNavigation.prototype.getKeyboardNavigationHandler", "inverted", "onKbdSideways", "onKbdVertical", "firePointEvent", "highlightAdjacentSeries", "onHandlerInit", "onHandlerTerminate", "SeriesKeyboardNavigation.prototype.onKbdSideways", "handler", "attemptHighlightAdjacentPoint", "SeriesKeyboardNavigation.prototype.onHandlerInit", "rememberPointFocus", "SeriesKeyboardNavigation.prototype.onKbdVertical", "isNext", "navOptions", "mode", "keyboardMoveVertical", "SeriesKeyboardNavigation.prototype.onHandlerTerminate", "kbdNavOptions", "hoverSeries", "onMouseOut", "SeriesKeyboardNavigation.prototype.attemptHighlightAdjacentPoint", "directionIsNext", "highlightAdjacentPoint", "highlightSuccessful", "SeriesKeyboardNavigation.prototype.onSeriesDestroy", "SeriesKeyboardNavigation.prototype.destroy", "chartHighlightAdjacentPoint", "curPoint", "curPointIndex", "curPoints", "lastSeries", "lastPoint", "chartHighlightAdjacentPointVertical", "minDistance", "Infinity", "bestPoint", "yDistance", "distance", "reversed", "chartHighlightAdjacentSeries", "getClosestPoint", "adjacentNewPoint", "xWeight", "yWeight", "hasUndefinedPosition", "dPoint", "minIx", "pointHighlight", "highlightVisually", "onMouseOver", "seriesHighlightNextValidPoint", "start", "j", "PointClass", "highlightAdjacentPointVertical", "seriesProto", "ForcedMarkers", "Tooltip", "SeriesComponent", "SeriesComponent.compose", "SeriesComponent.prototype.init", "hideTooltipFromATWhenShown", "hideSeriesLabelsFromATWhenShown", "SeriesComponent.prototype.hideTooltipFromATWhenShown", "SeriesComponent.prototype.hideSeriesLabelsFromATWhenShown", "labelBySeries", "SeriesComponent.prototype.onChartRender", "SeriesComponent.prototype.getKeyboardNavigation", "SeriesComponent.prototype.destroy", "ZoomComponent", "focusedMapNavButtonIx", "ZoomComponent.prototype.init", "eventType", "updateProxyOverlays", "ZoomComponent.prototype.onChartUpdate", "mapNavigation", "navButtons", "setMapNavButtonAttrs", "ZoomComponent.prototype.setMapNavButtonAttrs", "labelFormatKey", "ZoomComponent.prototype.onChartRender", "ZoomComponent.prototype.updateProxyOverlays", "resetZoomButton", "createZoomProxyButton", "drillUpButton", "breadcrumbs", "list", "getButtonText", "ZoomComponent.prototype.createZoomProxyButton", "buttonProp", "getMapZoomNavigation", "ZoomComponent.prototype.getMapZoomNavigation", "onMapKbdArrow", "_keyCode", "onMapKbdTab", "onMapKbdClick", "onMapNavInit", "ZoomComponent.prototype.onMapKbdArrow", "isY", "diff", "plotHeight", "granularity", "random", "startPos", "offsetLeft", "offsetTop", "endPos", "ZoomComponent.prototype.onMapKbdTab", "isMoveOutOfRange", "isBackwards", "zoomBy", "ZoomComponent.prototype.onMapKbdClick", "ZoomComponent.prototype.onMapNavInit", "zoomIn", "zoomOut", "initialButton", "simpleButtonNavigation", "ZoomComponent.prototype.simpleButtonNavigation", "proxyProp", "onClick", "ZoomComponent.prototype.getKeyboardNavigation", "_handler", "drillUp", "whcm", "isHighContrastModeActive", "isEdge", "userAgent", "matchMedia", "matches", "getComputedStyle", "testDiv", "backgroundImage", "imageSrc", "bi", "currentStyle", "setHighContrastTheme", "highContrastModeActive", "theme", "highContrastTheme", "plotOpts", "plotOptions", "colors", "borderColor", "minColor", "maxColor", "stops", "gridLineColor", "lineColor", "minorGridLineColor", "tickColor", "fillColor", "edgeColor", "dataLabels", "connectorColor", "textOutline", "pie", "boxplot", "candlestick", "errorbar", "itemStyle", "itemHoverStyle", "itemHiddenStyle", "drilldown", "activeAxisLabelStyle", "activeDataLabelStyle", "symbolStroke", "handles", "outlineColor", "maskFill", "barBackgroundColor", "barBorderColor", "buttonArrowColor", "buttonBackgroundColor", "buttonBorderColor", "rifleColor", "trackBackgroundColor", "trackBorderColor", "Options", "langOptions", "defaultChartTitle", "chartContainerLabel", "svgContainerTitle", "graphicContainerLabel", "beforeRegionLabel", "afterRegionLabel", "heading", "descriptionSinglePoint", "descriptionMultiplePoints", "descriptionNoPoints", "playAsSoundButtonText", "playAsSoundClickAnnouncement", "legendLabelNoTitle", "zoom", "mapZoomIn", "mapZoomOut", "dropdownLabel", "minInputLabel", "maxInputLabel", "clickButtonAnnouncement", "viewAsDataTableButtonText", "tableSummary", "newDataAnnounce", "newSeriesAnnounceSingle", "newPointAnnounceSingle", "newSeriesAnnounceMultiple", "newPointAnnounceMultiple", "seriesTypeDescriptions", "arearange", "areasplinerange", "bubble", "columnrange", "funnel", "pyramid", "waterfall", "emptyChart", "mapTypeDescription", "unknownMap", "combinationChart", "defaultSingle", "defaultMultiple", "splineSingle", "splineMultiple", "lineSingle", "lineMultiple", "columnSingle", "columnMultiple", "barSingle", "barMultiple", "pieSingle", "pieMultiple", "scatterSingle", "scatterMultiple", "boxplotSingle", "boxplotMultiple", "bubbleSingle", "bubbleMultiple", "xAxisDescriptionSingular", "xAxisDescriptionPlural", "yAxisDescriptionSingular", "yAxisDescriptionPlural", "timeRangeDays", "timeRangeHours", "timeRangeMinutes", "timeRangeSeconds", "rangeFromTo", "rangeCategories", "chartMenuLabel", "menuButtonLabel", "defaultCombination", "line", "lineCombination", "spline", "splineCombination", "column", "columnCombination", "bar", "barCombination", "pieCombination", "scatter", "scatterCombination", "boxplotCombination", "bubbleCombination", "mapCombination", "mapline", "maplineCombination", "mapbubble", "mapbubbleCombination", "nullPointValue", "pointAnnotationsDescription", "traverseSetOption", "root", "optionAsArray", "prop", "opt", "deprecateFromOptionsMap", "rootOldAsArray", "rootNewAsArray", "mapToNewOptions", "getChildProp", "propAsArray", "rootOld", "rootNew", "oldOptionKey", "error", "copyDeprecatedChartOptions", "copyDeprecatedAxisOptions", "opts", "copyDeprecatedSeriesOptions", "oldToNewSeriesOptions", "exposeElementToA11y", "pointDescriptionFormatter", "skipKeyboardNavigation", "oldOption", "optionVal", "copyDeprecatedOptions", "pointDateFormat", "pointDateFormatter", "pointDescriptionThreshold", "pointNavigationThreshold", "pointValueDecimals", "pointValuePrefix", "pointValueSuffix", "screenReaderSectionFormatter", "seriesDescriptionFormatter", "onTableAnchorClick", "screenReaderRegionLabel", "rangeSelectorMaxInput", "rangeSelectorMinInput", "svgContainerEnd", "viewAsDataTable", "FocusBorder", "defaultOptionsA11Y", "defaultLangOptions", "Accessibility", "Accessibility.prototype.init", "addEventListener", "isSVG", "initComponents", "zombie", "Accessibility.prototype.initComponents", "infoRegions", "chartMenu", "customComponents", "getComponentOrder", "Accessibility.prototype.getComponentOrder", "componentsExceptSeries", "Accessibility.prototype.update", "getChartTypes", "kbdNavOrder", "Accessibility.prototype.destroy", "Accessibility.prototype.getChartTypes", "chartOnDestroy", "chartOnRender", "a11yDirty", "updateA11yEnabled", "chartOnUpdate", "newOptions", "chartUpdateA11yEnabled", "accessibilityOptions", "pointOnUpdate", "chartOnAfterDrilldown", "A11yChartUtilities", "A11yHTMLUtilities", "SeriesAccessibilityDescriber"]
}
